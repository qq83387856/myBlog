{"version":3,"sources":["webpack:///(webpack)/hot sync nonrecursive ^\\.\\/log$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/application-error.ts","webpack:///./src/app/core/commands/base-command.ts","webpack:///./src/app/core/commands/default-command.ts","webpack:///./src/app/core/containers/dialogs/sys0-alert.ts","webpack:///./src/app/core/containers/dialogs/system-close-dialog/system-close-dialog.component.html","webpack:///./src/app/core/containers/dialogs/system-close-dialog/system-close-dialog.component.scss","webpack:///./src/app/core/containers/dialogs/system-close-dialog/system-close-dialog.component.ts","webpack:///./src/app/core/controls/image-manager.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/event/base-event.ts","webpack:///./src/app/core/models/alert.ts","webpack:///./src/app/core/models/client-info.ts","webpack:///./src/app/core/models/close-event.ts","webpack:///./src/app/core/models/cursor-css.ts","webpack:///./src/app/core/models/login-info.ts","webpack:///./src/app/core/models/server-info.ts","webpack:///./src/app/core/models/sys0-alert-type.ts","webpack:///./src/app/core/server-vo/server-access-right-vo.ts","webpack:///./src/app/core/server-vo/server-ace-vo.ts","webpack:///./src/app/core/server-vo/server-acl-vo.ts","webpack:///./src/app/core/server-vo/server-cabinet-vo.ts","webpack:///./src/app/core/server-vo/server-config-file-vo.ts","webpack:///./src/app/core/server-vo/server-create-sub-data-vo.ts","webpack:///./src/app/core/server-vo/server-document-type-vo.ts","webpack:///./src/app/core/server-vo/server-document-vo.ts","webpack:///./src/app/core/server-vo/server-domain-model-vo.ts","webpack:///./src/app/core/server-vo/server-entry-vo.ts","webpack:///./src/app/core/server-vo/server-favorite-category-model-vo.ts","webpack:///./src/app/core/server-vo/server-favorite-vo.ts","webpack:///./src/app/core/server-vo/server-folder-type-vo.ts","webpack:///./src/app/core/server-vo/server-object-base-vo.ts","webpack:///./src/app/core/server-vo/server-property-detail-vo.ts","webpack:///./src/app/core/server-vo/server-search-condition-item-model-vo.ts","webpack:///./src/app/core/server-vo/server-search-condition-model-vo.ts","webpack:///./src/app/core/server-vo/server-section-model-vo.ts","webpack:///./src/app/core/server-vo/server-shortcut-model-vo.ts","webpack:///./src/app/core/server-vo/server-sys0-base-model-vo.ts","webpack:///./src/app/core/server-vo/server-tag-model-vo.ts","webpack:///./src/app/core/server-vo/server-trash-model-vo.ts","webpack:///./src/app/core/server-vo/server-version-model-vo.ts","webpack:///./src/app/core/server-xml/server-tool-button-model.ts","webpack:///./src/app/core/services/auth-guard.service.ts","webpack:///./src/app/core/services/base-model-locator.service.ts","webpack:///./src/app/core/services/command-provider.ts","webpack:///./src/app/core/services/controller.service.ts","webpack:///./src/app/core/services/http.service.ts","webpack:///./src/app/core/services/http/cookie-interceptor.ts","webpack:///./src/app/core/services/http/date-converter.ts","webpack:///./src/app/core/services/http/map-entry.ts","webpack:///./src/app/core/services/http/map-util.ts","webpack:///./src/app/core/services/http/vo-converter.ts","webpack:///./src/app/core/services/locator-service-factory.ts","webpack:///./src/app/core/services/logger.service.ts","webpack:///./src/app/core/services/login.service.ts","webpack:///./src/app/core/services/message-dialog.service.ts","webpack:///./src/app/core/services/popup.service.ts","webpack:///./src/app/core/services/progress-manager.service.ts","webpack:///./src/app/core/services/routing-manage.service.ts","webpack:///./src/app/core/services/state-util.service.ts","webpack:///./src/app/core/services/url.config.ts","webpack:///./src/app/core/services/view-manager.service.ts","webpack:///./src/app/core/services/wording.service.ts","webpack:///./src/app/core/storage-key.ts","webpack:///./src/app/core/store/action-interfaces.ts","webpack:///./src/app/core/store/core.actions.ts","webpack:///./src/app/core/store/core.effects.ts","webpack:///./src/app/core/store/core.selectors.ts","webpack:///./src/app/core/store/store-const.ts","webpack:///./src/app/core/sys0-java-script-method-type.ts","webpack:///./src/app/core/utils/external-interface.ts","webpack:///./src/app/core/utils/injector-provider.ts","webpack:///./src/app/core/utils/rsn-event-manager.ts","webpack:///./src/app/core/vo/access-right-vo.ts","webpack:///./src/app/core/vo/ace-vo.ts","webpack:///./src/app/core/vo/acl-vo.ts","webpack:///./src/app/core/vo/cabinet-vo.ts","webpack:///./src/app/core/vo/config-file-vo.ts","webpack:///./src/app/core/vo/document-vo.ts","webpack:///./src/app/core/vo/domain-vo.ts","webpack:///./src/app/core/vo/entry-vo.ts","webpack:///./src/app/core/vo/favorite-vo.ts","webpack:///./src/app/core/vo/folder-vo.ts","webpack:///./src/app/core/vo/object-base-vo.ts","webpack:///./src/app/core/vo/property-detail-vo.ts","webpack:///./src/app/core/vo/search-condition-item-vo.ts","webpack:///./src/app/core/vo/search-condition-vo.ts","webpack:///./src/app/core/vo/section-vo.ts","webpack:///./src/app/core/vo/shortcut-vo.ts","webpack:///./src/app/core/vo/sys0-base-vo.ts","webpack:///./src/app/core/vo/tag-vo.ts","webpack:///./src/app/core/vo/trash-vo.ts","webpack:///./src/app/core/vo/version-vo.ts","webpack:///./src/app/core/vo/workflow-vo.ts","webpack:///./src/app/shared/components/progress-dialog/progress-dialog.component.html","webpack:///./src/app/shared/components/progress-dialog/progress-dialog.component.scss","webpack:///./src/app/shared/components/progress-dialog/progress-dialog.component.ts","webpack:///./src/app/shared/containers/dialogs/alert-dialog/alert-dialog.component.html","webpack:///./src/app/shared/containers/dialogs/alert-dialog/alert-dialog.component.scss","webpack:///./src/app/shared/containers/dialogs/alert-dialog/alert-dialog.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./log\": \"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/hot sync ^\\\\.\\\\/log$\";","var map = {\n\t\"./login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"default~login-login-module~main-main-module~viewer-viewer-module\",\n\t\t\"login-login-module\"\n\t],\n\t\"./main/main.module\": [\n\t\t\"./src/app/main/main.module.ts\",\n\t\t\"default~login-login-module~main-main-module~viewer-viewer-module\",\n\t\t\"default~main-main-module~viewer-viewer-module\",\n\t\t\"main-main-module\"\n\t],\n\t\"./viewer/viewer.module\": [\n\t\t\"./src/app/viewer/viewer.module.ts\",\n\t\t\"default~login-login-module~main-main-module~viewer-viewer-module\",\n\t\t\"default~main-main-module~viewer-viewer-module\",\n\t\t\"viewer-viewer-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { AuthGuard } from './core/services/auth-guard.service';\r\n\r\n/**\r\n * 製品版の、アプリケーション全体のルーティング設定\r\n *\r\n * ダミーのルーティング設定を含みます\r\n *\r\n * 動的にrouting設定をロードした場合\r\n * loadChildrenに設定されたパスをwebpackが生成してくれないため\r\n * loadChildrenへのパスが行方不明になってしまう\r\n * そのため、ダミー設定をロードして予めパスを生成しておく\r\n */\r\nexport const prodRoutes: Routes = [\r\n  {\r\n    path: 'dummyMain',\r\n    loadChildren: './main/main.module#MainModule',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dummyViewer',\r\n    loadChildren: './viewer/viewer.module#ViewerModule',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n/**\r\n * 製品版のMain画面用ルーティング設定\r\n */\r\nexport const prodMainRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: './main/main.module#MainModule',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'FolViewer',\r\n    loadChildren: './main/main.module#MainModule',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n/**\r\n * 製品版のViewer画面用ルーティング設定\r\n */\r\nexport const prodViewerRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: './viewer/viewer.module#ViewerModule',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'DocViewer',\r\n    loadChildren: './viewer/viewer.module#ViewerModule',\r\n    pathMatch: 'full'\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n/**\r\n * 開発モードでの、アプリケーション全体のルーティング設定\r\n *\r\n * 開発用ログインページモジュールとcanLoadを含む\r\n *\r\n * ダミーのルーティング設定を含みます\r\n *\r\n * 動的にrouting設定をロードした場合\r\n * loadChildrenに設定されたパスをwebpackが生成してくれないため\r\n * loadChildrenへのパスが行方不明になってしまう\r\n * そのため、ダミー設定をロードして予めパスを生成しておく\r\n */\r\nexport const devRoutes: Routes = [\r\n  {\r\n    path: 'login',\r\n    loadChildren: './login/login.module#LoginModule',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dummyMain',\r\n    loadChildren: './main/main.module#MainModule',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dummyViewer',\r\n    loadChildren: './viewer/viewer.module#ViewerModule',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n/**\r\n * 開発モードのMain画面用ルーティング設定\r\n */\r\nexport const devMainRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: './main/main.module#MainModule',\r\n    pathMatch: 'full',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'FolViewer',\r\n    loadChildren: './main/main.module#MainModule',\r\n    pathMatch: 'full',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n/**\r\n * 開発モードのViewer画面用ルーティング設定\r\n */\r\nexport const devViewerRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: './viewer/viewer.module#ViewerModule',\r\n    pathMatch: 'full',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'DocViewer',\r\n    loadChildren: './viewer/viewer.module#ViewerModule',\r\n    pathMatch: 'full',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n/**\r\n * アプリケーション全体のルーティング設定\r\n *\r\n * 開発用ログインのために、production mode とdevelopment mode で異なる設定を使います\r\n *\r\n * 動的ルーティング設定のために、ダミーのルーティングを一時的にロードします\r\n */\r\nconst appRoutes: Routes = environment.production ? prodRoutes : devRoutes;\r\n\r\n/**\r\n * アプリケーションのルーティングモジュール\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RoutingManageService } from './core/services/routing-manage.service';\r\n\r\n/**\r\n * ブートストラップコンポーネント\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private routingManager: RoutingManageService) {}\r\n\r\n  ngOnInit() {\r\n    // 現在のURLを元にルーティングを動的に設定する\r\n    this.routingManager.setConfigByUrl();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nimport { environment } from '../environments/environment';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { CoreEffects } from './core/store/core.effects';\r\n\r\n/**\r\n * ルートモジュールです\r\n */\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n    StoreModule.forRoot({}),\r\n    EffectsModule.forRoot([CoreEffects]),\r\n    environment.production\r\n      ? [] // productionではdevtoolsを使わない\r\n      : StoreDevtoolsModule.instrument({\r\n          maxAge: 50 // Redux Devtoolsのデフォルト値が50であるのにならった\r\n        })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor() {}\r\n}\r\n","/**\r\n * Angularアプリケーション共通エラー\r\n */\r\nexport class ApplicationError extends Error {\r\n  /**\r\n   * コンストラクタ\r\n   * @param {string} message エラーメッセージ\r\n   */\r\n  constructor(message: string) {\r\n    super(message);\r\n    Object.setPrototypeOf(this, ApplicationError.prototype);\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { from, Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../../environments/environment.prod';\r\nimport { ApplicationError } from '../application-error';\r\nimport { DialogInterface } from '../models/dialog-interface';\r\nimport { Param } from '../models/param';\r\nimport { COMMAND_PROVIDER, CommandProvider } from '../services/command-provider';\r\nimport { Logger } from '../services/logger.service';\r\nimport { MessageDialogService } from '../services/message-dialog.service';\r\nimport { PopupService } from '../services/popup.service';\r\nimport { ProgressManager } from '../services/progress-manager.service';\r\nimport { StateUtilService } from '../services/state-util.service';\r\nimport { ViewManagerService } from '../services/view-manager.service';\r\nimport { WordingService } from '../services/wording.service';\r\nimport { InjectorProvider } from '../utils/injector-provider';\r\n\r\nimport { ISys0Command } from './i-sys0-command';\r\n\r\n/**\r\n * Commandがeffectsに返す値を表す型\r\n */\r\nexport type CommandResult = object;\r\n\r\n/**\r\n * Commandの処理終了時に呼び出すコールバックの型\r\n */\r\nexport type CommandCallback = (result: CommandResult) => void;\r\n\r\n/**\r\n * Commandの基底クラス\r\n */\r\nexport abstract class BaseCommand implements ISys0Command {\r\n  /**\r\n   * Viewオブジェクトへの参照\r\n   */\r\n  parent?: object;\r\n\r\n  /**\r\n   * イベントオブジェクトです\r\n   */\r\n  event: any;\r\n\r\n  /**\r\n   * commandId。CommandMapに定義されたActionのtypeが格納される。\r\n   */\r\n  commandId: string;\r\n\r\n  /**\r\n   * 処理中フラグ\r\n   */\r\n  protected isBusy = false;\r\n\r\n  /**\r\n   * Commandに引き渡されたActionのpayload\r\n   */\r\n  protected payload: any;\r\n\r\n  /**\r\n   * Commandの処理終了時にCommand内部で呼び出すコールバック\r\n   */\r\n  protected terminateCallback: CommandCallback;\r\n\r\n  /**\r\n   * Commandがeffectsに返す値\r\n   */\r\n  protected commandResult: CommandResult = {};\r\n\r\n  /**\r\n   * Stateに関するユーティリティサービス\r\n   */\r\n  protected stateUtilService: StateUtilService;\r\n\r\n  /**\r\n   *  Loggerサービス\r\n   */\r\n  protected logger: Logger;\r\n\r\n  /**\r\n   *  Popupサービス\r\n   */\r\n  protected popup: PopupService<DialogInterface>;\r\n\r\n  /**\r\n   * ProgressManagerサービス\r\n   */\r\n  protected progress: ProgressManager;\r\n\r\n  /**\r\n   * MessageDialogサービス\r\n   */\r\n  protected messageService: MessageDialogService;\r\n\r\n  /**\r\n   * wordingサービス\r\n   */\r\n  protected wording: WordingService;\r\n\r\n  /**\r\n   * store\r\n   */\r\n  protected store: Store<any>;\r\n\r\n  /**\r\n   * Commandを取得できるプロバイダ\r\n   */\r\n  protected commandProvider: CommandProvider;\r\n\r\n  /**\r\n   * Viewを取得できるサービス\r\n   */\r\n  protected viewManager: ViewManagerService;\r\n\r\n  /**\r\n   * DIを行うためのInjector\r\n   */\r\n  protected injector: Injector;\r\n\r\n  /**\r\n   * 指定されたプロパティ名のdescriptorを返します。プロトタイプチェーンをさかのぼります。（descriptor：プロパティの属性を記録したもの）\r\n   * @param obj オブジェクト\r\n   * @param name プロパティ名\r\n   * @returns descriptor\r\n   */\r\n  private static getPropertyDescriptor(obj: object, name: string): PropertyDescriptor | undefined {\r\n    // descriptorを取得する\r\n    const descriptor = Object.getOwnPropertyDescriptor(obj, name);\r\n    // descriptorが見つかった場合はそれを返す\r\n    if (descriptor) {\r\n      return descriptor;\r\n    }\r\n\r\n    // descriptorが見つからなかった場合\r\n    const proto = Object.getPrototypeOf(obj);\r\n    if (proto) {\r\n      // プロトタイプをさかのぼって再度試す\r\n      return this.getPropertyDescriptor(proto, name);\r\n    }\r\n\r\n    // プロトタイプをもうさかのぼれない場合はその名前のプロパティは見つからなかったということなのでundefinedを返す\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {\r\n    this.injector = InjectorProvider.get();\r\n    this.setDependencies();\r\n\r\n    /**\r\n     * コマンドのすべてのメソッドをbindするようにしました。\r\n     *\r\n     * これにより、各コマンドでbind(this)を意識する必要がなくなります。\r\n     */\r\n    const proto = Object.getPrototypeOf(this);\r\n    // tslint:disable-next-line:forin // 意図してプロトタイプチェーンをさかのぼる実装をしているのでこのlintは無効にする\r\n    for (const m in proto) {\r\n      // PropertyDescriptorを取得する\r\n      const descriptor: PropertyDescriptor | undefined = BaseCommand.getPropertyDescriptor(proto, m);\r\n      if (descriptor == null) {\r\n        continue;\r\n      }\r\n      // プロパティがfunctionならばbind処理をする（getterの場合はdescriptor.getに関数が入るのでifの中に入らない）\r\n      if (m in this && typeof descriptor.value === 'function') {\r\n        // definePropertyにて追加することにより、列挙可能なプロパティ\r\n        // とせずにメソッドを追加しています。(Object.keysなどの動きを踏襲する)\r\n        Object.defineProperty(this, m, { value: this[m].bind(this) });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Command処理を呼び出す入り口メソッド\r\n   */\r\n  abstract execCommand();\r\n\r\n  /**\r\n   * チェックが必要ならば定義します。\r\n   * 個別実装します。\r\n   *\r\n   * @param param 処理の続行をするかどうかを設定します。\r\n   * cancel trueを設定すると処理を中断します。\r\n   * isSync true処理を非同期で実行します。\r\n   *\r\n   */\r\n  abstract check(param: Param);\r\n\r\n  /**\r\n   * Reducer処理を呼び出すメソッド。このクラスではデフォルト実装を提供する。\r\n   * @param state Storeの現在のState\r\n   * @param action Storeに渡されたAction\r\n   * @returns 新しく生成されたState\r\n   */\r\n  doReducer(state: object, action: Action): object {\r\n    // 何も変更しない\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * Controllerから呼び出される際に\r\n   * @param payload Actionが格納しているpayload\r\n   * @returns effectsに返すObservable\r\n   */\r\n  execute(payload?: any): Observable<CommandResult> {\r\n    this.payload = payload;\r\n    if (payload != null) {\r\n      this.event = payload.event;\r\n      // this.eventと同じところを指すので混乱防止のため削除する\r\n      delete this.payload.event;\r\n    }\r\n    const promise = this.executeInner();\r\n    return from(promise);\r\n  }\r\n\r\n  /**\r\n   * Commandを破棄する際の処理\r\n   */\r\n  dispose() {}\r\n\r\n  /**\r\n   * 終了を通知します。\r\n   * このクラスをオーバライドして使用する場合は、必ず最後に一度だけ呼び出すようにします。\r\n   *\r\n   * terminate()の呼び出しを行なわない場合、2度目以降の処理が行なわれなくなります。\r\n   *\r\n   * また、terminate()を処理内で2度呼び出されるとApplicationErrorが発生します。\r\n   */\r\n  protected terminate() {\r\n    // ★Stitch V1.3対応　columnのサイズが変わる時、headerのstyle.widthが設定するようになっていますがdateのstyle.widthは設定されない.\r\n    // 合わないから、headerのstyle.widthを外す。\r\n    const els = window.document.getElementsByClassName('ui-table-scrollable-header-table');\r\n    if (els && els != null) {\r\n      const el: Element = els[0];\r\n      if (el && el != null && el.hasAttribute('style')) {\r\n        el.removeAttribute('style');\r\n      }\r\n    }\r\n    if (this.isBusy === false) {\r\n      if (!environment.production) {\r\n        throw new ApplicationError('You have already been notified of the end');\r\n      } else {\r\n        this.logger.info('You have already been notified of the end');\r\n      }\r\n    }\r\n    this.isBusy = false;\r\n    if (this.terminateCallback) {\r\n      this.terminateCallback(this.commandResult);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * execute()メソッドから呼ばれる起動処理本体\r\n   * @returns 非同期で結果を返すPromise\r\n   */\r\n  private executeInner(): Promise<CommandResult> {\r\n    // 非同期で結果を返すためにPromiseを生成する\r\n    const promise = new Promise<CommandResult>(resolve => {\r\n      this.terminateCallback = (result: CommandResult) => {\r\n        resolve(result);\r\n      };\r\n      this.execCommand();\r\n    }).catch(e => {\r\n      // Promiseはcatchを書かないとエラーを握りつぶす。\r\n      // setTimeoutの中でthrowすると通常のエラー処理に合流する。\r\n      setTimeout(() => {\r\n        // Promise処理の中で terminate()するとresolve()がコールされてPromise処理が終了してしまい\r\n        // terminate()後にthrowされたexceptionが握りつぶされてしまうため\r\n        // Promise内の処理を  terminate() → resolve() → throw exception から\r\n        // throw exception → terminate() → resolve() の順に処理されるように変更\r\n        this.terminate();\r\n        throw e;\r\n      });\r\n\r\n      // ここでthrowしないとvoidが返ってしまうためthrowする。\r\n      throw e;\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * DIを実施する\r\n   */\r\n  private setDependencies() {\r\n    this.stateUtilService = this.injector.get(StateUtilService);\r\n    this.logger = this.injector.get(Logger);\r\n    this.messageService = this.injector.get(MessageDialogService);\r\n    this.wording = this.injector.get(WordingService);\r\n    this.popup = this.injector.get(PopupService);\r\n    this.progress = this.injector.get(ProgressManager);\r\n    this.commandProvider = this.injector.get(COMMAND_PROVIDER);\r\n    this.viewManager = this.injector.get(ViewManagerService);\r\n    this.store = this.injector.get(Store);\r\n  }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { of } from 'rxjs';\r\n\r\nimport { BaseCommand } from './base-command';\r\n\r\n/**\r\n * デフォルトのCommand\r\n */\r\nexport class DefaultCommand extends BaseCommand {\r\n  /**\r\n   * デフォルトのReducer関数。何も影響を与えない。\r\n   * @param state\r\n   * @param action\r\n   */\r\n  doReducer(state: object, action: Action): object {\r\n    return state;\r\n  }\r\n  /**\r\n   * デフォルトのexecuteメソッド。何もしない。\r\n   */\r\n  execute() {\r\n    return of({});\r\n  }\r\n  /**\r\n   * 何もしない。\r\n   */\r\n  check() {}\r\n  /**\r\n   * デフォルトのexecCommandメソッド。何もしない。\r\n   */\r\n  execCommand() {}\r\n}\r\n","import { ComponentRef } from '@angular/core';\r\n\r\nimport { AlertDialogComponent } from '../../../shared/containers/dialogs/alert-dialog/alert-dialog.component';\r\nimport { Alert } from '../../models/alert';\r\nimport { CloseEvent } from '../../models/close-event';\r\nimport { DialogInterface } from '../../models/dialog-interface';\r\nimport { Sys0AlertType } from '../../models/sys0-alert-type';\r\nimport { PopupService } from '../../services/popup.service';\r\nimport { InjectorProvider } from '../../utils/injector-provider';\r\n\r\n/**\r\n * Sys0用のAlertクラス\r\n *\r\n * ★Stitch V1.3対応\r\n * MessageDialogServiceにて利用されるため、Coreに配置\r\n * AngularではAlertDialogComponent(Flex Alertに相当)と継承関係を取る必要がないので分離\r\n * また、AlertDialogComponentはFlex AlertFormの責務も集約する\r\n * 用語解決の責務もAlertDialogComponentに集約する\r\n *\r\n * なお、AlertDialogComponentはPrimeNGに依存するため、Sharedに配置\r\n */\r\nexport class Sys0Alert {\r\n  /**\r\n   * Alertを表示します。\r\n   *\r\n   * @param messageKey\r\n   * Alertに表示するメッセージキーを指定します。\r\n   * @param flags\r\n   * Alertに表示するボタン群を指定します。\r\n   * @param type\r\n   * Alertのエラーの種類を指定します。これにより、タイトル・アイコンが定まります。\r\n   * @param closeHandler\r\n   * Alertを閉じたときに発生したCloseEventを取得するHandlerFanctionを指定します。\r\n   * @param enableAlartCloseOnEscKeyDownFlag\r\n   * Alert表示中に、キーボードでEscキーが押された場合にAlertを閉じるかどうかを指定します。\r\n   *\r\n   * ★Stitch V1.3対応\r\n   * 引数 textをmessageKeyに変更（本メソッド呼び出し時には用語解決されていないことを明示するため）\r\n   * 引数 title・iconClassは削除\r\n   * これらは実質的にtypeによって定まっているため、\r\n   * Sys0Alert(AlertDialogComponent)側に制御を集約する\r\n   * 引数 defaultButtonFlagはAngularで不要のため、削除（詳細はAlertDialogComponentのクラスコメント参照）\r\n   * 引数 enableCloseOnEscKeyDownFlagは設定した真偽値と逆の動きをするバグがあるので、修正\r\n   */\r\n  static show(\r\n    messageKey: string = '',\r\n    flags: number = Alert.OK,\r\n    type: number = Sys0AlertType.TYPE_NONE,\r\n    closeHandler: Function | null = null,\r\n    enableCloseOnEscKeyDownFlag: boolean = true\r\n  ): ComponentRef<AlertDialogComponent> | null {\r\n    const injector = InjectorProvider.get();\r\n\r\n    // ダイアログインスタンスの生成\r\n    // ★Stitch V1.3対応\r\n    // PopUpService経由で生成\r\n    // popUpServiceが生成できるのはAngularコンポーネントなので、\r\n    // Sys0Alertでなく、AlertDialogComponentをalertとして生成する\r\n    const popup: PopupService<DialogInterface> = injector.get(PopupService);\r\n    const alert = popup.createComponentInstance(AlertDialogComponent) as ComponentRef<AlertDialogComponent>;\r\n\r\n    if (alert == null) {\r\n      return null;\r\n    }\r\n\r\n    // プロパティ設定：ボタンフラグ\r\n    if (\r\n      flags & Alert.OK ||\r\n      flags & Alert.CANCEL ||\r\n      flags & Alert.YES ||\r\n      flags & Alert.NO ||\r\n      flags & Alert.SKIP ||\r\n      flags & Alert.STOP ||\r\n      flags & Alert.RENAME\r\n    ) {\r\n      alert.instance.buttonFlags = flags;\r\n    }\r\n\r\n    // プロパティ設定：メッセージキー\r\n    alert.instance.messageKey = messageKey;\r\n\r\n    // プロパティ設定：Alertタイプ(これによりタイトル・アイコンが定まる)\r\n    alert.instance.type = type;\r\n\r\n    // プロパティ設定：CloseHandler\r\n    if (closeHandler != null) {\r\n      alert.instance.addEventListener(CloseEvent.CLOSE, closeHandler);\r\n    }\r\n\r\n    // プロパティ設定：EscキーによるClose有効化フラグ\r\n    alert.instance.enableAlartCloseOnEscKeyDownFlag = enableCloseOnEscKeyDownFlag;\r\n\r\n    // ダイアログの表示\r\n    // ★Stitch V1.3対応\r\n    // parent、modal削除\r\n    popup.addPopUp(alert);\r\n\r\n    return alert;\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvcmUvY29udGFpbmVycy9kaWFsb2dzL3N5c3RlbS1jbG9zZS1kaWFsb2cvc3lzdGVtLWNsb3NlLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Alert } from '../../../models/alert';\r\nimport { Sys0AlertType } from '../../../models/sys0-alert-type';\r\nimport { Sys0Alert } from '../sys0-alert';\r\n\r\nimport { DialogInterface } from './../../../models/dialog-interface';\r\n\r\n@Component({\r\n  selector: 'app-system-close-dialog',\r\n  templateUrl: './system-close-dialog.component.html',\r\n  styleUrls: ['./system-close-dialog.component.scss']\r\n})\r\nexport class SystemCloseDialogComponent implements OnInit, DialogInterface {\r\n  messageLabel: any;\r\n  iconType: any;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  showDialog() {\r\n    // ★Stitch V1.3対応 sys0Alertを表示する。\r\n    Sys0Alert.show(this.messageLabel, Alert.NONE, Sys0AlertType.TYPE_SYSTEM_ERROR);\r\n  }\r\n}\r\n","/**\r\n * 埋め込み画像クラスです。\r\n */\r\n// ★Stitch V1.3対応\r\n// 画像アイコンのURLはsrc/styles.scssに定義。定義したCSSクラス名を、当クラスに定義した。\r\n// 当クラスからクラス名を取得し、画面該当部分のclassに指定することで画像を表示させる。\r\nexport class ImageManager {\r\n  // フォルダーのアイコン\r\n  folder = 'folder';\r\n\r\n  // フォルダー(開)のアイコン\r\n  folderOpened = 'folderOpened';\r\n\r\n  // 文書のアイコン(複数セクション)\r\n  documents = 'documents';\r\n\r\n  // 文書のアイコン\r\n  document = 'document';\r\n\r\n  // 検索結果一覧のアイコン\r\n  searchlist = 'searchlist';\r\n\r\n  // お気に入り文書のアイコン\r\n  fav_doc = 'fav_doc';\r\n\r\n  // お気に入りフォルダーのアイコン\r\n  fav_folder = 'fav_folder';\r\n\r\n  // お気に入り検索条件のアイコン\r\n  fav_search = 'fav_search';\r\n\r\n  // フォルダー（大）のアイコン\r\n  folder_l = 'folder_l';\r\n\r\n  // お気に入り文書（大）のアイコン\r\n  fav_doc_l = 'fav_doc_l';\r\n\r\n  // お気に入りフォルダー（大）のアイコン\r\n  fav_folder_l = 'fav_folder_l';\r\n\r\n  // お気に入り検索条件（大）のアイコン\r\n  fav_search_l = 'fav_search_l';\r\n\r\n  // ゴミ箱のアイコン\r\n  trashcan = 'trashcan';\r\n\r\n  // TODOのアイコン\r\n  todo = 'todo';\r\n\r\n  // TODOのアイコン\r\n  todoIcon = 'todoIcon';\r\n\r\n  // キャビネットのアイコン\r\n  cabinet = 'cabinet';\r\n\r\n  // お気に入りアイコン\r\n  favorite = 'favorite';\r\n\r\n  // 検索アイコン\r\n  search = 'search';\r\n\r\n  // 検索条件変更アイコン\r\n  changeSearch = 'changeSearch';\r\n\r\n  // 検索条件変更ボタン\r\n  changeSearchButton = 'changeSearchButton';\r\n\r\n  // +アイコン\r\n  plus = 'plus';\r\n\r\n  // +アイコン(非アクティブ)\r\n  plusFalse = 'plusFalse';\r\n\r\n  // -アイコン\r\n  minus = 'minus';\r\n\r\n  // -アイコン(非アクティブ)\r\n  minusFalse = 'minusFalse';\r\n\r\n  // ■アイコン\r\n  bulletTitle = 'bulletTitle';\r\n\r\n  // 文書ボタンアイコン\r\n  fileButton = 'fileButton';\r\n\r\n  // フォルダーボタンアイコン\r\n  folderButton = 'folderButton';\r\n\r\n  // ビットマップのアイコン\r\n  bmp = 'bmp';\r\n\r\n  // PDFのアイコン\r\n  pdf = 'pdf';\r\n\r\n  // Wordのアイコン\r\n  doc = 'doc';\r\n\r\n  // Word2007のアイコン\r\n  docx = 'docx';\r\n\r\n  // Word(マクロ付)のアイコン\r\n  docm = 'docm';\r\n\r\n  // テキストファイルのアイコン\r\n  txt = 'txt';\r\n\r\n  // PowerPointのアイコン\r\n  ppt = 'ppt';\r\n\r\n  // PowerPoint2007のアイコン\r\n  pptx = 'pptx';\r\n\r\n  // PowerPoint(マクロ付)のアイコン\r\n  pptm = 'pptm';\r\n\r\n  // Excelのアイコン\r\n  xls = 'xls';\r\n\r\n  // Excel2007のアイコン\r\n  xlsx = 'xlsx';\r\n\r\n  // Excel(マクロ付)のアイコン\r\n  xlsm = 'xlsm';\r\n\r\n  // Excelのアイコン\r\n  csv = 'csv';\r\n\r\n  // JPEGのアイコン\r\n  jpg = 'jpg';\r\n\r\n  // PNGのアイコン\r\n  png = 'png';\r\n\r\n  // 一太郎\r\n  jtd = 'jtd';\r\n\r\n  // Tiffファイルのアイコン\r\n  tif = 'tif';\r\n\r\n  // Visioのアイコン\r\n  vsd = 'vsd';\r\n\r\n  // Visio(マクロ付き)のアイコン\r\n  vsdm = 'vsdm';\r\n\r\n  // Visio2013のアイコン\r\n  vsdx = 'vsdx';\r\n\r\n  // セクションなしの拡張子のアイコン\r\n  icon0 = 'icon0';\r\n\r\n  // システムエラーアイコン\r\n  iconSystemError = 'iconSystemError';\r\n\r\n  // 業務エラーアイコン\r\n  iconError = 'iconError';\r\n\r\n  // 警告アイコン\r\n  iconWarning = 'iconWarning';\r\n\r\n  // 確認アイコン\r\n  iconQuestion = 'iconQuestion';\r\n\r\n  // 情報アイコン\r\n  iconInfo = 'iconInfo';\r\n\r\n  bulletClose = 'bulletClose';\r\n\r\n  bulletOpen = 'bulletOpen';\r\n\r\n  // htmlのアイコン\r\n  html = 'html';\r\n\r\n  dwg = 'dwg';\r\n\r\n  lwp = 'lwp';\r\n\r\n  otr = 'otr';\r\n\r\n  prz = 'prz';\r\n\r\n  // 文書ショートカットのアイコン\r\n  txt_sc = 'txt_sc';\r\n\r\n  // 文書ショートカットのアイコン\r\n  txt_sc_l = 'txt_sc_l';\r\n\r\n  // 文書情報編集ボタンアイコン\r\n  edit = 'edit';\r\n\r\n  // 条件保存ボタンアイコン\r\n  saveFavorite = 'saveFavorite';\r\n\r\n  // 上へアイコン\r\n  up = 'up';\r\n\r\n  // 上へアイコン(非アクティブ)\r\n  upFalse = 'upFalse';\r\n\r\n  // 下へボタンアイコン\r\n  down = 'down';\r\n\r\n  // 下へボタン(非アクティブ)アイコン\r\n  downFalse = 'downFalse';\r\n\r\n  // ユーザーグループアイコン\r\n  userGroup = 'userGroup';\r\n\r\n  // ユーザーアイコン\r\n  user = 'user';\r\n\r\n  // グループアイコン\r\n  group = 'group';\r\n\r\n  // フォルダーサイズ表示アイコン\r\n  calculate = 'calculate';\r\n\r\n  // 文書情報設定の編集アイコン\r\n  toggleEdit = 'toggleEdit';\r\n\r\n  // 文書情報設定の参照アイコン\r\n  togglePreview = 'togglePreview';\r\n\r\n  // 所有権取得アイコン\r\n  ownerChange = 'ownerChange';\r\n\r\n  // 所有権取得アイコン(over)\r\n  ownerChangeOver = 'ownerChangeOver';\r\n\r\n  // 所有権取得アイコン(false)\r\n  ownerChangeFalse = 'ownerChangeFalse';\r\n\r\n  // 保存アイコン\r\n  save = 'save';\r\n\r\n  // 保存アイコン(over)\r\n  saveOver = 'saveOver';\r\n\r\n  // 保存アイコン(false)\r\n  saveFalse = 'saveFalse';\r\n\r\n  // 編集アイコン\r\n  editComment = 'editComment';\r\n\r\n  // 編集アイコン(over)\r\n  editOver = 'editOver';\r\n\r\n  // 編集アイコン(false)\r\n  editFalse = 'editFalse';\r\n\r\n  // 右へアイコン\r\n  right = 'right';\r\n\r\n  // 右へアイコン(false)\r\n  rightFalse = 'rightFalse';\r\n\r\n  // 左へアイコン\r\n  left = 'left';\r\n\r\n  // 左へアイコン(false)\r\n  leftFalse = 'leftFalse';\r\n\r\n  // 戻るアイコン\r\n  returnButton = 'returnButton';\r\n\r\n  // 前へアイコン\r\n  back = 'back';\r\n\r\n  // 前へアイコン(over)\r\n  backOver = 'backOver';\r\n\r\n  // 次へアイコン\r\n  next = 'next';\r\n\r\n  // 次へアイコン(over)\r\n  nextOver = 'nextOver';\r\n\r\n  globalGroup = 'globalGroup';\r\n\r\n  localGroup = 'localGroup';\r\n\r\n  universalGroup = 'universalGroup';\r\n\r\n  groupIcon = 'groupIcon';\r\n\r\n  userGroupIcon = 'userGroupIcon';\r\n\r\n  userIcon = 'userIcon';\r\n\r\n  // クリップ(仮)\r\n  clipIcon = 'clipIcon';\r\n\r\n  // 文書プロパティ_プロパティのカレントビューを指すアイコン\r\n  current = 'current';\r\n\r\n  // 簡単ビューア\r\n  openViewer = 'openViewer';\r\n\r\n  closeViewer = 'closeViewer';\r\n\r\n  openProperty = 'openProperty';\r\n\r\n  closeProperty = 'closeProperty';\r\n\r\n  view_list = 'view_list';\r\n\r\n  view_thumbnail = 'view_thumbnail';\r\n}\r\n","import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { Injector, NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\nimport { SystemCloseDialogComponent } from './containers/dialogs/system-close-dialog/system-close-dialog.component';\r\nimport { BaseModelLocatorService } from './services/base-model-locator.service';\r\nimport { COMMAND_PROVIDER } from './services/command-provider';\r\nimport { ControllerService } from './services/controller.service';\r\nimport { CookieInterceptor } from './services/http/cookie-interceptor';\r\nimport { locatorServiceFactory } from './services/locator-service-factory';\r\nimport { InjectorProvider } from './utils/injector-provider';\r\n\r\n/**\r\n * アプリ全体で一度だけ読み込まれるモジュール。<br>\r\n * ルートモジュールにのみ登録を行い、他のモジュールからは読み込めない\r\n */\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  declarations: [SystemCloseDialogComponent],\r\n  providers: [\r\n    { provide: COMMAND_PROVIDER, useExisting: ControllerService },\r\n    { provide: BaseModelLocatorService, useFactory: locatorServiceFactory },\r\n    { provide: HTTP_INTERCEPTORS, useClass: CookieInterceptor, multi: true }\r\n  ],\r\n  entryComponents: [SystemCloseDialogComponent]\r\n})\r\nexport class CoreModule {\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    parentModule: CoreModule,\r\n    injector: Injector\r\n  ) {\r\n    InjectorProvider.set(injector);\r\n    // 複数モジュールからの読み込み防止\r\n    if (parentModule) {\r\n      throw new Error('CoreModule is already loaded. Import it in the AppModule only.');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * 基本的なEventのプロパティを表す\r\n */\r\nexport class BaseEvent {\r\n  static readonly ACTIVATE: string = 'activate';\r\n  static readonly ADDED: string = 'added';\r\n  static readonly ADDED_TO_STAGE: string = 'addedToStage';\r\n  static readonly BROWSER_ZOOM_CHANGE: string = 'browserZoomChange';\r\n  static readonly CANCEL: string = 'cancel';\r\n  static readonly CHANGE: string = 'change';\r\n  static readonly CHANNEL_MESSAGE: string = 'channelMessage';\r\n  static readonly CHANNEL_STATE: string = 'channelState';\r\n  static readonly CLEAR: string = 'clear';\r\n  static readonly CLOSE: string = 'close';\r\n  static readonly CLOSING: string = 'closing';\r\n  static readonly COMPLETE: string = 'complete';\r\n  static readonly CONNECT: string = 'connect';\r\n  static readonly CONTEXT3D_CREATE: string = 'context3DCreate';\r\n  static readonly COPY: string = 'copy';\r\n  static readonly CUT: string = 'cut';\r\n  static readonly DEACTIVATE: string = 'deactivate';\r\n  static readonly DISPLAYING: string = 'displaying';\r\n  static readonly ENTER_FRAME: string = 'enterFrame';\r\n  static readonly EXIT_FRAME: string = 'exitFrame';\r\n  static readonly EXITING: string = 'exiting';\r\n  static readonly FRAME_CONSTRUCTED: string = 'frameConstructed';\r\n  static readonly FRAME_LABEL: string = 'frameLabel';\r\n  static readonly FULLSCREEN: string = 'fullScreen';\r\n  static readonly HTML_BOUNDS_CHANGE: string = 'htmlBoundsChange';\r\n  static readonly HTML_DOM_INITIALIZE: string = 'htmlDOMInitialize';\r\n  static readonly HTML_RENDER: string = 'htmlRender';\r\n  static readonly ID3: string = 'id3';\r\n  static readonly INIT: string = 'init';\r\n  static readonly LOCATION_CHANGE: string = 'locationChange';\r\n  static readonly MOUSE_LEAVE: string = 'mouseLeave';\r\n  static readonly NETWORK_CHANGE: string = 'networkChange';\r\n  static readonly OPEN: string = 'open';\r\n  static readonly PASTE: string = 'paste';\r\n  static readonly PREPARING: string = 'preparing';\r\n  static readonly REMOVED: string = 'removed';\r\n  static readonly REMOVED_FROM_STAGE: string = 'removedFromStage';\r\n  static readonly RENDER: string = 'render';\r\n  static readonly RESIZE: string = 'resize';\r\n  static readonly SCROLL: string = 'scroll';\r\n  static readonly SELECT: string = 'select';\r\n  static readonly SELECT_ALL: string = 'selectAll';\r\n  static readonly SOUND_COMPLETE: string = 'soundComplete';\r\n  static readonly STANDARD_ERROR_CLOSE: string = 'standardErrorClose';\r\n  static readonly STANDARD_INPUT_CLOSE: string = 'standardInputClose';\r\n  static readonly STANDARD_OUTPUT_CLOSE: string = 'standardOutputClose';\r\n  static readonly SUSPEND: string = 'suspend';\r\n  static readonly TAB_CHILDREN_CHANGE: string = 'tabChildrenChange';\r\n  static readonly TAB_ENABLED_CHANGE: string = 'tabEnabledChange';\r\n  static readonly TAB_INDEX_CHANGE: string = 'tabIndexChange';\r\n  static readonly TEXT_INTERACTION_MODE_CHANGE: string = 'textInteractionModeChange';\r\n  static readonly TEXTURE_READY: string = 'textureReady';\r\n  static readonly UNLOAD: string = 'unload';\r\n  static readonly USER_IDLE: string = 'userIdle';\r\n  static readonly USER_PRESENT: string = 'userPresent';\r\n  static readonly VIDEO_FRAME: string = 'videoFrame';\r\n  static readonly WORKER_STATE: string = 'workerState';\r\n\r\n  /**\r\n   * イベントがバブリングイベントかどうかを示します。\r\n   */\r\n  bubbles: boolean;\r\n\r\n  /**\r\n   * キャンセル可能か否か\r\n   */\r\n  cancelable: boolean;\r\n\r\n  /**\r\n   * イベントをアクティブに処理しているオブジェクト。\r\n   */\r\n  currentTarget: any;\r\n\r\n  /**\r\n   * イベントターゲット\r\n   */\r\n  target: any;\r\n\r\n  /**\r\n   * イベントのタイプ。'click'など。\r\n   */\r\n  type: string;\r\n\r\n  /**\r\n   * デフォルト処理を防ぎます。\r\n   * 基本的にAngularのイベントは自前なので\r\n   * デフォルト処理はなく、このメソッドは\r\n   * 何もしません。\r\n   * 意図的に処理をしたい場合はこのメソッドを上書きして\r\n   * 各々のイベントで意味をもたせてください。\r\n   */\r\n  preventDefault() {}\r\n}\r\n","/**\r\n * メッセージ表示画面のボタン表示用定義\r\n */\r\nexport class Alert {\r\n  /**\r\n   * ボタンを出さない値\r\n   */\r\n  static readonly NONE: number = 0x0000;\r\n\r\n  /**\r\n   * [はい]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly YES: number = 0x0001;\r\n\r\n  /**\r\n   * [いいえ]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly NO: number = 0x0002;\r\n\r\n  /**\r\n   * [OK]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly OK: number = 0x0004;\r\n\r\n  /**\r\n   * [キャンセル]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly CANCEL: number = 0x0008;\r\n\r\n  // ★Stitch V1.3対応\r\n  // 以下Sys0Alertに定義されていた独自拡張ボタン\r\n  // Alertでの集約管理に変更する\r\n\r\n  /**\r\n   * [スキップ]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly SKIP: number = 0x0010;\r\n\r\n  /**\r\n   * [名前変更]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly RENAME: number = 0x0020;\r\n\r\n  /**\r\n   * [スキップ]ボタンを有効にする値\r\n   *\r\n   * 他のボタンと同時に表示したい場合はORを取得して使用してください\r\n   * @example  Alert.OK | Alert.NO\r\n   */\r\n  static readonly STOP: number = 0x0040;\r\n\r\n  // メッセージダイアログを非モーダルにする値\r\n  // ★Stitch V1.3対応\r\n  // 非モーダルにする必要がないので削除\r\n  // static readonly NONMODAL: number = 0x8000;\r\n}\r\n","/**\r\n * クライアントアプリの設定\r\n */\r\nexport class ClientInfo {\r\n  /**\r\n   * ClientInfoはサーバーからはkeyとvalueの配列で得られる。そのキー名。\r\n   *\r\n   * それぞれ、このクラスのプロパティ名に対応する\r\n   */\r\n  static Key = class {\r\n    static readonly MAIN_DND_PATH = 'mainD&DPath';\r\n    static readonly MAIN_DND_STATUS = 'mainD&DStatus';\r\n    static readonly VIEWER_DND_PATH = 'viewerD&DPath';\r\n    static readonly VIEWER_DND_STATUS = 'viewerD&DStatus';\r\n    static readonly VIEWER_DND_DISABLE_PATH = 'viewerD&DDisablePath';\r\n    static readonly SEARCH_MAX_COUNT = 'searchMaxCount';\r\n    static readonly TRASH_MAX_COUNT = 'trashMaxCount';\r\n    static readonly TIMESTAMP_ON = 'timestampOn';\r\n    static readonly TIMESTAMP_TOTAL_TRADE_PRICE_DISPLAY_NAME = 'timestampTotalTradePriceDisplayName';\r\n  };\r\n\r\n  /**\r\n   * timestampOnメンバがONである\r\n   */\r\n  static readonly TIME_STAMP_ON = '1';\r\n\r\n  /**\r\n   * ドラッグ＆ドロップJSPパス（メイン用）\r\n   */\r\n  mainDnDPath: string;\r\n\r\n  /**\r\n   * ドラッグ＆ドロップActiveX設定～色とサイズ（メイン用）\r\n   */\r\n  mainDnDStatus: string;\r\n\r\n  /**\r\n   * ドラッグ＆ドロップJSPパス（ビューア用）\r\n   */\r\n  viewerDnDPath: string;\r\n\r\n  /**\r\n   * ドラッグ＆ドロップActiveX設定値～色とサイズ（ビューア用）\r\n   */\r\n  viewerDnDStatus: string;\r\n\r\n  /**\r\n   * ドラッグ＆ドロップJSPパス(ビューアー用 ドロップ不可)\r\n   */\r\n  viewerDnDDisablePath: string;\r\n\r\n  /**\r\n   * 検索表示最大件数\r\n   */\r\n  searchMaxCount: number;\r\n\r\n  /**\r\n   * ゴミ箱表示最大件数\r\n   */\r\n  trashMaxCount: number;\r\n\r\n  /**\r\n   * タイムスタンプ有効のチェック状態（true:有効/'0'l:無効）\r\n   */\r\n  timestampOn: boolean;\r\n\r\n  /**\r\n   * 桁数拡張(15桁)の文字列型プロパティの表示名\r\n   */\r\n  timestampTotalTradePriceDisplayName: string;\r\n\r\n  /**\r\n   * 言語情報\r\n   *\r\n   * @default ja_JP\r\n   */\r\n  local = 'ja_JP';\r\n}\r\n","import { BaseEvent } from '../event/base-event';\r\n\r\n/**\r\n * 画面クローズ時のイベントです\r\n */\r\nexport class CloseEvent extends BaseEvent {\r\n  constructor(\r\n    type: string,\r\n    bubbles: boolean = false,\r\n    cancelable: boolean = false,\r\n    // ダイアログで押下されたボタンの種類\r\n    public detail: number = -1\r\n  ) {\r\n    super();\r\n    this.type = type;\r\n    this.bubbles = bubbles;\r\n    this.cancelable = cancelable;\r\n  }\r\n}\r\n","/**\r\n * カーソルのenum\r\n */\r\nexport enum CursorType {\r\n  WAIT = 'wait',\r\n  AUTO = 'auto'\r\n}\r\n\r\n/**\r\n * D&D時cursorのenum\r\n */\r\nexport enum DragManager {\r\n  COPY = 'copy',\r\n  MOVE = 'move',\r\n  LINK = 'link',\r\n  NONE = 'none'\r\n}\r\n","/**\r\n * ログインユーザーの情報\r\n */\r\nexport class LoginInfo {\r\n  /**\r\n   * ドメイン\r\n   *\r\n   * ベーシック認証の場合は空文字列\r\n   */\r\n  domainName: string;\r\n\r\n  /**\r\n   * セッションID\r\n   */\r\n  sessionId: string;\r\n\r\n  /**\r\n   * ユーザーアカウント名\r\n   */\r\n  userName: string;\r\n\r\n  /**\r\n   * ユーザーID\r\n   *\r\n   * サーバーで管理されている形式\r\n   */\r\n  userId: string;\r\n}\r\n","/**\r\n * サーバーの設定\r\n */\r\nexport class ServerInfo {\r\n  /**\r\n   * 認証方式\r\n   *\r\n   * Windows認証:union_winAD, ベーシック認証: union_original\r\n   */\r\n  authProvider: string;\r\n\r\n  /**\r\n   * ホスト名\r\n   */\r\n  serverHostName: string;\r\n\r\n  /**\r\n   * アドレス\r\n   */\r\n  serverHostAddress: string;\r\n}\r\n","/**\r\n * Sys0Alertのエラータイプに指定する定数\r\n */\r\nexport class Sys0AlertType {\r\n  /** 無し */\r\n  static readonly TYPE_NONE: number = -1;\r\n  /** システムエラー */\r\n  static readonly TYPE_SYSTEM_ERROR: number = 0;\r\n  /** エラー */\r\n  static readonly TYPE_ERROR: number = 1;\r\n  /** 警告 */\r\n  static readonly TYPE_WARNING: number = 2;\r\n  /** 処理通知 */\r\n  static readonly TYPE_QUESTION: number = 3;\r\n  /** 情報 */\r\n  static readonly TYPE_INFO: number = 4;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 組み合わせアクセス権詳細データモデル\r\n */\r\nexport class ServerAccessRightVO {\r\n\r\n  enableReadProperty = null;\r\n\r\n  enableWriteProperty = null;\r\n\r\n  enableRead = null;\r\n\r\n  enableUpdate = null;\r\n\r\n  enableDelete = null;\r\n\r\n  enableChangeACL = null;\r\n\r\n  enableAcquireOwnship = null;\r\n\r\n  enableCreateDocument = null;\r\n\r\n  enableCreateSubFolder = null;\r\n\r\n  enableClearTrash = null;\r\n\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerAccessRightVO();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n\r\n\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { VoConverter } from '../services/http/vo-converter';\r\nimport { isAccessRightVO } from '../vo/access-right-vo';\r\nimport { isEntryVO } from '../vo/entry-vo';\r\n\r\nimport { ServerAccessRightVO } from './server-access-right-vo';\r\nimport { ServerEntryVo } from './server-entry-vo';\r\n\r\n/**\r\n * １ユーザーはドキュメントまたはショートカットオブジェクトに対するアクセス権詳細データモデル\r\n */\r\nexport class ServerAceVo {\r\n  entry = null;\r\n\r\n  accessRight = null;\r\n\r\n  detail = null;\r\n\r\n  documentDefaultaccessRight = null;\r\n\r\n  documentDefaultDetail = null;\r\n\r\n  static convert(target) {\r\n    const castPair: CastPair[] = [{ cast: isEntryVO, serverVo: ServerEntryVo }, { cast: isAccessRightVO, serverVo: ServerAccessRightVO }];\r\n\r\n    const defaultProperty = new ServerAceVo();\r\n    const pick = VoConverter.convertVoProperties(_.pick(target, _.keys(defaultProperty)), castPair, _.keys(defaultProperty));\r\n    return _.assign(defaultProperty, _.pick(pick, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { VoConverter } from '../services/http/vo-converter';\r\nimport { isAceVO } from '../vo/ace-vo';\r\nimport { isEntryVO } from '../vo/entry-vo';\r\n\r\nimport { ServerAceVo } from './server-ace-vo';\r\nimport { ServerEntryVo } from './server-entry-vo';\r\n\r\n/**\r\n * オブジェクトのアクセス権詳細データクラス\r\n * id,cabIdはアクセス権の対象のオブジェクトのID\r\n *\r\n */\r\nexport class ServerAclVo {\r\n  id = null;\r\n\r\n  cabId = null;\r\n\r\n  type = null;\r\n\r\n  owner = null;\r\n\r\n  aceList = null;\r\n\r\n  static convert(target) {\r\n    const castPair: CastPair[] = [{ cast: isEntryVO, serverVo: ServerEntryVo }, { cast: isAceVO, serverVo: ServerAceVo }];\r\n\r\n    const defaultProperty = new ServerAclVo();\r\n    const pick = VoConverter.convertVoProperties(_.pick(target, _.keys(defaultProperty)), castPair, _.keys(defaultProperty));\r\n    return _.assign(defaultProperty, _.pick(pick, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * キャビネットデータモデル\r\n */\r\nexport class ServerCabinetVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  typeId = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerCabinetVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * プロファイルデータモデル\r\n */\r\nexport class ServerConfigFileVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  profileId = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerConfigFileVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * サブデータ作成のデータモデル\r\n */\r\nexport class ServerCreateSubDataVo {\r\n  fts = null;\r\n\r\n  pdf = null;\r\n\r\n  thumbnail = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerCreateSubDataVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { VoConverter } from '../services/http/vo-converter';\r\nimport { isPropertyDetailVO } from '../vo/property-detail-vo';\r\n\r\nimport { ServerPropertyDetailVo } from './server-property-detail-vo';\r\n\r\n/**\r\n * 文書タイプ詳細モデル\r\n */\r\nexport class ServerDocumentTypeVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  ib_Form = null;\r\n\r\n  reqAttrNum = null;\r\n\r\n  category = null;\r\n\r\n  retensionYear = null;\r\n\r\n  enableProps = null;\r\n\r\n  static convert(target) {\r\n    const castPair: CastPair[] = [{ cast: isPropertyDetailVO, serverVo: ServerPropertyDetailVo }];\r\n\r\n    const defaultProperty = new ServerDocumentTypeVo();\r\n    const pick = VoConverter.convertVoProperties(_.pick(target, _.keys(defaultProperty)), castPair, _.keys(defaultProperty));\r\n    return _.assign(defaultProperty, _.pick(pick, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { VoConverter } from '../services/http/vo-converter';\r\nimport { isTagVO } from '../vo/tag-vo';\r\n\r\nimport { ServerTagModelVo } from './server-tag-model-vo';\r\n\r\n/**\r\n * 文書データモデル\r\n */\r\nexport class ServerDocumentVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  number = null;\r\n\r\n  creater = null;\r\n\r\n  lastUpdateDate = null;\r\n\r\n  retensionDate = null;\r\n\r\n  sections = null;\r\n\r\n  size = null;\r\n\r\n  typeId = null;\r\n\r\n  status = null;\r\n\r\n  version = null;\r\n\r\n  trashDoc = null;\r\n\r\n  entryDate = null;\r\n\r\n  lastAccessDate = null;\r\n\r\n  accessCount = null;\r\n\r\n  userString1 = null;\r\n\r\n  userString2 = null;\r\n\r\n  userString3 = null;\r\n\r\n  userString4 = null;\r\n\r\n  userString5 = null;\r\n\r\n  userString6 = null;\r\n\r\n  userString7 = null;\r\n\r\n  userString8 = null;\r\n\r\n  userString9 = null;\r\n\r\n  userString10 = null;\r\n\r\n  userString11 = null;\r\n\r\n  userString12 = null;\r\n\r\n  userString13 = null;\r\n\r\n  userString14 = null;\r\n\r\n  userString15 = null;\r\n\r\n  userString16 = null;\r\n\r\n  userString17 = null;\r\n\r\n  userString18 = null;\r\n\r\n  userString19 = null;\r\n\r\n  userString20 = null;\r\n\r\n  userInteger1 = null;\r\n\r\n  userInteger2 = null;\r\n\r\n  userInteger3 = null;\r\n\r\n  userInteger4 = null;\r\n\r\n  userInteger5 = null;\r\n\r\n  userInteger6 = null;\r\n\r\n  userInteger7 = null;\r\n\r\n  userInteger8 = null;\r\n\r\n  userInteger9 = null;\r\n\r\n  userInteger10 = null;\r\n\r\n  userMemo1 = null;\r\n\r\n  userMemo2 = null;\r\n\r\n  userMemo3 = null;\r\n\r\n  userMemo4 = null;\r\n\r\n  userMemo5 = null;\r\n\r\n  userDate1 = null;\r\n\r\n  userDate2 = null;\r\n\r\n  userDate3 = null;\r\n\r\n  userDate4 = null;\r\n\r\n  userDate5 = null;\r\n\r\n  userNumber = null;\r\n\r\n  autoNumber = null;\r\n\r\n  memo = null;\r\n\r\n  workFlowStatus = null;\r\n\r\n  applicant = null;\r\n\r\n  approver = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  pathIds = null;\r\n\r\n  pathNames = null;\r\n\r\n  tagList = null;\r\n\r\n  thumbnailData = null;\r\n\r\n  versionMemo = null;\r\n\r\n  waitingApprover = null;\r\n\r\n  static convert(target) {\r\n    const castPair: CastPair[] = [{ cast: isTagVO, serverVo: ServerTagModelVo }];\r\n\r\n    const defaultProperty = new ServerDocumentVo();\r\n    const pick = VoConverter.convertVoProperties(_.pick(target, _.keys(defaultProperty)), castPair, _.keys(defaultProperty));\r\n    return _.assign(defaultProperty, _.pick(pick, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * ドメイン用のデータモデル\r\n */\r\nexport class ServerDomainModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  folderType = null;\r\n\r\n  phoneticName = null;\r\n\r\n  pathName = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerDomainModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * UDから取得したエントリ（ユーザー、グループ）\r\n */\r\nexport class ServerEntryVo {\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  domainName = null;\r\n\r\n  entryType = null;\r\n\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  index = null;\r\n\r\n  // ★Stitch V1.3対応 サーバー側のコピーライブラリ対応のため、isProtectedからprotedtedに変更\r\n  protected = null;\r\n\r\n  longName = null;\r\n\r\n  mailAddress = null;\r\n\r\n  mailAddressList = null;\r\n\r\n  phoneticName = null;\r\n\r\n  propPrefixes = null;\r\n\r\n  shortName = null;\r\n\r\n  userSpace = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerEntryVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { FavoriteCategoryVO } from '../vo/favorite-category-vo';\r\n\r\n/**\r\n * お気に入りカテゴリーデータモデル\r\n */\r\nexport class ServerFavoriteCategoryModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  size = null;\r\n\r\n  typeId = null;\r\n\r\n  pathIds = null;\r\n\r\n  pathNames = null;\r\n\r\n  isSystemCategory = null;\r\n\r\n  categoryType = null;\r\n\r\n  profileId = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerFavoriteCategoryModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { VoConverter } from '../services/http/vo-converter';\r\nimport { isDocumentVO } from '../vo/document-vo';\r\nimport { isFolderVO } from '../vo/folder-vo';\r\n\r\nimport { ServerDocumentVo } from './server-document-vo';\r\nimport { ServerFolderTypeVo } from './server-folder-type-vo';\r\n\r\n/**\r\n * お気に入データモデル\r\n */\r\nexport class ServerFavoriteVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  profileId = null;\r\n\r\n  linkId = null;\r\n\r\n  targetType = null;\r\n\r\n  digest = null;\r\n\r\n  isDefault = null;\r\n\r\n  pathIds = null;\r\n\r\n  pathNames = null;\r\n\r\n  linkObject = null;\r\n\r\n  static convert(target) {\r\n    const castPair: CastPair[] = [{ cast: isDocumentVO, serverVo: ServerDocumentVo }, { cast: isFolderVO, serverVo: ServerFolderTypeVo }];\r\n\r\n    const defaultProperty = new ServerFavoriteVo();\r\n    const pick = VoConverter.convertVoProperties(_.pick(target, _.keys(defaultProperty)), castPair, _.keys(defaultProperty));\r\n    return _.assign(defaultProperty, _.pick(pick, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * フォルダタイプの定数\r\n */\r\nexport class ServerFolderTypeVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  size = null;\r\n\r\n  typeId = null;\r\n\r\n  pathIds = null;\r\n\r\n  pathNames = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerFolderTypeVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { isAclVO } from '../vo/acl-vo';\r\nimport { isCabinetVO } from '../vo/cabinet-vo';\r\nimport { isDocumentVO } from '../vo/document-vo';\r\nimport { isFavoriteVO } from '../vo/favorite-vo';\r\nimport { isFolderVO } from '../vo/folder-vo';\r\nimport { ObjectBaseVO } from '../vo/object-base-vo';\r\nimport { isShortcutVO } from '../vo/shortcut-vo';\r\nimport { isTrashVO } from '../vo/trash-vo';\r\n\r\nimport { ServerAclVo } from './server-acl-vo';\r\nimport { ServerCabinetVo } from './server-cabinet-vo';\r\nimport { ServerDocumentVo } from './server-document-vo';\r\nimport { ServerFavoriteVo } from './server-favorite-vo';\r\nimport { ServerFolderTypeVo } from './server-folder-type-vo';\r\nimport { ServerShortcutModelVo } from './server-shortcut-model-vo';\r\nimport { ServerTrashModelVo } from './server-trash-model-vo';\r\n\r\n/**\r\n * Sys0上で使用するオブジェクト（文書、ショートカット、フォルダ、お気に入り、ごみ箱、キャビネットなど）のベースモデル。\r\n */\r\nexport class ServerObjectBaseVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  static convert(target): ObjectBaseVO {\r\n    const childs: CastPair[] = [\r\n      { cast: isAclVO, serverVo: ServerAclVo },\r\n      { cast: isCabinetVO, serverVo: ServerCabinetVo },\r\n      { cast: isDocumentVO, serverVo: ServerDocumentVo },\r\n      { cast: isFavoriteVO, serverVo: ServerFavoriteVo },\r\n      { cast: isFolderVO, serverVo: ServerFolderTypeVo },\r\n      { cast: isShortcutVO, serverVo: ServerShortcutModelVo },\r\n      { cast: isTrashVO, serverVo: ServerTrashModelVo }\r\n    ];\r\n\r\n    let defaultProperty: any = null;\r\n    for (const child of childs) {\r\n      if (child.cast(target)) {\r\n        if (child.serverVo.convert) {\r\n          return child.serverVo.convert(target);\r\n        } else {\r\n          defaultProperty = child.serverVo;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (defaultProperty == null) {\r\n      defaultProperty = new ServerObjectBaseVo();\r\n    }\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 属性詳細データモデル\r\n */\r\nexport class ServerPropertyDetailVo {\r\n  displayName = null;\r\n\r\n  editableEntry = null;\r\n\r\n  editableUpdate = null;\r\n\r\n  initialValue = null;\r\n\r\n  maxSize = null;\r\n\r\n  name = null;\r\n\r\n  notNull = null;\r\n\r\n  overWordBook = null;\r\n\r\n  propDispIdx = null;\r\n\r\n  searchDispIdx = null;\r\n\r\n  type = null;\r\n\r\n  wordBookName = null;\r\n\r\n  resultDispIdx = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerPropertyDetailVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 詳細検索の検索項目データモデル\r\n */\r\nexport class ServerSearchConditionItemModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  values = null;\r\n\r\n  keyword = null;\r\n\r\n  intValueFrom = null;\r\n\r\n  intValueTo = null;\r\n\r\n  dateValueFrom = null;\r\n\r\n  dateValueTo = null;\r\n\r\n  dateConditionType = null;\r\n\r\n  dateConditionPattern = null;\r\n\r\n  matchConditionType = null;\r\n\r\n  sizeConditionType = null;\r\n\r\n  sizeConditionPattern = null;\r\n\r\n  type = null;\r\n\r\n  matchPattern = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerSearchConditionItemModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { VoConverter } from '../services/http/vo-converter';\r\nimport { isCabinetVO } from '../vo/cabinet-vo';\r\nimport { isFolderVO } from '../vo/folder-vo';\r\nimport { isSearchConditionItemVO } from '../vo/search-condition-item-vo';\r\n\r\nimport { ServerCabinetVo } from './server-cabinet-vo';\r\nimport { ServerFolderTypeVo } from './server-folder-type-vo';\r\nimport { ServerSearchConditionItemModelVo } from './server-search-condition-item-model-vo';\r\n\r\n/**\r\n * 検索条件データモデル\r\n */\r\nexport class ServerSearchConditionModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  digest = null;\r\n\r\n  type = null;\r\n\r\n  range = null;\r\n\r\n  sort = null;\r\n\r\n  docProps = null;\r\n\r\n  keywords = null;\r\n\r\n  orKeywords = null;\r\n\r\n  notKeywords = null;\r\n\r\n  searchDocument = null;\r\n\r\n  searchFolder = null;\r\n\r\n  fts = null;\r\n\r\n  searchSubFolder = null;\r\n\r\n  documentTypeId = null;\r\n\r\n  documentTypeName = null;\r\n\r\n  boolOperator = null;\r\n\r\n  items = null;\r\n\r\n  keyword = null;\r\n\r\n  orKeyword = null;\r\n\r\n  notKeyword = null;\r\n\r\n  sortKey = null;\r\n\r\n  sortOrder = null;\r\n\r\n  isExpanded = null;\r\n\r\n  static convert(target) {\r\n    const castPair: CastPair[] = [\r\n      { cast: isCabinetVO, serverVo: ServerCabinetVo },\r\n      { cast: isFolderVO, serverVo: ServerFolderTypeVo },\r\n      { cast: isSearchConditionItemVO, serverVo: ServerSearchConditionItemModelVo }\r\n    ];\r\n\r\n    const defaultProperty = new ServerSearchConditionModelVo();\r\n    const pick = VoConverter.convertVoProperties(_.pick(target, _.keys(defaultProperty)), castPair, _.keys(defaultProperty));\r\n    return _.assign(defaultProperty, _.pick(pick, _.keys(defaultProperty)));\r\n  }\r\n}\r\n\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * セクションデータモデル\r\n */\r\nexport class ServerSectionModelVo {\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  dataFilePath = null;\r\n\r\n  dataSize = null;\r\n\r\n  enableFullText = null;\r\n\r\n  enablePDF = null;\r\n\r\n  enableThumbnail = null;\r\n\r\n  fullTextFilePath = null;\r\n\r\n  icon = null;\r\n\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  pdfFilePath = null;\r\n\r\n  sectionNo = null;\r\n\r\n  thumbnailFilePath = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerSectionModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * ショートカットデータモデル\r\n */\r\nexport class ServerShortcutModelVo {\r\n  cabId = null;\r\n\r\n  children = null;\r\n\r\n  createDate = null;\r\n\r\n  icon = null;\r\n\r\n  id = null;\r\n\r\n  linkId = null;\r\n\r\n  linkName = null;\r\n\r\n  linkPathNames = null;\r\n\r\n  name = null;\r\n\r\n  parentId = null;\r\n\r\n  pathIds = null;\r\n\r\n  pathNames = null;\r\n\r\n  type = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerShortcutModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { isConfigFileVO } from '../vo/config-file-vo';\r\nimport { isDomainVO } from '../vo/domain-vo';\r\nimport { isEntryVO } from '../vo/entry-vo';\r\nimport { isObjectBaseVO } from '../vo/object-base-vo';\r\nimport { isSearchConditionItemVO } from '../vo/search-condition-item-vo';\r\nimport { isSearchConditionVO } from '../vo/search-condition-vo';\r\nimport { isSectionVO } from '../vo/section-vo';\r\nimport { isVersionVO } from '../vo/version-vo';\r\nimport { isWorkflowVO } from '../vo/workflow-vo';\r\n\r\nimport { ServerConfigFileVo } from './server-config-file-vo';\r\nimport { ServerDomainModelVo } from './server-domain-model-vo';\r\nimport { ServerEntryVo } from './server-entry-vo';\r\nimport { ServerObjectBaseVo } from './server-object-base-vo';\r\nimport { ServerSearchConditionItemModelVo } from './server-search-condition-item-model-vo';\r\nimport { ServerSearchConditionModelVo } from './server-search-condition-model-vo';\r\nimport { ServerSectionModelVo } from './server-section-model-vo';\r\nimport { ServerVersionModelVo } from './server-version-model-vo';\r\n\r\n/**\r\n * ベースデータモデル\r\n */\r\nexport class ServerSys0BaseModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  static convert(target) {\r\n    const childs: CastPair[] = [\r\n      { cast: isConfigFileVO, serverVo: ServerConfigFileVo },\r\n      { cast: isDomainVO, serverVo: ServerDomainModelVo },\r\n      { cast: isEntryVO, serverVo: ServerEntryVo },\r\n      { cast: isObjectBaseVO, serverVo: ServerObjectBaseVo },\r\n      { cast: isSearchConditionItemVO, serverVo: ServerSearchConditionItemModelVo },\r\n      { cast: isSearchConditionVO, serverVo: ServerSearchConditionModelVo },\r\n      { cast: isSectionVO, serverVo: ServerSectionModelVo },\r\n      { cast: isVersionVO, serverVo: ServerVersionModelVo }\r\n      // { cast: isWorkflowVO, serverVo: ServerWorkflowVO }\r\n    ];\r\n\r\n    let defaultProperty: any = null;\r\n    for (const child of childs) {\r\n      if (child.cast(target)) {\r\n        if (child.serverVo.convert) {\r\n          return child.serverVo.convert(target);\r\n        } else {\r\n          defaultProperty = child.serverVo;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (defaultProperty == null) {\r\n      defaultProperty = new ServerSys0BaseModelVo();\r\n    }\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\nclass CastPair {\r\n  cast: Function;\r\n  serverVo: any;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 付箋データモデル\r\n */\r\nexport class ServerTagModelVo {\r\n  sectionNo = null;\r\n\r\n  tagColor = null;\r\n\r\n  tagText = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerTagModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * ゴミ箱データモデル\r\n */\r\nexport class ServerTrashModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  type = null;\r\n\r\n  icon = null;\r\n\r\n  children = null;\r\n\r\n  parentId = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerTrashModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 版のデータモデル\r\n */\r\nexport class ServerVersionModelVo {\r\n  id = null;\r\n\r\n  name = null;\r\n\r\n  cabId = null;\r\n\r\n  createDate = null;\r\n\r\n  docId = null;\r\n\r\n  checkinDate = null;\r\n\r\n  checkinUser = null;\r\n\r\n  comment = null;\r\n\r\n  sections = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerVersionModelVo();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * ツールボタンデータモデル\r\n *\r\n * XML由来\r\n */\r\nexport class ServerToolButtonModel {\r\n  name = null;\r\n\r\n  styleName = null;\r\n\r\n  toolTipResource = null;\r\n\r\n  static convert(target) {\r\n    const defaultProperty = new ServerToolButtonModel();\r\n    return _.assign(defaultProperty, _.pick(target, _.keys(defaultProperty)));\r\n  }\r\n}\r\n","import 'url-search-params-polyfill';\r\n\r\nimport { Location } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { StorageKey } from '../storage-key';\r\n\r\nimport { HttpService } from './http.service';\r\nimport { Logger } from './logger.service';\r\nimport { LoginService } from './login.service';\r\n\r\n/**\r\n * このサービスは開発モード用です\r\n *\r\n * 認証のブロックされているかどうかをによってページをナビゲートします\r\n *\r\n * 製品版では呼ばれることはないが、スクリプトとして含まれてInjectionシステムに登録されてしまうので\r\n * publicメソッドの先頭でブロックします\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanLoad {\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private logger: Logger,\r\n    private httpService: HttpService,\r\n    private location: Location\r\n  ) {}\r\n\r\n  /**\r\n   * 遅延ロード前に呼ばれる\r\n   *\r\n   * @param route\r\n   */\r\n  canLoad(route: Route): boolean | Observable<boolean> | Promise<boolean> {\r\n    const url = this.location.path();\r\n    const urlSplit: string[] = url.split('?');\r\n    // /rsn/xxx?aaa=111&bbb=222 から  /xxx　部分だけ抜き出し\r\n    const urlParam: string = urlSplit[0];\r\n    // /rsn/xxx?aaa=111&bbb=222 から  getパラメータ部分だけ抜き出し\r\n    const queryParams: URLSearchParams = new URLSearchParams(urlSplit.length === 1 ? '' : urlSplit[1]);\r\n\r\n    const ret = this.checkLogin(urlParam, queryParams);\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 未認証ならログインページに遷移する\r\n   *\r\n   * @param urlParam\r\n   */\r\n  private checkLogin(urlParam: string, queryParams: URLSearchParams): boolean | Observable<boolean> {\r\n    const accessToken = localStorage.getItem(StorageKey.token);\r\n    if (accessToken) {\r\n      // コネクト状態の確認を行い、トークンのチェックを行う\r\n      return this.httpService.isConnectServerInner().pipe(\r\n        map(result => {\r\n          // トークン期限切れもこちらの判定に入ってしまう\r\n          return true;\r\n        }),\r\n        catchError(error => {\r\n          // サーバコネクトに失敗した場合はトークンが不正とする\r\n          this.redirectToLoginPage(urlParam, queryParams);\r\n          return of(false);\r\n        })\r\n      );\r\n    } else {\r\n      // トークンが取得できなかったら未ログインとする\r\n      this.redirectToLoginPage(urlParam, queryParams);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ログインページに遷移し、ログイン後のリダイレクトページ設定を行う\r\n   * @param urlParam\r\n   * @param queryParams\r\n   */\r\n  private redirectToLoginPage(urlParam: string, queryParams: URLSearchParams) {\r\n    // リダイレクト用にクエリパラメタを保存\r\n    const redirectQueryParams = { queryParams: {} };\r\n    queryParams.forEach((value, key) => {\r\n      redirectQueryParams.queryParams[key] = value;\r\n    });\r\n\r\n    this.loginService.queryParams = redirectQueryParams;\r\n    this.loginService.setRedirectUrl(urlParam); // 認証成功したらここにリダイレクト\r\n\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { BaseModelLocator } from '../locator/base-model-locator';\r\nimport { InjectorProvider } from '../utils/injector-provider';\r\n\r\n/**\r\n * BaseModelLocatorを保持するサービスの基底クラス\r\n */\r\nexport class BaseModelLocatorService {\r\n  locator: BaseModelLocator;\r\n\r\n  /**\r\n   * 唯一つのインスタンスを取得する。\r\n   */\r\n  static getInstance() {\r\n    return InjectorProvider.get().get(BaseModelLocatorService).locator;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { BaseCommand } from '../commands/base-command';\r\nimport { ISupportCommandMap } from '../commands/i-support-command-map';\r\n\r\n/**\r\n * Command取得の機能だけを提供するサービス\r\n */\r\nexport interface CommandProvider {\r\n  /**\r\n   * Commandのインスタンスを取得する\r\n   * @param view CommandMapを所持するViewへの参照\r\n   * @param type Actionのtype\r\n   * @returns Commandのインスタンス。見つからないときはDefaultCommandを返す。\r\n   */\r\n  getCommand(view: ISupportCommandMap, type: string): BaseCommand;\r\n\r\n  /**\r\n   * Commandのインスタンスを取得して実行する\r\n   * @param view CommandMapを所持するViewへの参照\r\n   * @param type Actionのtype\r\n   * @param event Commandに与えるevent\r\n   */\r\n  execCommand(view: ISupportCommandMap, type: string, event: any): void;\r\n\r\n  /**\r\n   * メニューキーとアクションを紐付けるMap定義を更新する\r\n   * @param menuToActionMap メニューキーとアクションを紐付けるMap定義\r\n   */\r\n  setMenuToActionMap(menuToActionMap: Map<string, string>): void;\r\n\r\n  /**\r\n   * メニューキーからActionのtypeを解決する\r\n   * @param menu メニューキー\r\n   * @return Actionのtype\r\n   */\r\n  getMenuAction(menu: string): string | undefined;\r\n\r\n  /**\r\n   * メニューキーからActionのtypeを解決し、Commandのインスタンスを取得する\r\n   * @param view CommandMapを所持するViewへの参照\r\n   * @param menu メニューキー\r\n   * @returns Commandのインスタンス。見つからないときはnullを返す。\r\n   */\r\n  getMenuCommand(view: ISupportCommandMap, menu: string): BaseCommand | null;\r\n}\r\n\r\n/**\r\n * CommandProviderを取得するためのトークン\r\n */\r\nexport const COMMAND_PROVIDER = new InjectionToken<CommandProvider>('CommandProvider');\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType } from '@ngrx/effects';\r\nimport { Action } from '@ngrx/store';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\n\r\nimport { ApplicationError } from '../application-error';\r\nimport { BaseCommand, CommandResult } from '../commands/base-command';\r\nimport { DefaultCommand } from '../commands/default-command';\r\nimport { ISupportCommandMap } from '../commands/i-support-command-map';\r\nimport { actionHasParentObject } from '../store/action-interfaces';\r\nimport { InjectorProvider } from '../utils/injector-provider';\r\n\r\nimport { CommandProvider } from './command-provider';\r\nimport { IViewCommandMapMapping } from './i-view-command-map-mapping';\r\nimport { Logger } from './logger.service';\r\n\r\n/**\r\n * Action（type）からCommandへのマッピングを表す型\r\n */\r\ntype CommandMap = Map<string, BaseCommand>;\r\n\r\n/**\r\n * ActionをもとにCommandの生成・実行を行うAngular Service\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ControllerService implements CommandProvider {\r\n  public viewCommands: IViewCommandMapMapping;\r\n  /**\r\n   * 複数の「Action（type）からCommandのマッピング」を、何らかのオブジェクト（典型的にはView）に紐づけて保持するMap\r\n   */\r\n  private commandMaps = new Map<ISupportCommandMap, CommandMap>();\r\n\r\n  /**\r\n   * メニューキーとアクションを紐付けるマップ定義\r\n   */\r\n  private menuToActionMap = new Map<string, string>();\r\n\r\n  /**\r\n   * デフォルトのCommandインスタンスを取得します\r\n   */\r\n  private static getDefaultCommand() {\r\n    return new DefaultCommand();\r\n  }\r\n\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * CommandMapを追加する\r\n   * @param defOwner CommandMap定義を所有するオブジェクトへの参照。典型的にはViewを指す。\r\n   */\r\n  addCommandMap(defOwner: ISupportCommandMap) {\r\n    // もし既存のCommandMapオブジェクトがあれば削除する\r\n    this.deleteCommandMap(defOwner);\r\n    // CommandMapオブジェクトを生成する\r\n    const commandMap = new Map<string, BaseCommand>(); // new CommandMap() と同じ意味\r\n    // CommandMap定義を取得\r\n    const def = this.viewCommands.getCommandMap(defOwner);\r\n    // ViewにCommandMap定義をセットする\r\n    defOwner.commandMapDef = def;\r\n    // CommandMap定義に沿ってCommandを生成する\r\n    def.forEach(item => {\r\n      const command = new item.command();\r\n      command.parent = defOwner;\r\n      command.commandId = item.action;\r\n      commandMap.set(item.action, command);\r\n    });\r\n    // CommandsMapオブジェクトをオブジェクト（view）に紐づけて保持する\r\n    this.commandMaps.set(defOwner, commandMap);\r\n  }\r\n\r\n  /**\r\n   * CommandMapを削除する\r\n   * @param defOwner CommandMap定義を所有するオブジェクトへの参照。典型的にはViewを指す。\r\n   */\r\n  deleteCommandMap(defOwner: ISupportCommandMap) {\r\n    // 指定された定義所有者に紐づくCommandMapオブジェクトを探す\r\n    const commandMap = this.commandMaps.get(defOwner);\r\n    if (commandMap == null) {\r\n      return;\r\n    }\r\n\r\n    // 個々のCommandの破棄処理を行う\r\n    commandMap.forEach(command => command.dispose());\r\n\r\n    this.commandMaps.delete(defOwner);\r\n  }\r\n\r\n  /**\r\n   * アクションを元にコマンドを呼び出してその結果でアクションを返す。\r\n   * @param actions$\r\n   * @param type 処理する対象のActionのtype\r\n   * @param SuccessClass 成功時に返すAction\r\n   * @param ErrorClass エラー時に返すAction\r\n   * @returns 成功時に返すActionを格納するObservable\r\n   */\r\n  doSideEffect<SUCCESS_T extends Action, ERROR_T extends Action>(\r\n    actions$: Actions<Action>,\r\n    type: string,\r\n    SuccessClass?: new (result: CommandResult) => SUCCESS_T,\r\n    ErrorClass?: new (error: any) => ERROR_T\r\n  ) {\r\n    return actions$.pipe(\r\n      ofType(type),\r\n      switchMap(action =>\r\n        this.getCommandInstance(action)\r\n          .execute(action['payload'])\r\n          .pipe(\r\n            map(result => SuccessClass && new SuccessClass(result)),\r\n            catchError(error => of(ErrorClass && new ErrorClass(error)))\r\n          )\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * アクションを元にコマンドのreducer関数を呼び出してその結果を返す。\r\n   * @param state 現在のState\r\n   * @param action 実行するAction\r\n   * @returns 新しいState\r\n   */\r\n  doReducer(state: object, action: Action): object {\r\n    return this.getCommandInstance(action).doReducer(state, action);\r\n  }\r\n\r\n  /**\r\n   * Commandのインスタンスを検索して返す。\r\n   * @param view CommandMap定義を保持するViewへの参照\r\n   * @param type ActionType\r\n   * @returns Command。見つからないときはDefaultCommandを返す。\r\n   */\r\n  getCommand(view: ISupportCommandMap, type: string) {\r\n    const commandMap = this.commandMaps.get(view);\r\n    const instance = commandMap && commandMap.get(type);\r\n    if (instance == null) {\r\n      const logger = InjectorProvider.get().get(Logger);\r\n      const message = `ControllerService#getCommand: command not found(${type}, ${view.constructor.name})`;\r\n      logger.error(message);\r\n      return ControllerService.getDefaultCommand();\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Commandから呼び出されることを想定\r\n   * （ComponentはActionをdispatchしてください）\r\n   * Commandのインスタンスを取得して実行する\r\n   * @param view CommandMapを所持するViewへの参照\r\n   * @param type Actionのtype\r\n   * @param event Commandに与えるevent\r\n   */\r\n  execCommand(view: ISupportCommandMap, type: string, event: any): void {\r\n    const command = this.getCommand(view, type);\r\n    if (command == null) {\r\n      throw new ApplicationError('Failed to get command instance: ' + type);\r\n    }\r\n    command.event = event;\r\n    command.execCommand();\r\n  }\r\n\r\n  /**\r\n   * メニューキーとアクションを紐付けるMap定義を更新する\r\n   * @param menuToActionMap メニューキーとアクションを紐付けるMap定義\r\n   */\r\n  setMenuToActionMap(menuToActionMap: Map<string, string>): void {\r\n    this.menuToActionMap = menuToActionMap;\r\n  }\r\n\r\n  /**\r\n   * メニューキーからActionのtypeを解決する\r\n   * @param menu メニューキー\r\n   * @return Actionのtype\r\n   */\r\n  getMenuAction(menu: string): string | undefined {\r\n    return this.menuToActionMap.get(menu);\r\n  }\r\n\r\n  /**\r\n   * メニューキーからActionのtypeを解決し、Commandのインスタンスを検索して返す。\r\n   * @param view CommandMap定義を保持するViewへの参照\r\n   * @param menu メニューキー\r\n   * @returns Command。見つからないときはnullを返す。\r\n   */\r\n  getMenuCommand(view: ISupportCommandMap, menu: string) {\r\n    const type = this.getMenuAction(menu);\r\n    if (type == null) {\r\n      const logger = InjectorProvider.get().get(Logger);\r\n      const message = `ControllerService#getMenuCommand: action not found(${menu})`;\r\n      logger.error(message);\r\n      return null;\r\n    }\r\n\r\n    if (!this.hasCommand(view, type)) {\r\n      return null;\r\n    }\r\n    return this.getCommand(view, type);\r\n  }\r\n\r\n  /**\r\n   * Commandのインスタンスを検索して返す。\r\n   * @param action Action\r\n   * @returns Command。見つからないときはDefaultCommandを返す。\r\n   */\r\n  private getCommandInstance(action: Action): BaseCommand {\r\n    if (!actionHasParentObject(action)) {\r\n      const logger = InjectorProvider.get().get(Logger);\r\n      const message = `ControllerService#getCommandInstance: parent missing for action(${action.type})`;\r\n      logger.error(message);\r\n      return ControllerService.getDefaultCommand();\r\n    }\r\n    const parent = action.parentObject;\r\n    return this.getCommand(parent, action.type);\r\n  }\r\n\r\n  /**\r\n   * Commandのインスタンスを検索して返す。\r\n   * @param view CommandMap定義を保持するViewへの参照\r\n   * @param type ActionType\r\n   */\r\n  private hasCommand(view: ISupportCommandMap, type: string): boolean {\r\n    const commandMap = this.commandMaps.get(view);\r\n    const instance = commandMap && commandMap.get(type);\r\n    return instance != null;\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Authenticate } from '../models/authenticate';\r\nimport { ClientInfo } from '../models/client-info';\r\nimport { LoginInfo } from '../models/login-info';\r\nimport { ServerInfo } from '../models/server-info';\r\nimport { ServerAclVo } from '../server-vo/server-acl-vo';\r\nimport { ServerCabinetVo } from '../server-vo/server-cabinet-vo';\r\nimport { ServerConfigFileVo } from '../server-vo/server-config-file-vo';\r\nimport { ServerCreateSubDataVo } from '../server-vo/server-create-sub-data-vo';\r\nimport { ServerDocumentTypeVo } from '../server-vo/server-document-type-vo';\r\nimport { ServerDocumentVo } from '../server-vo/server-document-vo';\r\nimport { ServerDomainModelVo } from '../server-vo/server-domain-model-vo';\r\nimport { ServerEntryVo } from '../server-vo/server-entry-vo';\r\nimport { ServerFavoriteCategoryModelVo } from '../server-vo/server-favorite-category-model-vo';\r\nimport { ServerFavoriteVo } from '../server-vo/server-favorite-vo';\r\nimport { ServerFolderTypeVo } from '../server-vo/server-folder-type-vo';\r\nimport { ServerObjectBaseVo } from '../server-vo/server-object-base-vo';\r\nimport { ServerSearchConditionModelVo } from '../server-vo/server-search-condition-model-vo';\r\nimport { ServerSectionModelVo } from '../server-vo/server-section-model-vo';\r\nimport { ServerShortcutModelVo } from '../server-vo/server-shortcut-model-vo';\r\nimport { ServerSys0BaseModelVo } from '../server-vo/server-sys0-base-model-vo';\r\nimport { ServerTagModelVo } from '../server-vo/server-tag-model-vo';\r\nimport { ServerTrashModelVo } from '../server-vo/server-trash-model-vo';\r\nimport { ServerVersionModelVo } from '../server-vo/server-version-model-vo';\r\nimport { ServerToolButtonModel } from '../server-xml/server-tool-button-model';\r\nimport { StorageKey } from '../storage-key';\r\nimport { AclVO } from '../vo/acl-vo';\r\nimport { CabinetVO } from '../vo/cabinet-vo';\r\nimport { ConfigFileVO } from '../vo/config-file-vo';\r\nimport { CreateSubDataVO } from '../vo/create-sub-data-vo';\r\nimport { DisplayList } from '../vo/display-list';\r\nimport { DocumentTypeVO } from '../vo/document-type-vo';\r\nimport { DocumentVO } from '../vo/document-vo';\r\nimport { DomainVO } from '../vo/domain-vo';\r\nimport { EntryVO } from '../vo/entry-vo';\r\nimport { FavoriteCategoryVO } from '../vo/favorite-category-vo';\r\nimport { FavoriteVO } from '../vo/favorite-vo';\r\nimport { FolderVO, isFolderVO } from '../vo/folder-vo';\r\nimport { ObjectBaseVO } from '../vo/object-base-vo';\r\nimport { PrivateSetting } from '../vo/private-setting';\r\nimport { PropertyDetailVO } from '../vo/property-detail-vo';\r\nimport { isSearchConditionVO, SearchConditionVO } from '../vo/search-condition-vo';\r\nimport { SectionVO } from '../vo/section-vo';\r\nimport { isShortcutVO, ShortcutVO } from '../vo/shortcut-vo';\r\nimport { StatusVO } from '../vo/status-vo';\r\nimport { Sys0BaseVO } from '../vo/sys0-base-vo';\r\nimport { TagVO } from '../vo/tag-vo';\r\nimport { ToolButton } from '../vo/tool-button';\r\nimport { TrashVO } from '../vo/trash-vo';\r\nimport { VersionVO } from '../vo/version-vo';\r\nimport { WordBookVO } from '../vo/word-book-vo';\r\nimport { WorkflowVO } from '../vo/workflow-vo';\r\n\r\nimport { DateConverter } from './http/date-converter';\r\nimport {\r\n  BindRequest,\r\n  CancelExportDocumentsCSVRequest,\r\n  CheckInRequest,\r\n  ClearTagRequest,\r\n  ClientLogRequest,\r\n  CopyAsyncRequest,\r\n  CreateDocumentRequest,\r\n  CreateFolderRequest,\r\n  CreateTagRequest,\r\n  DeclareAccessRequest,\r\n  DeleteSectionRequest,\r\n  DeleteTagRequest,\r\n  DisplayListRequest,\r\n  DivideRequest,\r\n  DocumentDetailRequest,\r\n  DocumentTypeRequest,\r\n  DocumentUpdateRequest,\r\n  EditTagRequest,\r\n  EntryListRequest,\r\n  ExportDocumentsCSVRequest,\r\n  ExportSectionStartRequest,\r\n  FavoriteCategoryCreateRequest,\r\n  FavoriteCategoryMoveRequest,\r\n  FavoriteCreateRequest,\r\n  FavoriteDeleteRequest,\r\n  FavoriteMoveRequest,\r\n  FavoriteUpdateRequest,\r\n  FolderDetailRequest,\r\n  FolderObjectRequest,\r\n  FolderRetrieveRequest,\r\n  InsertSectionRequest,\r\n  MoveSectionRequest,\r\n  MoveTrashObjectRequest,\r\n  ObjectConnectRequest,\r\n  ObjectCopyRequest,\r\n  ObjectDisconnectRequest,\r\n  ObjectListExceptFolderRequest,\r\n  ObjectMoveRequest,\r\n  ObjectUrlRequest,\r\n  OperationLogRequest,\r\n  PrivateSettingRequest,\r\n  QuickViewerRequest,\r\n  RenameSectionRequest,\r\n  ReplaceAllSectionRequest,\r\n  ReplaceSectionRequest,\r\n  SearchCancelRequest,\r\n  SearchGetResultRequest,\r\n  SearchSortRequest,\r\n  SearchStartRequest,\r\n  SectionDetailForPrintRequest,\r\n  SectionDetailRequest,\r\n  SectionListRequest,\r\n  SectionThumbnailRequest,\r\n  SendInformMailRequest,\r\n  SortedFolderListRequest,\r\n  StartExportDocumentsRequest,\r\n  ToolBarRequest,\r\n  TopFolderRequest,\r\n  UnbindRequest,\r\n  UpdateApprovedRequest,\r\n  UpdateAsyncRequest,\r\n  UpdateRequest,\r\n  UpdateSubDataRequest,\r\n  UpdateTagRequest,\r\n  WordBookGetRequest,\r\n  WordBookUpdateRequest,\r\n  WorkingSectionDetailRequest,\r\n  WorkingSectionThumbnailRequest\r\n} from './http/http.requests';\r\nimport {\r\n  ClientInfoResponse,\r\n  FolderObjectResponse,\r\n  FolderRetrieveResponse,\r\n  InfoResponse,\r\n  SearchGetResultResponse,\r\n  ServerInfoResponse,\r\n  ThresholdResponse\r\n} from './http/http.responses';\r\nimport { MapUtil } from './http/map-util';\r\nimport { urlConfig } from './url.config';\r\n\r\nconst encode = encodeURIComponent;\r\n\r\n/**\r\n * REST API通信\r\n *\r\n * Observableを返すものでAPIから戻り値がないものは Observable<any>\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * 認証\r\n   *\r\n   * @param accountName ログイン名\r\n   * @param password パスワード\r\n   * @param domainName Windows認証の場合ドメイン名、ベーシック認証の場合空文字列\r\n   * @returns 認証結果は、以降のREST API呼ぶだめのアクセストークンを含む\r\n   */\r\n  authenticate(accountName: string, password: string, domainName: string): Observable<Authenticate> {\r\n    const url = this.makeUrl(urlConfig.authenticate);\r\n    const body = new HttpParams()\r\n      .set('accountName', accountName)\r\n      .set('password', password)\r\n      .set('domainName', domainName);\r\n    const options = this.getAuthenticationHttpOptions();\r\n    return this.http.post<Authenticate>(url, body, options);\r\n  }\r\n\r\n  /**\r\n   * キャビネットへ接続しているかどうかをチェックする。\r\n   */\r\n  isConnectServerInner(): Observable<any> {\r\n    const url = urlConfig.isConnectServer;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ログイン情報を取得する。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  getLoginInfo(successCallback: Function, errorCallback: Function) {\r\n    this.getLoginInfoInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * 用語リストを取得する。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  getWording(successCallback: Function, errorCallback: Function) {\r\n    this.getWordingInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * 初期状態のフォルダ構造を取得する。\r\n   * @param profileId プロファイルID. nullの場合はログインユーザーのプロファイルを取得する\r\n   */\r\n  getTopFolder(profileId: string | null): Observable<ObjectBaseVO[]> {\r\n    const url = urlConfig.getTopFolder;\r\n    const body: TopFolderRequest = {\r\n      profileId: profileId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定されたフォルダ直下のフォルダを取得する\r\n   *\r\n   * @param currentFolder フォルダ(FolderVO)またはキャビネット(CabinetVO)またはごみ箱(TrashVO)\r\n   * @param sortMap\r\n   */\r\n  getSortedFolderList(currentFolder: ObjectBaseVO, sortMap: Map<string, boolean>): Observable<any> {\r\n    const url = urlConfig.getSortedFolderList;\r\n    const body: SortedFolderListRequest = {\r\n      currentFolder: ServerObjectBaseVo.convert(currentFolder),\r\n      sort: MapUtil.convertToMapEntryArray(sortMap)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セッションキープアライブのリクエストを送る\r\n   */\r\n  keepAlive(): Observable<any> {\r\n    const url = urlConfig.keepAlive;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * コネクト\r\n   * UA/UDにて認証を行い、サーバへ接続する。\r\n   * @param viewerId ビューID\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  connectServer(viewerId: string, successCallback: Function, errorCallback: Function) {\r\n    this.connectServerInner(viewerId).subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * サーバー情報を取得する。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  getServerInfo(successCallback: Function, errorCallback: Function) {\r\n    this.getServerInfoInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * クライアント情報を取得する。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  getClientInfo(successCallback: Function, errorCallback: Function) {\r\n    this.getClientInfoInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * クライアントのログレベルを取得する。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  getClientLogLevel(successCallback: Function, errorCallback: Function) {\r\n    this.getClientLogLevelInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * キャビネットへ接続しているかどうかをチェックする。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  isConnectServer(successCallback: Function, errorCallback: Function) {\r\n    this.isConnectServerInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * ツールバーのプロファイルを取得する。\r\n   * 該当するプロファイルが存在しなければシステムのデフォルトプロファイルを返す。\r\n   */\r\n  getProfileToolBar(): Observable<ToolButton[]> {\r\n    const url = urlConfig.getProfileToolBar;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * 個人設定のプロファイルを取得する。\r\n   * 該当するプロファイルが存在しなければ、システムのデフォルトプロファイルを返す。\r\n   */\r\n  getProfileSetting(): Observable<PrivateSetting> {\r\n    const url = urlConfig.getProfileSetting;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ドメイン一覧を取得する。\r\n   * @param successCallback 成功時のコールバック\r\n   * @param errorCallback エラー時のコールバック\r\n   */\r\n  getDomainList(successCallback: Function, errorCallback: Function) {\r\n    this.getDomainListInner().subscribe(result => successCallback(result), error => errorCallback(error));\r\n  }\r\n\r\n  /**\r\n   * クライアントのログを出力する。\r\n   * @param logLevel ログレベル（0:fatal 1:error 2:warn 3:info 4:debug）\r\n   * @param message ログに出力するメッセージ\r\n   */\r\n  outClientLog(logLevel: number, message: string): Observable<any> {\r\n    const url = urlConfig.outClientLog;\r\n    const body: ClientLogRequest = {\r\n      logLevel: logLevel,\r\n      message: message\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を登録する。\r\n   * @param document 登録する文書\r\n   * @param selectedFolderName 登録先フォルダ名（エラーメッセージに使用）\r\n   * @param fileNameList ファイル名リスト\r\n   */\r\n  createDocument(document: DocumentVO, selectedFolderName: string, fileNameList: string[]): Observable<DocumentVO> {\r\n    const url = urlConfig.createDocument;\r\n    const body: CreateDocumentRequest = {\r\n      document: ServerDocumentVo.convert(document),\r\n      targetFolderName: selectedFolderName,\r\n      fileNameList: fileNameList\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定されたフォルダのサブフォルダを取得する。\r\n   * サブフォルダが1つもなかった場合は、nullを返す。\r\n   * @param currentFolder サブフォルダを取得するフォルダ\r\n   */\r\n  getFolderList(currentFolder: ObjectBaseVO): Observable<any> {\r\n    const url = urlConfig.getFolderList;\r\n    const body = ServerObjectBaseVo.convert(currentFolder);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りを登録する。\r\n   * @param favorite 登録するお気に入り\r\n   * @param target 登録する対象(文書、フォルダ、検索条件)\r\n   * @param destCategory 親のカテゴリ（お気に入り直下の場合は、nullかカテゴリタイプが\"root\"のカテゴリVO）\r\n   * @param checkMode 名前チェックする/しない\r\n   */\r\n  createFavorite(favorite: FavoriteVO, target: Sys0BaseVO, destCategory: FavoriteCategoryVO, checkMode: boolean): Observable<FavoriteVO> {\r\n    const url = urlConfig.createFavorite;\r\n    const body: FavoriteCreateRequest = {\r\n      favorite: ServerFavoriteVo.convert(favorite),\r\n      target: isSearchConditionVO(target) ? ServerSearchConditionModelVo.convert(target) : ServerObjectBaseVo.convert(target),\r\n      destCategory: ServerFavoriteCategoryModelVo.convert(destCategory),\r\n      checkMode: checkMode\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りのプロパティ(お気に入りの詳細情報)の取得する。\r\n   * @param favorite 登録するお気に入り\r\n   */\r\n  getFavoriteDetail(favorite: FavoriteVO): Observable<FavoriteVO> {\r\n    const url = urlConfig.getFavoriteDetail;\r\n    const body = ServerFavoriteVo.convert(favorite);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * 検索開始用にリザルトセットIDを取得する。\r\n   */\r\n  requestSearch(): Observable<any> {\r\n    const url = urlConfig.requestSearch;\r\n    return this.postResponseTypeText(url);\r\n  }\r\n\r\n  /**\r\n   * 検索を実行する。\r\n   * 検索処理は1セッションに対して1つしかできない。\r\n   * もし同一セッションにて検索を実行中にsearchが実行された場合は、\r\n   * cancelSearchが自動的に行われ、新しい検索を行う。\r\n   * @param resultSetId requestSearchで取得したID\r\n   * @param  searchCondition 検索条件を指定\r\n   * 　　　　　プロパティ　 Type：簡易検索と詳細条件検索を区別する。必須\r\n   * 　　　　　　　　　　　　DocProps：取得するプロパティ名リスト。必須\r\n   * 　　　　　　　　　　　　　　　　　　getFavoriteTargetより取得したsearchConditionには\r\n   * 　　　　　　　　　　　　　　　　　　DocPropsが保持されていないので、設定しなおすこと。\r\n   * 　　　　　　　　　　　　sort：ソート条件指定。必須\r\n   * 　　　　　　　　　　　　　　　プロパティ名 ASC:false/DESC:true\r\n   */\r\n  startSearch(resultSetId: string, searchCondition: SearchConditionVO): Observable<any> {\r\n    const url = urlConfig.startSearch;\r\n    const searchConditionToSend = ServerSearchConditionModelVo.convert(searchCondition);\r\n\r\n    // sortの形式は次の2種類が混在しているため、(2)が来た場合(1)に変換を行う。\r\n    // (1) sort: [{key: \"name\", value: \"false\"}]\r\n    // -- 本来SearchConditionVOで定義されている形式。\r\n    // (2) sort: {name: false}\r\n    // -- サーバーからの/v2/favorite/target/getのレスポンスでsortの形式が{key: value}で返ってくるため混在している形式。\r\n    const sort = searchConditionToSend.sort;\r\n    if (!Array.isArray(sort)) {\r\n      const newSort: { key: string; value: any }[] = [];\r\n      const keys = Object.keys(sort);\r\n      for (const key of keys) {\r\n        const keyValue = { key: key, value: sort[key] };\r\n        newSort.push(keyValue);\r\n      }\r\n      searchConditionToSend.sort = newSort;\r\n    }\r\n    const body: SearchStartRequest = {\r\n      resultSetId: resultSetId,\r\n      searchCondition: searchConditionToSend\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 検索結果全オブジェクトを取得する。\r\n   * searchにて取得したデータの一覧を取得する。\r\n   * 事前にsearchが実行されていること。\r\n   * @param resultSetId requestSearchで取得したID\r\n   * @param nextIndex 開始インデックスを指定、0からスタート。\r\n   *　　　　　　　　　　エントリがない場合は0とする。\r\n   * @param count 取得件数を指定。必須。\r\n   * @param docProps 取得するプロパティ名リスト\r\n   */\r\n  retrieveSearchResult(resultSetId: string, nextIndex: number, count: number, docProps: string[]): Observable<any> {\r\n    const url = urlConfig.retrieveSearchResult;\r\n    const body: SearchGetResultRequest = {\r\n      resultSetId: resultSetId,\r\n      nextIndex: nextIndex,\r\n      count: count,\r\n      docProps: docProps\r\n    };\r\n    return this.post<SearchGetResultResponse>(url, body).pipe(\r\n      map<SearchGetResultResponse, object>(response => {\r\n        const result = MapUtil.create(Object, response.searchList);\r\n        DateConverter.numberToDateForArrayProps(result); // resultのメンバーはすべてObjectBaseVOの配列である\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 検索結果一覧の再ソートを行う。\r\n   * @param resultSetId requestSearchで取得したID\r\n   * @param sort ソート条件指定。nullの場合は、ソートしない。\r\n   * 　　　　　　 プロパティ名 ASC:false/DESC:true\r\n   */\r\n  reSortSearchResult(resultSetId: string, sort: Map<string, boolean>): Observable<any> {\r\n    const url = urlConfig.reSortSearchResult;\r\n    const body: SearchSortRequest = {\r\n      resultSetId: resultSetId,\r\n      sort: MapUtil.convertToMapEntryArray(sort)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 検索の中止を行う\r\n   * @param resultSetId requestSearchで取得したID\r\n   */\r\n  cancelSearch(resultSetId: string): Observable<any> {\r\n    const url = urlConfig.cancelSearch;\r\n    const body: SearchCancelRequest = {\r\n      resultSetId: resultSetId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書タイプリストを取得する。\r\n   * @param cabinet キャビネットを指定\r\n   */\r\n  getDocumentTypeList(cabinet: CabinetVO): Observable<DocumentTypeVO[]> {\r\n    const url = urlConfig.getDocumentTypeList;\r\n    const body = ServerCabinetVo.convert(cabinet);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書タイプ詳細リストを取得する。\r\n   * @param cabinet キャビネットを指定\r\n   * @param documentType 文書タイプIDを指定\r\n   */\r\n  getDocumentTypeDetail(cabinet: CabinetVO, documentType: DocumentTypeVO): Observable<DocumentTypeVO> {\r\n    const url = urlConfig.getDocumentTypeDetail;\r\n    const body: DocumentTypeRequest = {\r\n      cabinet: ServerCabinetVo.convert(cabinet),\r\n      documentType: ServerDocumentTypeVo.convert(documentType)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りのターゲット(文書、フォルダー、検索条件)を取得する。\r\n   * 指定されたお気に入りにリンクするターゲットオブジェクトを取得。\r\n   * @param favorite お気に入りオブジェクトを指定\r\n   */\r\n  getFavoriteTarget(favorite: FavoriteVO): Observable<Sys0BaseVO> {\r\n    const url = urlConfig.getFavoriteTarget;\r\n    const body = ServerFavoriteVo.convert(favorite);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りを削除する。\r\n   * @param favoriteObject 削除するお気に入り\r\n   */\r\n  deleteFavoriteObject(favoriteObject: FavoriteVO | FavoriteCategoryVO): Observable<any> {\r\n    const url = urlConfig.deleteFavoriteObject;\r\n    const body: FavoriteDeleteRequest = favoriteObject;\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りプロパティを更新する。\r\n   * @param favorite 更新するお気に入り\r\n   * @param checkMode 名前チェックする/しない\r\n   * @param searchCondition 検索条件\r\n   */\r\n  updateFavorite(favorite: FavoriteVO, checkMode: boolean, searchCondition: SearchConditionVO | null): Observable<FavoriteVO> {\r\n    const url = urlConfig.updateFavorite;\r\n    const body: FavoriteUpdateRequest = {\r\n      favorite: favorite,\r\n      checkMode: checkMode,\r\n      searchCondition: searchCondition != null ? ServerSearchConditionModelVo.convert(searchCondition) : searchCondition\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * フォルダープロパティを参照する。\r\n   * @param folder 参照するフォルダー\r\n   * @param props 取得するプロパティ\r\n   */\r\n  getFolderDetail(folder: FolderVO, props: string[]): Observable<FolderVO> {\r\n    const url = urlConfig.getFolderDetail;\r\n    const body: FolderDetailRequest = {\r\n      folder: folder,\r\n      props: props\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * フォルダーのサイズを取得する。\r\n   * @param folder サイズを取得するフォルダー\r\n   */\r\n  getFolderSize(folder: FolderVO): Observable<any> {\r\n    const url = urlConfig.getFolderSize;\r\n    const body = folder;\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * フォルダーを作成する。\r\n   * @param newFolder 作成するフォルダー\r\n   * @param parentFolder 親フォルダー\r\n   */\r\n  createFolder(newFolder: FolderVO, parentFolder: FolderVO | null): Observable<FolderVO> {\r\n    const url = urlConfig.createFolder;\r\n    const body: CreateFolderRequest = {\r\n      newFolder: newFolder,\r\n      destFolder: parentFolder != null ? ServerFolderTypeVo.convert(parentFolder) : parentFolder\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定されたフォルダのフォルダ、文書、ショートカットの取得を行う。\r\n   * @param resultSetId リザルトセットのID\r\n   * @param nextIndex 開始インデックスを指定、0からスタート。\r\n   *　　　　　　　　エントリがない場合は0とする。\r\n   * @param count 取得件数を指定。必須。\r\n   * @param docProps 取得するプロパティ名リスト\r\n   */\r\n  retrieveAllChildren(resultSetId: string, nextIndex: number, count: number, docProps: string[]): Observable<object> {\r\n    const url = urlConfig.retrieveAllChildren;\r\n    const body: FolderRetrieveRequest = {\r\n      resultSetId: resultSetId,\r\n      nextIndex: nextIndex,\r\n      counts: count,\r\n      props: docProps\r\n    };\r\n    return this.post<FolderRetrieveResponse>(url, body).pipe(\r\n      map<FolderRetrieveResponse, object>(response => {\r\n        const result = MapUtil.create(Object, response.allMap);\r\n        DateConverter.numberToDateForArrayProps(result); // resultのメンバーはすべてObjectBaseVOの配列である\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 指定されたフォルダのフォルダ、文書、ショートカットの取得を行う。\r\n   * @param resultSetId リザルトセットのID\r\n   * @param nextIndex 開始インデックスを指定、0からスタート。\r\n   *　　　　　　　　エントリがない場合は0とする。\r\n   * @param count 取得件数を指定。必須。\r\n   * @param docProps 取得するプロパティ名リスト\r\n   */\r\n  retrieveAllChildrenExceptFolderList(resultSetId: string, nextIndex: number, count: number, docProps: string[]): Observable<any> {\r\n    const url = urlConfig.retrieveAllChildrenExceptFolderList;\r\n    const body: ObjectListExceptFolderRequest = {\r\n      resultSetId: resultSetId,\r\n      nextIndex: nextIndex,\r\n      count: count,\r\n      docProps: docProps\r\n    };\r\n    return this.post<FolderRetrieveResponse>(url, body).pipe(\r\n      map<FolderRetrieveResponse, object>(response => {\r\n        const result = MapUtil.create(Object, response.allMap);\r\n        DateConverter.numberToDateForArrayProps(result); // resultのメンバーはすべてObjectBaseVOの配列である\r\n        return result;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 再取得終了通知\r\n   * Search実行時、サーバー内部にキャッシュしているデータを解放する。\r\n   * 検索結果データを再取得する必要が無くなった場合に呼び出しを行う。\r\n   */\r\n  endRetrieve(resultSetId: string): Observable<any> {\r\n    const url = urlConfig.endRetrieve;\r\n    const body = {\r\n      resultSetId: resultSetId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定名の単語帳を取得する。\r\n   * @param cabinet キャビネットを指定。\r\n   * @param wordBookName 取得する単語帳名を指定。\r\n   */\r\n  getWordBook(cabinet: CabinetVO, wordBookName: string): Observable<WordBookVO> {\r\n    const url = urlConfig.getWordBook;\r\n    const body: WordBookGetRequest = {\r\n      cabinet: ServerCabinetVo.convert(cabinet),\r\n      wordBookName: wordBookName\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 単語帳に単語を追加する。\r\n   * @param cabinet キャビネットを指定。\r\n   * @param wordBookName 追加する語帳名を指定。\r\n   * @param newWord 追加する単語を指定。\r\n   */\r\n  addWord(cabinet: CabinetVO, wordBookName: string, newWord: string): Observable<any> {\r\n    const url = urlConfig.addWord;\r\n    const body: WordBookUpdateRequest = {\r\n      cabinet: ServerCabinetVo.convert(cabinet),\r\n      wordBookName: wordBookName,\r\n      newWord: newWord\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のセクション詳細を取得する。\r\n   * このメソッド内でセクションのデータを出力するパスを生成する。\r\n   * プロパティファイルに記載されている出力先をベースとして、+セッションID\\セクションデータIDというパスを生成する。\r\n   * @param sectionVo 詳細を取得したいセクションVO\r\n   * @param viewerId ビューアを一意に特定する値\r\n   * @param rendition 取得するデータの種類を指定\r\n   　　　　　　　　　　  0x1(RENDITION_TYPE_PRIMARY)　 セクションデータの取得\r\n   　　　　　　　　　　  0x2(RENDITION_TYPE_THUMBNAIL)　 サムネッルデータの再取得\r\n   　　　　　　　　　　  0x4(RENDITION_TYPE_PDF) PDFデータの取得\r\n   　　　　　　　　　　  0x8(RENDITION_TYPE_FTS)　 全文検索データの取得\r\n   　　　　　　　　　　  0xf(RENDITION_TYPE_ALL) 上記のすべてデータの再取得\r\n   * @param versionId 版ID（nullの場合は最新版）\r\n   */\r\n  getSectionDetail(sectionVo: SectionVO, viewerId: string, rendition: number, versionId: string | null = null): Observable<any> {\r\n    const url = urlConfig.getSectionDetail;\r\n    const body: SectionDetailRequest = {\r\n      section: ServerSectionModelVo.convert(sectionVo),\r\n      viewerId: viewerId,\r\n      rendition: rendition,\r\n      versionId: versionId\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のプロパティを取得する。\r\n   * 更新で使用する場合は、全てのプロパティを取得したオブジェクトを使用する必要がある。\r\n   * @param documentVo 取得したい文書\r\n   * @param props 取得したいプロパティ名のリスト（nullなら全て取得）\r\n   * フルパスを取得したい場合は、\"pathIds\"を指定すると、IDのフルパスと名前のフルパスがセットされる。\r\n   */\r\n  getDocumentDetail(documentVo: DocumentVO, props: string[] | null): Observable<DocumentVO> {\r\n    const url = urlConfig.getDocumentDetail;\r\n    const body: DocumentDetailRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      props: props\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ユーザーのメールアドレスを取得する\r\n   * @param entryVo 取得したいユーザーの情報\r\n   */\r\n  getUserMailAddress(entryVo: EntryVO): Observable<any> {\r\n    const url = urlConfig.getUserMailAddress;\r\n    const body = ServerEntryVo.convert(entryVo);\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * ユーザー・グループの一覧を取得する。\r\n   * @param domainVo 取得対象となるドメインのオブジェクト（ベーシック認証の場合はNull）\r\n   * @param keyWord 検索語　取得するユーザーを指定\r\n   *     　　　　　　　　　　空の場合は全て取得。\r\n   *     　　　　　　　　　　Windows認証のときは、ユーザー部分一致、グループ全体一致\r\n   *     　　　　　　　　　　ベーシック認証のときは、ユーザー・グループ共に部分一致\r\n   * @param entryType エントリータイプ\r\n   *      　　　　　　 \"isGroup\"=グループのみ\r\n   *      　　　　　　 \"isUser\"=ユーザーのみ\r\n   *      　　　　　　 \"\"=ユーザー・グループ\r\n   * @param nextIndex 取得開始位置(0～)\r\n   * @param count 取得件数\r\n   * @param searchBuiltinUser ビルトインユーザー（Admin）を検索結果に含めるかどうか\r\n   *                         （true…含める false…含めない）\r\n   */\r\n  retrieveEntryList(\r\n    domainVo: DomainVO | null,\r\n    keyWord: string,\r\n    entryType: string,\r\n    nextIndex: number,\r\n    count: number,\r\n    searchBuiltinUser: boolean\r\n  ): Observable<EntryVO[]> {\r\n    const url = urlConfig.retrieveEntryList;\r\n    const body: EntryListRequest = {\r\n      domain: ServerDomainModelVo.convert(domainVo),\r\n      keyword: keyWord,\r\n      entryType: entryType,\r\n      nextIndex: nextIndex,\r\n      count: count,\r\n      searchBuiltinUser: searchBuiltinUser\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * メールを送信する\r\n   * @param destinationEntryList 通知先一覧のリスト\r\n   * @param senderAddress 送信者アドレス\r\n   * @param mailSubject メールタイトル\r\n   * @param mailBody　メール本文\r\n   * @param document 文書\r\n   * @param versionId 版ID（版番号(1.0など)ではない）※最新版の場合はnullを指定すること\r\n   */\r\n  sendInformMail(\r\n    destinationEntryList: EntryVO[],\r\n    senderAddress: string,\r\n    mailSubject: string,\r\n    mailBody: string,\r\n    document: DocumentVO,\r\n    versionId: string | null\r\n  ): Observable<any> {\r\n    const url = urlConfig.sendInformMail;\r\n    const body: SendInformMailRequest = {\r\n      destinationEntryList: destinationEntryList,\r\n      senderAddress: senderAddress,\r\n      mailSubject: mailSubject,\r\n      comment: mailBody,\r\n      document: ServerDocumentVo.convert(document),\r\n      versionId: versionId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定したオブジェクトのアクセス権を取得する。\r\n   * @param target ターゲットオブジェクト\r\n   */\r\n  getTargetStatus(target: Sys0BaseVO): Observable<StatusVO> {\r\n    const url = urlConfig.getTargetStatus;\r\n    const body = ServerSys0BaseModelVo.convert(target);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定したドキュメントの指定したセクションNOのサムネイルを取得する。\r\n   * サムネイルデータは戻り値のSectionVOのメンバにバイト配列でセットされる。\r\n   * ※一覧で使用するときは、セクションNoは1固定にする。\r\n   * @param documentVo 文書\r\n   * @param sectionNo セクションNo\r\n   * @param versionId 版ID(nullの場合は最新版)\r\n   */\r\n  getSectionThumbnail(documentVo: DocumentVO, sectionNo: number, versionId: string | null = null): Observable<SectionVO> {\r\n    const url = urlConfig.getSectionThumbnail;\r\n    const body: SectionThumbnailRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo,\r\n      viewerId: versionId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * サーバーの日付を取得する。\r\n   */\r\n  getServerTime(): Observable<any> {\r\n    const url = urlConfig.getServerTime;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ※文書明示的ロック編集用\r\n   * 文書を更新モードにする。\r\n   * このメソッドでロックした文書は、disconnect時に強制的にロックを解除する。\r\n   * ユーザーが明示的にその文書をロックして操作を行う場合、このメソッドを使用しなくてはならない。\r\n   * 文書を対象にロックを行い、文書に関連する情報（プロパティ、セクション）の変更を行うことができる。\r\n   * documentUpdateStartからdocumentUpdateEndを実行する間でのセクションの操作やeditDocumentDetailは\r\n   * documentUpdateEnd実行時に初めて永続化される。\r\n   * @param documentVo 更新対象の文書（cabIdとidが必要。）\r\n   */\r\n  documentUpdateStart(documentVo: DocumentVO): Observable<DocumentVO> {\r\n    const url = urlConfig.documentUpdateStart;\r\n    const body = ServerDocumentVo.convert(documentVo);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ※文書明示的ロック編集用\r\n   * 文書の更新モードを終了し、コミット又はロールバックする。\r\n   * @param documentVo 更新対象の文書（cabIdとidが必要。）\r\n   * @param version 版上げ更新の際に、版管理を指定する。commit=falseの場合は無視される。（nullを指定できる。）\r\n   * 　　　　　      本メソッドの定数を使用する。\r\n   * 　　　　　　　　COMMIT_VERSION_UP    :版を上げる（版番号を指定）\r\n   * 　　　　　　　　COMMIT_VERSION_UP_MAJOR  :版を上げる（1 の位を上げる）\r\n   * 　　　　　　　　COMMIT_VERSION_UP_MINOR  :版を上げる（0.1 の位を上げる）\r\n   * 　　　　　　　　COMMIT_VERSION_KEEP    :版を上げない\r\n   * @param versionNo COMMIT_VERSION_UP指定時（版上げ、版番号指定）に、版番号を指定する。その際にnullを指定された場合は、エラーにする。\r\n   * @param versionMemo 版上げ更新の際に、版コメントを指定する。nullの場合は無視される。\r\n   * @param commit 更新モード中に、文書編集操作をコミットするかを指定する。コミット(true)/キャンセル(false)\r\n   * キャンセル時は、documentUpdateStart以降の操作を取り消す。\r\n   * ※documentUpdateStartが実行されていなくてもエラーにならない。\r\n   * その場合、変更は反映されない。\r\n   * ユーザーが明示的にその文書をロックして操作を行う場合、このメソッドを使用しなくてはならない。\r\n   * documentUpdateStartからdocumentUpdateEndを実行する間でのセクションの操作やeditDocumentDetailは\r\n   * documentUpdateEnd実行時に初めて永続化される。\r\n   */\r\n  documentUpdateEnd(\r\n    documentVo: DocumentVO,\r\n    version: number | null,\r\n    versionNo: string | null,\r\n    versionMemo: string | null,\r\n    commit: boolean\r\n  ): Observable<DocumentVO> {\r\n    const url = urlConfig.documentUpdateEnd;\r\n    const body: CheckInRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      version: version,\r\n      versionNo: versionNo,\r\n      versionMemo: versionMemo,\r\n      commit: commit\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ※文書明示的ロック編集用\r\n   * 文書情報を更新する。\r\n   * ロックを行い、その中でプロパティを更新する場合。\r\n   * updateDocumentDetailでは、実行時にロック取得と解除を行うため、セクション編集等と同じトランザクション内で行うことができない。\r\n   * documentUpdateEndでコミットすると永続化される。\r\n   * ロック中は、アクセス権変更、文書の削除等はできないため、エラーはキャビネット系とシーケンスエラーのみ\r\n   * 更新できるのは文書内のプロパティのみで、ワークフローの変更や移動はこのメソッドでは行えない。\r\n   * ユーザーが明示的にその文書をロックして操作を行う場合、このメソッドを使用しなくてはならない。\r\n   * documentUpdateStartからdocumentUpdateEndを実行する間でのセクションの操作やeditDocumentDetailは\r\n   * documentUpdateEnd実行時に初めて永続化される。\r\n   * @param documentVo 編集したい文書\r\n   * @param props 編集したいプロパティ名リスト(nullなら全て)\r\n   */\r\n  editDocumentDetail(documentVo: DocumentVO, props: string[] | null): Observable<DocumentVO> {\r\n    const url = urlConfig.editDocumentDetail;\r\n    const body: DocumentUpdateRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      props: props\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セクションを追加・挿入する。\r\n   * セクションの名前と拡張子は、内部で引数のファイル名から取得する。\r\n   * @param documentVo 変更したい文書（cabIdとidが必要。）\r\n   * @param sectionNo セクションNo\r\n   * 1　                                   …　先頭に追加\r\n   * 追加するセクションNo                   … 途中に追加\r\n   * 0 又は セクション数以上のセクション番号  … 末尾に追加\r\n   * @param fileName セクションデータのファイル名\r\n   * @param viewerId ビューアを一意に特定する値\r\n   */\r\n  insertSection(documentVo: DocumentVO, sectionNo: number, fileName: string, viewerId: string): Observable<SectionVO> {\r\n    const url = urlConfig.insertSection;\r\n    const body: InsertSectionRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo,\r\n      fileName: fileName,\r\n      viewerId: viewerId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セクションデータを差し替える。\r\n   * セクションの名前と拡張子は、内部で引数のファイル名から取得する。\r\n   * @param documentVo 変更したい文書（cabIdとidが必要。）\r\n   * @param sectionNo 差し替え対象のセクションNo\r\n   * @param fileName セクションデータのファイル名\r\n   * @param viewerId ビューアを一意に特定する値\r\n   */\r\n  replaceSection(documentVo: DocumentVO, sectionNo: number, fileName: string, viewerId: string): Observable<SectionVO> {\r\n    const url = urlConfig.replaceSection;\r\n    const body: ReplaceSectionRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo,\r\n      fileName: fileName,\r\n      viewerId: viewerId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セクションを移動する。\r\n   * @param documentVo  変更したい文書（cabIdとidが必要。）\r\n   * @param sectionNo   移動対象のセクションNo\r\n   * @param assignIndex 移動後のセクションNo\r\n   * 1　                                  … 先頭に移動\r\n   * 追加するセクションNo                  … 途中に移動\r\n   * 0 又は セクション数以上のセクション番号  … 末尾に移動\r\n   */\r\n  moveSection(documentVo: DocumentVO, sectionNo: number, assignIndex: number): Observable<any> {\r\n    const url = urlConfig.moveSection;\r\n    const body: MoveSectionRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo,\r\n      assignIndex: assignIndex\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セクションを削除する\r\n   * @param documentVo 変更したい文書（cabIdとidが必要。）\r\n   * @param sectionNo 移動対象のセクションNo\r\n   */\r\n  deleteSection(documentVo: DocumentVO, sectionNo: number): Observable<any> {\r\n    const url = urlConfig.deleteSection;\r\n    const body: DeleteSectionRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セクション名を変更する\r\n   * @param documentVo 変更したい文書（cabIdとidが必要。）\r\n   * @param sectionNo 変更対象のセクションNo\r\n   * @param newName 変更後の名前\r\n   */\r\n  renameSection(documentVo: DocumentVO, sectionNo: number, newName: string): Observable<any> {\r\n    const url = urlConfig.renameSection;\r\n    const body: RenameSectionRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo,\r\n      newName: newName\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 先勝ち編集用\r\n   * プロパティ・アクセス権を更新を開始する。更新対象のオブジェクトを取得する。\r\n   * プロパティ編集で先勝ちの仕様になっているものは、必ずこのメソッドを実行しなくてはならない。\r\n   * 複数人がこれを実行していることがあるが、この時点ではエラーにはならない。（ロックではない）\r\n   * 編集用メソッドを別途実行する必要は無く、connectObjectとdisconnectObjectを実行することで、\r\n   * 最新の情報取得～更新/キャンセルを行うことができる。\r\n   * @param target 更新対象のオブジェクト\r\n   *              （DocumentVO、FolderVO、ShortcutVO、AclVo）…cabId、Idが必要\r\n   * @param props 取得するプロパティのリスト(nullなら全て取得、AclVOでは無視される)\r\n   */\r\n  connectObject(target: ObjectBaseVO, props: string[] | null): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.connectObject;\r\n    const objectBaseVO = ServerObjectBaseVo.convert(target);\r\n    const body: ObjectConnectRequest = {\r\n      target: objectBaseVO,\r\n      props: props\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 先勝ち編集用\r\n   * プロパティ・アクセス権の更新を反映・キャンセルする。\r\n   * プロパティ編集で先勝ちの仕様になっているものは、必ずconnectObjectを実行後にこのメソッドを実行しなくてはならない。\r\n   * 複数人がconnectObjectをしている状態で、他のユーザーがdisconnectObjectを実行した後に\r\n   * このメソッドをコミットで実行すると例外が発生する。\r\n   * 更新なしで終了する場合もこのメソッドをキャンセルで実行しなくてはならない。\r\n   * @param target 更新対象のオブジェクト\r\n   *              （DocumentVO、FolderVO、ShortcutVO）…反映の場合は反映したい内容をセットしたオブジェクト…cabId、Id、typeが必要\r\n   * @param props 更新するプロパティのリスト(nullなら全て更新、キャンセル時は無視される)\r\n   * @param commit 値を反映するかどうか。true:反映(コミット)/false:キャンセル\r\n   *               アクセス権変更時は、commit=falseを渡す。\r\n   */\r\n  disconnectObject(target: ObjectBaseVO, props: string[] | null, commit: boolean): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.disconnectObject;\r\n    const body: ObjectDisconnectRequest = {\r\n      target: ServerObjectBaseVo.convert(target),\r\n      props: props,\r\n      commit: commit\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * アクセス権リストを取得する。\r\n   * @param target アクセス権リストを取得したいオブジェクト（FolderVO、DocumentVO、CabinetVO。cabIdとid（FolderVOの場合）が必要。）\r\n   */\r\n  getAcl(target: ObjectBaseVO): Observable<AclVO> {\r\n    const url = urlConfig.getAcl;\r\n    const body = ServerObjectBaseVo.convert(target);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトを移動する\r\n   * @param targetVo 移動対象のオブジェクト（cabIdとidが必要）\r\n   * @param dest 移動先（フォルダまたはキャビネット）（cabIdとid（FolderVOの場合）が必要）\r\n   */\r\n  move(targetVo: ObjectBaseVO, dest: ObjectBaseVO): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.move;\r\n    const body: ObjectMoveRequest = {\r\n      target: ServerObjectBaseVo.convert(targetVo),\r\n      dest: dest\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りカテゴリを作成する。\r\n   * @param newCategory 作成するカテゴリVO\r\n   * @param parentCategory 作成先のカテゴリVO（nullならお気に入り直下）\r\n   */\r\n  createFavoriteCategory(newCategory: FavoriteCategoryVO, parentCategory: FavoriteCategoryVO | null): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.createFavoriteCategory;\r\n    const body: FavoriteCategoryCreateRequest = {\r\n      newCategory: ServerFavoriteCategoryModelVo.convert(newCategory),\r\n      parentCategory: parentCategory != null ? ServerFavoriteCategoryModelVo.convert(parentCategory) : parentCategory\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りを移動する。\r\n   * @param favoriteVo 移動するお気に入りVO(idが必要)\r\n   * @param newName 移動する際に付ける名前（nullなら名前変更なし）\r\n   * @param destCategory 移動先のお気に入りカテゴリVO（nullならお気に入り直下）\r\n   * @param checkMode 名前チェックする/しない\r\n   */\r\n  moveFavorite(\r\n    favoriteVo: FavoriteVO,\r\n    newName: string | null,\r\n    destCategory: FavoriteCategoryVO | null,\r\n    checkMode: boolean\r\n  ): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.moveFavorite;\r\n    const body: FavoriteMoveRequest = {\r\n      favorite: ServerFavoriteVo.convert(favoriteVo),\r\n      newName: newName,\r\n      destCategory: destCategory != null ? ServerFavoriteCategoryModelVo.convert(destCategory) : destCategory,\r\n      checkMode: checkMode\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りカテゴリを移動する。\r\n   * @param categoryVO 移動するお気に入りカテゴリVO（idが必要）\r\n   * @param destCategory 移動先のお気に入りカテゴリVO（nullならお気に入り直下）\r\n   */\r\n  moveFavoriteCategory(categoryVO: FavoriteCategoryVO, destCategory: FavoriteCategoryVO | null): Observable<FavoriteCategoryVO> {\r\n    const url = urlConfig.moveFavoriteCategory;\r\n    const body: FavoriteCategoryMoveRequest = {\r\n      favoriteCategory: ServerFavoriteCategoryModelVo.convert(categoryVO),\r\n      destCategory: destCategory != null ? ServerFavoriteCategoryModelVo.convert(destCategory) : destCategory\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 所有権を変更する。\r\n   * 自分にしか変更できない。\r\n   * ログイン時に内部で取得した情報を元に、対象オブジェクトの所有権をログインユーザーに変更する。\r\n   * 後勝ち。connectObjectを実行する必要は無い。単独で実行可能。\r\n   * @param target 所有権を変更したいオブジェクト（FolderVOまたはDocumentVO）（cabIdとidが必要）\r\n   */\r\n  acquireOwnership(target: ObjectBaseVO): Observable<AclVO> {\r\n    const url = urlConfig.acquireOwnership;\r\n    const body = ServerObjectBaseVo.convert(target);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ごみ箱のオブジェクトを削除前の場所に戻す。\r\n   * @param trash ごみ箱オブジェクト(cabIdとidが必要)\r\n   * @param target ごみ箱内の戻したいオブジェクト(cabIdとidが必要)\r\n   * @param dest 戻し先（FolderVOまたはCabinetVO。cabIdとid（FolderVOの場合）が必要）（Nullの場合は、元の場所に戻す）\r\n   */\r\n  undelete(trash: TrashVO, target: ObjectBaseVO, dest: ObjectBaseVO | null): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.undelete;\r\n    const body: MoveTrashObjectRequest = {\r\n      trash: ServerTrashModelVo.convert(trash),\r\n      target: ServerObjectBaseVo.convert(target),\r\n      dest: dest\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * セクションファイルの書き出しをキャンセルする。\r\n   * @param downloadId startExportAllSectionで取得したダウンロードID。\r\n   */\r\n  cancelExportSection(downloadId: string): Observable<any> {\r\n    const url = urlConfig.cancelExportSection;\r\n    const body = {\r\n      downloadId: downloadId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトを複製する。\r\n   * @param targetVo コピー対象のオブジェクト（cabIdとidが必要）\r\n   * @param dest コピー先 CabinetVO、またはFolderVO（cabIdとid（FolderVOの場合）が必要）\r\n   * @param includeOldVersion 文書の旧版を複製する（文書以外のときは無視される。）\r\n   * @param includeWorkflowInfo 文書の回覧情報、回覧履歴を複製する（文書以外のときは無視される。）\r\n   * @returns 複製後のオブジェクト（DocumentVOまたはFolderVO）\r\n   */\r\n  copy(targetVo: ObjectBaseVO, dest: ObjectBaseVO, includeOldVersion: boolean, includeWorkflowInfo: boolean): Observable<ObjectBaseVO> {\r\n    const url = urlConfig.copy;\r\n    const body: ObjectCopyRequest = {\r\n      target: ServerObjectBaseVo.convert(targetVo),\r\n      dest: ServerObjectBaseVo.convert(dest),\r\n      includeOldVersion: includeOldVersion,\r\n      includeWorkflowInfo: includeWorkflowInfo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りカテゴリの詳細を取得する。\r\n   * @param category 取得対象のお気に入りカテゴリ（idが必要）\r\n   */\r\n  getFavoriteCategoryDetail(category: FavoriteCategoryVO): Observable<FavoriteCategoryVO> {\r\n    const url = urlConfig.getFavoriteCategoryDetail;\r\n    const body = ServerFavoriteCategoryModelVo.convert(category);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りカテゴリ詳細を更新する。\r\n   * @param category 更新対象のお気に入りカテゴリ（idが必要）\r\n   */\r\n  updateFavoriteCategoryDetail(category: FavoriteCategoryVO): Observable<FavoriteCategoryVO> {\r\n    const url = urlConfig.updateFavoriteCategoryDetail;\r\n    const body = ServerFavoriteCategoryModelVo.convert(category);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りカテゴリのリストを取得する。\r\n   * @param category 子のリストを取得対象のカテゴリ（nullならお気に入り直下）カテゴリ指定時はidが必要\r\n   */\r\n  getFavoriteCategoryList(category: FavoriteCategoryVO | null): Observable<any> {\r\n    const url = urlConfig.getFavoriteCategoryList;\r\n    const body = {\r\n      favoriteCategory: category != null ? ServerFavoriteCategoryModelVo.convert(category) : category\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * お気に入りのリストを取得する。\r\n   * @param favoriteCategoryVo 子のリストを取得したいお気に入りカテゴリ（nullならお気に入り直下）カテゴリ指定時はidが必要\r\n   */\r\n  getFavoriteList(favoriteCategoryVo: FavoriteCategoryVO | null): Observable<any> {\r\n    const url = urlConfig.getFavoriteList;\r\n    const body = {\r\n      favoriteCategory: favoriteCategoryVo != null ? ServerFavoriteCategoryModelVo.convert(favoriteCategoryVo) : favoriteCategoryVo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ツールバーのプロファイルを保存する。\r\n   * @param toolbarXml ツールバー設定\r\n   */\r\n  saveProfileToolBar(toolbarXml: ToolButton[]): Observable<any> {\r\n    const url = urlConfig.saveProfileToolBar;\r\n    const body: ToolBarRequest = {\r\n      toolButtonList: toolbarXml.map(item => ServerToolButtonModel.convert(item))\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 一覧表示のためのプロファイルを取得する。\r\n   * 文書タイプを指定する。\r\n   * 該当するプロファイルが存在しなければnullを返す。\r\n   * @param docTypeId 文書タイプID（nullなら「すべての文書タイプ」のプロファイル、TODOリストの場合はConfigFileVO.LIST_TYPE_TODO_LIST）\r\n   */\r\n  getProfileDisplayList(docTypeId: string | null): Observable<DisplayList> {\r\n    const url = urlConfig.getProfileDisplayList;\r\n    const body = {\r\n      docTypeName: docTypeId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 一覧表示のためのプロファイルを保存する。\r\n   * 文書タイプを指定する。\r\n   * @param docTypeId 文書タイプ名 (全ての文書タイプの場合はnull、TODOリストの場合は、ConfigFileVO.LIST_TYPE_TODO_LIST) <br>\r\n   *            ※文書タイプIDは文書タイプ変更時に変わってしまうため\r\n   * @param listXml 文書一覧表示設定\r\n   */\r\n  saveProfileDisplayList(docTypeId: string | null, listXml: DisplayList): Observable<any> {\r\n    const url = urlConfig.saveProfileDisplayList;\r\n    const body: DisplayListRequest = {\r\n      docTypeName: docTypeId,\r\n      displayList: listXml\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * デフォルト表示するお気に入りオブジェクトを取得する。\r\n   * セットは、createFavoriteやupdateFavoriteDetailで行う\r\n   * 該当するプロファイルが存在しなければnullを返す。\r\n   */\r\n  getDefaultFavorite(): Observable<FavoriteVO> {\r\n    const url = urlConfig.getDefaultFavorite;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ワークフローテンプレートの名前リストを取得する。\r\n   */\r\n  getWorkflowTemplateList(): Observable<any> {\r\n    const url = urlConfig.getWorkflowTemplateList;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ワークフローオブジェクトを取得する\r\n   * @param workflowConfig プロファイル\r\n   */\r\n  getWorkflowTemplate(workflowConfig: ConfigFileVO): Observable<WorkflowVO> {\r\n    const url = urlConfig.getWorkflowTemplate;\r\n    const body = ServerConfigFileVo.convert(workflowConfig);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ワークフローテンプレートを作成する\r\n   * @param name テンプレート名\r\n   * @param workflowTemplateVo ワークフローテンプレート\r\n   */\r\n  createWorkflowTemplate(name: string, workflowTemplateVo: WorkflowVO): Observable<any> {\r\n    const url = urlConfig.createWorkflowTemplate;\r\n    const body = {\r\n      name: name,\r\n      workflowTemplateVo: workflowTemplateVo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ワークフローテンプレートを更新する\r\n   * @param workflowConfig プロファイル\r\n   * @param workflowTemplateVo ワークフローテンプレート\r\n   */\r\n  updateWorkflowTemplate(workflowConfig: ConfigFileVO, workflowTemplateVo: WorkflowVO): Observable<any> {\r\n    const url = urlConfig.updateWorkflowTemplate;\r\n    const body = {\r\n      workflowConfig: ServerConfigFileVo.convert(workflowConfig),\r\n      workflowTemplateVo: workflowTemplateVo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ワークフローテンプレートを削除する\r\n   * @param workflowConfig プロファイル\r\n   */\r\n  deleteWorkflowTemplate(workflowConfig: ConfigFileVO): Observable<any> {\r\n    const url = urlConfig.deleteWorkflowTemplate;\r\n    const body = ServerConfigFileVo.convert(workflowConfig);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  // ★Stitch V1.3対応\r\n  // ワークフロー機能は提供しない\r\n  // /**\r\n  //  * ワークフロー情報を取得する。\r\n  //  * プロパティを指定して取得することが可能。null指定で全て取得。\r\n  //  * 自分が審査者/承認者かや、回覧状態のチェックは行わないので、\r\n  //  * 審査・承認で取得する場合は、取得後に呼び出し側でチェックしなくてはならない。\r\n  //  * @param documentVo ワークフロー情報を取得したい文書オブジェクト（cabIdとidが必要）\r\n  //  * @param props 取得したいプロパティ（Nullなら全て取得）\r\n  //  */\r\n  // getWorkflow(documentVo: DocumentVO, props: string[] | null): Observable<WorkflowVO> {\r\n  //   const url = urlConfig.getWorkflow;\r\n  //   const body = {\r\n  //     documentVo: ServerDocumentVo.convert(documentVo),\r\n  //     props: props\r\n  //   };\r\n  //   return this.post(url, body);\r\n  // }\r\n\r\n  /**\r\n   * ワークフロー情報を取得する。\r\n   * プロパティを指定して取得することが可能。null指定で全て取得。\r\n   * 自分が審査者/承認者かや、回覧状態のチェックは行わないので、\r\n   * 審査・承認で取得する場合は、取得後に呼び出し側でチェックしなくてはならない。\r\n   * ※getWorkFlowでは、ごみ箱に存在している場合や削除されている場合、\r\n   * アクセス権がない場合もチェックを行うが、本メソッドは行わない。\r\n   * @param documentVo ワークフロー情報を取得したい文書オブジェクト（cabIdとidが必要）\r\n   * @param props 取得したいプロパティ（Nullなら全て取得）\r\n   */\r\n  getDocumentWorkFlowInfo(documentVo: DocumentVO, props: string[] | null): Observable<WorkflowVO> {\r\n    const url = urlConfig.getWorkflowInfo;\r\n    const body = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      props: props\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を申請する。\r\n   * 本メソッドではワークフロー情報に対して以下の処理を行う。\r\n   * ・回覧状態を回覧中にする。\r\n   * ・次の審査者、承認者を進める。\r\n   * ・ログを作成し、WorkflowVOにセットする。\r\n   * ・回覧ルートをチェックし、保存する。\r\n   * 先勝ち対応はされていない。常に後勝ちとなる。\r\n   * そのため、内部では最新を取得して、回覧状態やルートをチェックする。\r\n   * 本メソッド内でメール送信を実行する（非同期。ワークフロー情報保存後。）\r\n   * @param workflowVo ワークフローVO\r\n   * @param comment コメント\r\n   */\r\n  applyDocument(workflowVo: WorkflowVO, comment: string): Observable<WorkflowVO> {\r\n    const url = urlConfig.applyDocument;\r\n    const body = {\r\n      workflowVo: workflowVo,\r\n      comment: comment\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を承認する。\r\n   * 本メソッドではワークフロー情報に対して以下の処理を行う。\r\n   * ・回覧状態を承認済みにする。\r\n   * ・次の審査者、承認者を空にする。\r\n   * ・承認者をセットする。\r\n   * ・ログを作成し、WorkflowVOにセットする。\r\n   * ・引数で渡された回覧ルートをチェックし、ユーザーが承認者ではなかった場合、\r\n   * 　回覧ルートのユーザー以降をクリアし、保存する。\r\n   * 先勝ち対応はされていない。常に後勝ちとなる。\r\n   * そのため、内部では最新を取得して、回覧状態やルートをチェックする。\r\n   * 本メソッド内でメール送信を実行する（非同期。ワークフロー情報保存後。）\r\n   * @param workflowVo ワークフローVO\r\n   * @param comment コメント\r\n   */\r\n  approveDocument(workflowVo: WorkflowVO, comment: string): Observable<WorkflowVO> {\r\n    const url = urlConfig.approveDocument;\r\n    const body = {\r\n      workflowVo: workflowVo,\r\n      comment: comment\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ワークフローに関するメール送信を実行する。\r\n   * operationで指定された操作時に送信すべき内容を、workflowVoから情報を取得する。\r\n   * そのため、申請・審査・承認などの操作をRemoteServiceのメソッドを実行し後の戻り値を使用しなくてはならない。\r\n   * @param workflowVo ワークフロー操作後のWorkflowVO\r\n   * @param operation ワークフロー操作  WorkflowLogクラスの定数使用 <br>\r\n   *            PROCESSING_NAME_APPLY : 申請 <br>\r\n   *            PROCESSING_NAME_APPROVE : 承認 <br>\r\n   *            PROCESSING_NAME_EXAMINE : 審査 <br>\r\n   *            PROCESSING_NAME_DISALLOW : 差し戻し <br>\r\n   *            PROCESSING_NAME_WITHDROW : 取り下げ\r\n   * @param mailAddress メールアドレス\r\n   */\r\n  sendWorkflowMail(workflowVo: WorkflowVO, operation: string, mailAddress: string): Observable<any> {\r\n    const url = urlConfig.sendWorkflowMail;\r\n    const body = {\r\n      workflowVo: workflowVo,\r\n      operation: operation,\r\n      mailAddress: mailAddress\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトを削除する。\r\n   * @param targetVo 削除するオブジェクト\r\n   */\r\n  deleteObject(targetVo: ObjectBaseVO): Observable<any> {\r\n    const url = urlConfig.deleteObject;\r\n    const body = ServerObjectBaseVo.convert(targetVo);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * アクセス権を更新する。\r\n   * @param target 更新対象のオブジェクト\r\n   *              （DocumentVO、FolderVO、ShortcutVO）…反映の場合は反映したい内容をセットしたオブジェクト\r\n   * @param acl アクセス権オブジェクト\r\n   *            AclVOでの所有者の変更は無視される。所有者の変更はacquireOwnerShipを実行すること。\r\n   * @param updateSubFolder サブフォルダのアクセス権をも上書く(true)ことを指定。フォルダのアクセス権設定時のみ有効。\r\n   * @param updateSubDoc サブの文書とショートカットのアクセス権を上書く(true)ことを指定。フォルダのアクセス権設定時のみ有効。\r\n   * @param skipError フォルダーアクセス権をサブフォルダー以下にも設定する場合にアクセス権のない項目や他の人が使用中の項目が含まれていたら、スキップするかどうか（true…スキップする。）\r\n   */\r\n  setAcl(target: ObjectBaseVO, acl: AclVO, updateSubFolder: boolean, updateSubDoc: boolean, skipError: boolean): Observable<any> {\r\n    const url = urlConfig.setAcl;\r\n    const body: UpdateRequest = {\r\n      target: ServerObjectBaseVo.convert(target),\r\n      acl: ServerAclVo.convert(acl),\r\n      updateSubFolder: updateSubFolder,\r\n      updateSubDoc: updateSubDoc,\r\n      skipError: skipError\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を差し戻す。（却下する）\r\n   * 本メソッドではワークフロー情報を以下のように変更する。\r\n   * 回覧状態⇒(空)\r\n   * 回覧ルート⇒変化なし\r\n   * 配布先⇒変化なし\r\n   * 申請者⇒(空)\r\n   * 承認者⇒(空)\r\n   * 次の審査/承認者⇒(空)\r\n   * ログを作成し、WorkflowVOにセットする。\r\n   * 先勝ち対応はされていない。常に後勝ちとなる。\r\n   * そのため、内部では最新を取得して、回覧状態やルートをチェックする。\r\n   * メール送信は本メソッドの戻り値のWorkflowVOを渡してsendWorkflowMailを実行する。\r\n   * @param workflowVo ワークフローVO\r\n   * @param comment コメント\r\n   */\r\n  disallowDocument(workflowVo: WorkflowVO, comment: string): Observable<WorkflowVO> {\r\n    const url = urlConfig.disallowDocument;\r\n    const body = {\r\n      workflowVo: workflowVo,\r\n      comment: comment\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を引き戻す。（申請取り下げ）\r\n   * 本メソッドではワークフロー情報を以下のように変更する。\r\n   * 回覧状態⇒(空)\r\n   * 回覧ルート⇒変化なし\r\n   * 配布先⇒変化なし\r\n   * 申請者⇒(空)\r\n   * 承認者⇒(空)\r\n   * 次の審査/承認者⇒(空)\r\n   * ログを作成し、WorkflowVOにセットする。\r\n   * 先勝ち対応はされていない。常に後勝ちとなる。\r\n   * そのため、内部では最新を取得して、回覧状態やルートをチェックする。\r\n   * メール送信は本メソッドの戻り値のWorkflowVOを渡してsendWorkflowMailを実行する。\r\n   * @param workflowVo ワークフローVO\r\n   * @param comment コメント\r\n   */\r\n  withdrawDocument(workflowVo: WorkflowVO, comment: string): Observable<WorkflowVO> {\r\n    const url = urlConfig.withdrawDocument;\r\n    const body = {\r\n      workflowVo: workflowVo,\r\n      comment: comment\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を審査する。\r\n   * 本メソッドではワークフロー情報を以下のように変更する。\r\n   * 回覧状態⇒回覧中\r\n   * 回覧ルート⇒審査時の内容\r\n   * 配布先⇒審査時の内容\r\n   * 申請者⇒申請者\r\n   * 承認者⇒(空)\r\n   * 次の審査/承認者⇒次の審査/承認者\r\n   * ログを作成し、WorkflowVOにセットする。\r\n   * 先勝ち対応はされていない。常に後勝ちとなる。\r\n   * そのため、内部では最新を取得して、回覧状態やルートをチェックする。\r\n   * メール送信は本メソッドの戻り値のWorkflowVOを渡してsendWorkflowMailを実行する。\r\n   * @param workflowVo ワークフローVO\r\n   * @param comment コメント\r\n   */\r\n  examineDocument(workflowVo: WorkflowVO, comment: string): Observable<WorkflowVO> {\r\n    const url = urlConfig.examineDocument;\r\n    const body = {\r\n      workflowVo: workflowVo,\r\n      comment: comment\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 更新モード中の指定したドキュメントの指定したセクションNOのサムネイルを取得する。\r\n   * サムネイルデータは戻り値のSectionVOのメンバにバイト配列でセットされる。\r\n   * ※一覧で使用するときは、セクションNoは1固定にする。\r\n   * @param documentVo 文書\r\n   * @param sectionNo セクションNo\r\n   */\r\n  getWorkingSectionThumbnail(documentVo: DocumentVO, sectionNo: number): Observable<SectionVO> {\r\n    const url = urlConfig.getWorkingSectionThumbnail;\r\n    const body: WorkingSectionThumbnailRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書の最終アクセス日等を更新する\r\n   * @param doc 文書\r\n   * @param mode モード（更新か読み取りか）\r\n   * 0…読み取りモード時\r\n   * 1…更新モード時\r\n   */\r\n  declareAccessDocument(doc: DocumentVO, mode: number): Observable<any> {\r\n    const url = urlConfig.declareAccessDocument;\r\n    const body: DeclareAccessRequest = {\r\n      document: ServerDocumentVo.convert(doc),\r\n      mode: mode\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書の採番番号を取得する。\r\n   * 実際に作成済みの文書を指定しなくてはならない。\r\n   * 採番は即時インクリメントされ、キャンセルはできない。\r\n   * @param doc 採番したい文書（cabId、id、typeIDが必要）\r\n   */\r\n  getDocumentUserNumber(doc: DocumentVO): Observable<any> {\r\n    const url = urlConfig.getDocumentUserNumber;\r\n    const body = ServerDocumentVo.convert(doc);\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書の版リストを取得する。\r\n   * @param document 文書を指定する。（cabId、idが必要）\r\n   */\r\n  getVersionList(document: DocumentVO): Observable<any[]> {\r\n    const url = urlConfig.getVersionList;\r\n    const body = ServerDocumentVo.convert(document);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書の版を削除する。\r\n   * @param version 版を指定する。(cabId,id,docIdが必要)\r\n   */\r\n  deleteVersion(version: VersionVO): Observable<any> {\r\n    const url = urlConfig.deleteVersion;\r\n    const body = ServerVersionModelVo.convert(version);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 版のプロパティを更新する。\r\n   * 版コメントしか更新できない。それ以外は無視する。\r\n   * @param version  更新の版を指定する。(cabId,id,docIdが必要)\r\n   */\r\n  updateVersionDetail(version: VersionVO): Observable<VersionVO> {\r\n    const url = urlConfig.updateVersionDetail;\r\n    const body = ServerVersionModelVo.convert(version);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定版IDの版データを取得する。\r\n   * ビューア起動時など、版IDしか分からない場合に使用する。\r\n   * @param version    版オブジェクトを指定する。（cabID,docIdが必要。※idにnullを入れると最新版が取得できる。）\r\n   */\r\n  getVersionDetail(version: VersionVO): Observable<VersionVO> {\r\n    const url = urlConfig.getVersionDetail;\r\n    const body = ServerVersionModelVo.convert(version);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のショートカットを作成する。\r\n   * @param shortcutName 生成するショートカット名を指定する。\r\n   * @param target 生成対象の文書を指定する。(cabId,idが必要)\r\n   */\r\n  createShortcut(target: DocumentVO): Observable<ShortcutVO> {\r\n    const url = urlConfig.createShortcut;\r\n    const body = ServerDocumentVo.convert(target);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のサブデータを作成する。\r\n   * 文書のサブデータの作成は非同期で行う。\r\n   * 文書のアクセス権や存在に関する例外は返すが、サブデータ作成や削除に関するエラーはログに出力する。\r\n   * @param document 文書を指定する。(cabId,idが必要)\r\n   * @param assignment サブデータ作成の指定を指定する。\r\n   */\r\n  createDocumentSubData(document: DocumentVO, assignment: CreateSubDataVO): Observable<any> {\r\n    const url = urlConfig.createDocumentSubData;\r\n    const body: UpdateSubDataRequest = {\r\n      document: ServerDocumentVo.convert(document),\r\n      assignment: ServerCreateSubDataVo.convert(assignment)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を結合する。新規文書は同フォルダで、生成される。\r\n   * @param docs 結合する文書リストを指定する。(cabId,idが必要)\r\n   *             先頭文書は文書情報(ACL含む)を引き継ぐ文書を指定する。\r\n   * @param newName 結合後の文書名を指定する。nullの場合は、エラーとする。\r\n   * @param deleteSource 元の文書を削除するどうかを指定する。true…削除する。\r\n   * @param targetFolder 登録先フォルダ名\r\n   */\r\n  bindDocuments(docs: DocumentVO[], newName: string, deleteSource: boolean, targetFolder: ObjectBaseVO | null = null): Observable<any> {\r\n    const url = urlConfig.bindDocuments;\r\n    const body: BindRequest = {\r\n      docs: docs,\r\n      newName: newName,\r\n      deleteSource: deleteSource,\r\n      target: targetFolder\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を分解する。新規文書は同フォルダで、生成される。\r\n   *\r\n   * @param document 分解の文書を指定する。(cabId,idが必要)\r\n   * @param deleteSource 元の文書が削除するどうかを指定する。trueは削除する。\r\n   * @param props 返す文書プロパティリストを指定。nullの場合は、すべて取得とする。\r\n   */\r\n  unbindDocument(document: DocumentVO, deleteSource: boolean, props: string[] | null): Observable<any> {\r\n    const url = urlConfig.unbindDocument;\r\n    const body: UnbindRequest = {\r\n      document: ServerDocumentVo.convert(document),\r\n      deleteSource: deleteSource,\r\n      props: props\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ゴミ箱のオブジェクトを削除する。\r\n   * 指定のオブジェクトがゴミ箱にない場合は、エラーとする。\r\n   * @param target 永久に削除するオブジェクトを指定する。(FolderVOまたはDocumentVOまたはShortcutVO)(cabId,idが必要)\r\n   */\r\n  eraseObject(target: ObjectBaseVO): Observable<any> {\r\n    const url = urlConfig.eraseObject;\r\n    const body = ServerObjectBaseVo.convert(target);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定のセクションより、文書を二分割する。\r\n   * documentUpdateStartを呼び出していないとエラーにする。\r\n   * 編集後、documentUpdateEndを呼び出して、コミットを指定する場合は、編集結果が永続化される。\r\n   * @param document 文書を指定する。（id,cabIdが必要）\r\n   * @param sectionNo 選択されているセクションNoを指定する。\r\n   * @param mode 分割モードを指定する。0か1以外の場合は、ArgumentExceptionを返す。\r\n   *             0:sectionNoを含む、以前のセクションを新文書とする。\r\n   *             1:sectionNoを含む、以後のセクションを新文書とする。\r\n   * @param name 新文書名を指定する。指定しない場合は、エラーとする。\r\n   */\r\n  divideDocument(document: DocumentVO, sectionNo: number, mode: number, name: string): Observable<DocumentVO> {\r\n    const url = urlConfig.divideDocument;\r\n    const body: DivideRequest = {\r\n      document: ServerDocumentVo.convert(document),\r\n      sectionNo: sectionNo,\r\n      mode: mode,\r\n      name: name\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書を差し替える。\r\n   * documentUpdateStartを呼び出されないとエラーにする。\r\n   * 編集後、documentUpdateEndを呼び出して、コミットを指定する場合は、編集結果を永続化される。\r\n   * @param document 文書を指定する。(cabId,idが必要)\r\n   * @param fileNameList セクションファイルのファイル名リスト。リストの順番で登録される。\r\n   */\r\n  replaceAllSection(document: DocumentVO, fileNameList: string[]): Observable<any> {\r\n    const url = urlConfig.replaceAllSection;\r\n    const body: ReplaceAllSectionRequest = {\r\n      document: ServerDocumentVo.convert(document),\r\n      fileNameList: fileNameList\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のセクションの実データのダウンロードを開始する。\r\n   * 全てのセクションも、ある特定のセクションもこのメソッドを使用する。\r\n   * ダウンロードをIDを返却する。\r\n   * この時点でJNAは非同期でダウンロードの処理を開始している。\r\n   * @param documentVo ダウンロードをしたい文書（cabIdとidが必要）\r\n   * @param sectionNo セクションNo（nullなら全セクション取得）\r\n   * @param versionId 版を指定する。nullの場合、最新版を取得する。\r\n   */\r\n  startExportSection(documentVo: DocumentVO, sectionNo: number | null, versionId: string | null): Observable<any> {\r\n    const url = urlConfig.startExportSection;\r\n    const body: ExportSectionStartRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo,\r\n      versionId: versionId\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定した文書のセクションの実データ書き出しの終了を待ち、ファイルを取得する。\r\n   * 全てのセクションも、ある特定のセクションもこのメソッドを使用する。\r\n   * 複数データあるときはzipファイルにする。1つのセクションの場合は、圧縮しない。\r\n   * プロパティファイルに記載されている出力先をベースとして、+セッションID\\Download\\ダウンロードID（圧縮ファイルはさらにフォルダ下に\\ZipFile）というパスを生成する。\r\n   * 取得したファイル名を元にサーブレットを実行し、zipファイルをダウンロードする。\r\n   * このメソッドの実行中にキャンセルを行うことができる。\r\n   * @param downloadId ダウンロードID startExportAllSectionで取得したダウンロードID。\r\n   */\r\n  exportSection(downloadId: string): Observable<any> {\r\n    const url = urlConfig.exportSection;\r\n    const body = {\r\n      downloadId: downloadId\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のセクションの実データのダウンロードを開始する。\r\n   * 全てのセクションも、ある特定のセクションもこのメソッドを使用する。\r\n   * ダウンロードをIDを返却する。\r\n   * この時点でJNAは非同期でダウンロードの処理を開始している。\r\n   * @param documents 対象文書のリスト。 cabIdとidとnameとsectionsが必要。\r\n   */\r\n  startExportDocuments(documents: DocumentVO[]): Observable<any> {\r\n    const url = urlConfig.startExportDocuments;\r\n    const body: StartExportDocumentsRequest = {\r\n      documents: documents\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定した文書のセクションの実データ書き出しの終了を待ち、ファイルを取得する。\r\n   * 全てのセクションも、ある特定のセクションもこのメソッドを使用する。\r\n   * 複数データあるときはzipファイルにする。1つのセクションの場合は、圧縮しない。\r\n   * プロパティファイルに記載されている出力先をベースとして、+セッションID\\Download\\ダウンロードID（圧縮ファイルはさらにフォルダ下に\\ZipFile）というパスを生成する。\r\n   * 取得したファイル名を元にサーブレットを実行し、zipファイルをダウンロードする。\r\n   * このメソッドの実行中にキャンセルを行うことができる。\r\n   * @param downloadId startExportDocumentsの戻り値。\r\n   */\r\n  exportDocuments(downloadId: string): Observable<any> {\r\n    const url = urlConfig.exportDocuments;\r\n    const body = {\r\n      downloadId: downloadId\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書ダウンロードのキャンセルを要求する。 exportDocumentsが実行されていない場合は、エラーとなる。\r\n   * キャンセル時は、ダウンロードID以下のフォルダ、ファイルを削除する。\r\n   * @param downloadId startExportDocumentsで取得したダウンロードID。\r\n   */\r\n  cancelExportDocuments(downloadId: string): Observable<any> {\r\n    const url = urlConfig.cancelExportDocuments;\r\n    const body: CancelExportDocumentsCSVRequest = {\r\n      resultSetId: downloadId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 文書のセクション一覧を取得する。\r\n   * 取得情報は、実データ以外の基本情報のみ。\r\n   * @param document 文書を指定（cabIdとidが必要）\r\n   * @param versionId 版IDを指定（nullのときは最新版）\r\n   *\r\n   */\r\n  getSectionList(document: DocumentVO, versionId: string | null): Observable<any[]> {\r\n    const url = urlConfig.getSectionList;\r\n    const body: SectionListRequest = {\r\n      document: ServerDocumentVo.convert(document),\r\n      versionId: versionId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 個人設定のプロファイルを保存する。\r\n   * @param settingXml 個人設定用オブジェクト\r\n   */\r\n  saveProfileSetting(settingXml: PrivateSetting): Observable<any> {\r\n    const url = urlConfig.saveProfileSetting;\r\n    const body: PrivateSettingRequest = settingXml;\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ログインユーザーのメールアドレスを変更する。\r\n   * @param mailAddress 変更後のメールアドレス\r\n   */\r\n  updateLoginUserAddress(mailAddress: string): Observable<EntryVO> {\r\n    const url = urlConfig.updateLoginUserAddress;\r\n    const body = {\r\n      mailAddress: mailAddress\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ログインユーザーのパスワードを変更する。nullを渡してもエラーにしない。\r\n   * @param password 変更後のパスワード\r\n   */\r\n  updateLoginUserPassword(password: string | null): Observable<any> {\r\n    const url = urlConfig.updateLoginUserPassword;\r\n    const body = {\r\n      password: password\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ユーザーが存在するかをチェックする。\r\n   */\r\n  checkExistLoginUser(): Observable<any> {\r\n    const url = urlConfig.checkExistLoginUser;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * 指定されたフォルダの文書の一覧をCSV出力する。\r\n   * @param resultSetId 一覧表示getChildrenで取得したresultSetId\r\n   * @param docProps  取得するPropertyDetailVOリスト。必須。\r\n   *                  リストにセットされている順にCSVに左から出力する\r\n   *                  各PropertyDetailVOには、nameとDisplayNameが必須。\r\n   * @param sort ソート条件指定　※検索結果出力時は無視される。\r\n   *              プロパティ名 ASC:false/DESC:true\r\n   * @param docTypeId 絞込みを行う文書タイプ。全ての場合はnull　※検索結果出力時は無視される。\r\n   * @param replaceMapList 値置き換えマップのリスト\r\n   *                       数値などで値が入っている場合に、置き換える文字列を指定する。\r\n   *                       リストの要素数は必ずdocPropsと同じ数になること。検索時は検索実施時のpropsと同数。\r\n   *                       置き換えしない場合は、nullをセットする。\r\n   *                       日付型の項目と対応する順番の要素には<\"date\", \"yyyyMMddHH\">などのように日付フォーマットを入れる。\r\n   *                       文書タイプIDと対応する順番の要素には、<\"文書タイプID\", \"文書タイプ名\">を入れる。\r\n   * @param type CSV出力する一覧の種類\r\n   *              EXPORT_TYPE_DOC_VIEW(1) …文書一覧\r\n   *              EXPORT_TYPE_SEARCH_RESULT(2) …検索結果\r\n   */\r\n  exportCSV(\r\n    resultSetId: string,\r\n    sort: Map<string, boolean>,\r\n    docProps: PropertyDetailVO[],\r\n    docTypeId: string | null,\r\n    replaceMapList: (Map<string, string> | null)[],\r\n    type: number\r\n  ): Observable<any> {\r\n    const url = urlConfig.exportCSV;\r\n    const body: ExportDocumentsCSVRequest = {\r\n      resultSetId: resultSetId,\r\n      sort: MapUtil.convertToMapEntryArray(sort),\r\n      docProps: docProps,\r\n      docTypeId: docTypeId,\r\n      replaceMapList: MapUtil.convertToArryaOfMapEntryArray(replaceMapList),\r\n      type: type\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * CSVファイル書き出しをキャンセルする。\r\n   * 書き出し自体が終了していれば、ファイルを削除する。\r\n   * 書き出し中に実行された場合は、何も行わない。\r\n   * @param resultSetId requestSearchで取得したID\r\n   */\r\n  cancelExportCSVFile(resultSetId: string): Observable<any> {\r\n    const url = urlConfig.cancelExportCSVFile;\r\n    const body = {\r\n      resultSetId: resultSetId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 設定ファイルの内容を取得する。\r\n   * 設定ファイルが存在しない場合はエラーとなる。\r\n   * @param fileName ファイル名（拡張子より前）\r\n   */\r\n  getConfig(fileName: string): Observable<any> {\r\n    const url = urlConfig.getConfig;\r\n    const body = {\r\n      fileName: fileName\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 一覧表示のためのプロファイルを削除する。\r\n   * 文書タイプを指定する。\r\n   * 該当するプロファイルが存在しなければ何もしない。エラーにもしない\r\n   * @param docTypeName 文書タイプ名（nullなら「すべての文書タイプ」のプロファイル）\r\n   */\r\n  deleteProfileDisplayList(docTypeName: string | null): Observable<any> {\r\n    const url = urlConfig.deleteProfileDisplayList;\r\n    const body = {\r\n      docTypeName: docTypeName\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 更新作業中の文書のセクション詳細を取得する。\r\n   * このメソッド内でセクションのデータを出力するパスを生成する。\r\n   * プロパティファイルに記載されている出力先をベースとして、+セッションID\\セクションデータIDというパスを生成する。\r\n   * @param sectionVo 詳細を取得したいセクションVO\r\n   * @param viewerId ビューアを一意に特定する値\r\n   * @param rendition 取得するデータの種類を指定\r\n   *                  0x1(RENDITION_TYPE_PRIMARY)　 セクションデータの取得\r\n   *                  0x4(RENDITION_TYPE_PDF) PDFデータの取得\r\n   *                  0x8(RENDITION_TYPE_FTS)　 全文検索データの取得\r\n   *                  0xf(RENDITION_TYPE_ALL) 上記のすべてデータの再取得\r\n   */\r\n  getWorkingSectionDetail(sectionVo: SectionVO, viewerId: string, rendition: number): Observable<any> {\r\n    const url = urlConfig.getWorkingSectionDetail;\r\n    const body: WorkingSectionDetailRequest = {\r\n      section: ServerSectionModelVo.convert(sectionVo),\r\n      viewerId: viewerId,\r\n      rendition: rendition\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * ごみ箱を空にする。（非同期）\r\n   * ※呼出し後に結果を確認するにはgetResultClearTrashAsyncを実行する。\r\n   * @param cabinet キャビネット\r\n   */\r\n  clearTrashAsync(cabinet: CabinetVO): Observable<any> {\r\n    const url = urlConfig.clearTrashAsync;\r\n    const body = ServerCabinetVo.convert(cabinet);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ごみ箱を空にする処理の結果を取得する。\r\n   */\r\n  getResultClearTrashAsync(): Observable<any> {\r\n    const url = urlConfig.getResultClearTrashAsync;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * フォルダーをコピーする。（非同期）\r\n   * ※呼出し後に結果を確認するにはgetResultCopyFolderAsyncを実行する。\r\n   * @param targetVo コピー対象のオブジェクト（cabIdとidが必要）\r\n   * @param destVo コピー先 CabinetVO、またはFolderVO（cabIdとid（FolderVOの場合）が必要）\r\n   * @param includeOldVersion 文書の旧版を複製する（文書以外のときは無視される。）\r\n   * @param includeWorkflowInfo 文書の回覧情報、回覧履歴を複製する（文書以外のときは無視される。）\r\n   */\r\n  copyFolderAsync(targetVo: FolderVO, destVo: ObjectBaseVO, includeOldVersion: boolean, includeWorkflowInfo: boolean): Observable<any> {\r\n    const url = urlConfig.copyFolderAsync;\r\n    const body: CopyAsyncRequest = {\r\n      target: targetVo,\r\n      dest: ServerObjectBaseVo.convert(destVo),\r\n      includeOldVersion: includeOldVersion,\r\n      includeWorkflowInfo: includeWorkflowInfo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * フォルダーコピーの結果を取得する。\r\n   */\r\n  getResultCopyFolderAsync(): Observable<FolderVO> {\r\n    const url = urlConfig.getResultCopyFolderAsync;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ごみ箱からフォルダを削除する。（非同期）\r\n   * ※呼出し後に結果を確認するにはgetResultEraseFolderAsyncを実行する。\r\n   * @param folder フォルダ\r\n   */\r\n  eraseFolderAsync(folder: FolderVO): Observable<any> {\r\n    const url = urlConfig.eraseFolderAsync;\r\n    const body = folder;\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * ごみ箱からフォルダを削除する処理の結果を確認する。\r\n   */\r\n  getResultEraseFolderAsync(): Observable<any> {\r\n    const url = urlConfig.getResultEraseFolderAsync;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * (V1.2でメソッド名を変更)\r\n   * アクセス権を更新する。（非同期）\r\n   * ※呼出し後に結果を確認するにはgetResultCopyFolderAsyncを実行する。\r\n   * @param target 更新対象のオブジェクト\r\n   *            　（DocumentVO、FolderVO、ShortcutVO）…反映の場合は反映したい内容をセットしたオブジェクト\r\n   * @param acl アクセス権オブジェクト\r\n   *            AclVOでの所有者の変更は無視される。所有者の変更はacquireOwnerShipを実行すること。\r\n   * @param updateSubFolder サブフォルダのアクセス権をも上書く(true)ことを指定。フォルダのアクセス権設定時のみ有効。\r\n   * @param updateSubDoc サブの文書とショートカットのアクセス権を上書く(true)ことを指定。フォルダのアクセス権設定時のみ有効。\r\n   * @param skipError フォルダーアクセス権をサブフォルダー以下にも設定する場合にアクセス権のない項目や他の人が使用中の項目が含まれていたら、スキップするかどうか\r\n   *                 （true…スキップする。）\r\n   * @param checkCount 閾値を超えていないかの確認をするかどうか\r\n   */\r\n  setContainerAclAsync(\r\n    target: ObjectBaseVO,\r\n    acl: AclVO,\r\n    updateSubFolder: boolean,\r\n    updateSubDoc: boolean,\r\n    skipError: boolean,\r\n    checkCount: boolean\r\n  ): Observable<any> {\r\n    const url = urlConfig.setContainerAclAsync;\r\n    const body: UpdateAsyncRequest = {\r\n      target: isFolderVO(target)\r\n        ? ServerFolderTypeVo.convert(target)\r\n        : isShortcutVO(target)\r\n        ? ServerShortcutModelVo.convert(target)\r\n        : target,\r\n      acl: ServerAclVo.convert(acl),\r\n      updateSubFolder: updateSubFolder,\r\n      updateSubDoc: updateSubDoc,\r\n      skipError: skipError,\r\n      checkCount: checkCount\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * フォルダアクセス権更新の結果を確認する。\r\n   */\r\n  getResultSetContainerAclAsync(): Observable<any> {\r\n    const url = urlConfig.getResultSetContainerAclAsync;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * 指定されたフォルダのフォルダ、ドキュメント、ショートカットの件数の取得\r\n   * @param currentFolder フォルダ(FolderVO)またはキャビネット(CabinetVO)またはごみ箱(TrashVO)\r\n   * @param sort ソート条件指定\r\n   * @param docProps docProps 取得するプロパティ名リスト\r\n   * @param docTypeId 絞込みを行う文書タイプ。全ての場合はnull\r\n   */\r\n  getChildren(currentFolder: ObjectBaseVO, sort: Map<string, boolean>, docProps: string[], docTypeId: string | null): Observable<object> {\r\n    const url = urlConfig.getChildren;\r\n    const body: FolderObjectRequest = {\r\n      currentFolder: ServerObjectBaseVo.convert(currentFolder),\r\n      sort: MapUtil.convertToMapEntryArray(sort),\r\n      docProps: docProps,\r\n      docTypeId: docTypeId\r\n    };\r\n    return this.post<FolderObjectResponse>(url, body).pipe(\r\n      map<FolderObjectResponse, object>(response => MapUtil.create(Object, response.list))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * オブジェクトのURLを取得する\r\n   * 存在しないオブジェクトでもURLを返却する\r\n   * @param target URLを取得したいオブジェクト（CabinetVO,FolderVO,DocumentVOのどれか）\r\n   * @param versionId 文書の旧版のURL取得時のみ指定する（nullの場合は最新版。FolderVO,CabinetVO指定時は無視する）\r\n   */\r\n  getObjectUrl(target: ObjectBaseVO, versionId: string | null): Observable<any> {\r\n    const url = urlConfig.getObjectUrl;\r\n    const body: ObjectUrlRequest = {\r\n      target: ServerObjectBaseVo.convert(target),\r\n      versionId: versionId\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * オブジェクトのMobileURLを取得する\r\n   * 存在しないオブジェクトでもURLを返却する\r\n   * @param target URLを取得したいオブジェクト（CabinetVO,FolderVO,DocumentVOのどれか）\r\n   */\r\n  getObjectMobileUrl(target: ObjectBaseVO): Observable<any> {\r\n    const url = urlConfig.getObjectMobileUrl;\r\n    const body = ServerObjectBaseVo.convert(target);\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   * （※V1.2 追加）\r\n   * 承認後の文書を更新する。（承認後修正）\r\n   * 本メソッドではワークフロー情報を以下のように変更する。\r\n   * 回覧状態⇒承認後修正\r\n   * 回覧ルート⇒変化なし\r\n   * 配布先⇒変化なし\r\n   * 申請者⇒(空)\r\n   * 承認者⇒(空)\r\n   * 次の審査/承認者⇒(空)\r\n   * ・回覧履歴を作成し、WorkflowVOにセットする。\r\n   * 先勝ち対応はされていない。常に後勝ちとなる。\r\n   * そのため、内部では最新を取得して、回覧状態やルートをチェックする。\r\n   * メール送信対応はしていない。\r\n   * @param documentVo セットが必要な項目（それ以外は無視する） cabIdとid\r\n   * @param version 版\r\n   * @param versionNo 版\r\n   * @param versionMemo 版コメント\r\n   * @param comment コメント\r\n   */\r\n  updateDocumentAfterApprove(\r\n    documentVo: DocumentVO,\r\n    version: number | null,\r\n    versionNo: string | null,\r\n    versionMemo: string | null,\r\n    comment: string | null\r\n  ): Observable<DocumentVO> {\r\n    const url = urlConfig.updateDocumentAfterApprove;\r\n    const body: UpdateApprovedRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      version: version,\r\n      versionNo: versionNo,\r\n      versionMemo: versionMemo,\r\n      comment: comment\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 配下のオブジェクトを含めてのアクセス権設定時のオブジェクトの最大数（閾値）を取得する\r\n   */\r\n  getThresholdForSetACL(): Observable<any> {\r\n    const url = urlConfig.getThresholdForSetACL;\r\n    return this.post<ThresholdResponse>(url);\r\n  }\r\n\r\n  /**\r\n   * 印刷用に文書のセクションPDFをサーバー一時フォルダに書き出す。。\r\n   * セクションデータIDを戻り値として返却する。\r\n   * プロパティファイルに記載されている出力先をベースとして、+セッションID\\セクションデータIDというパスを生成する。\r\n   * @param sectionVo 詳細を取得したいセクションVO\r\n   * @param viewerId ビューアを一意に特定する値\r\n   * @param versionId 版ID（nullの場合は最新版）\r\n   */\r\n  getSectionDetailForPrint(sectionVo: SectionVO, viewerId: string, versionId: string | null): Observable<any> {\r\n    const url = urlConfig.getSectionDetailForPrint;\r\n    const body: SectionDetailForPrintRequest = {\r\n      section: ServerSectionModelVo.convert(sectionVo),\r\n      viewerId: viewerId,\r\n      versionId: versionId\r\n    };\r\n    return this.postResponseTypeText(url, body);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * 操作ログを出力します。\r\n   * 実際の操作ログにはログインユーザー名、IPアドレス、日時、操作IDを付加して出力します。\r\n   * 例：[INFO]: ,\"Admin\",\"133.139.149.54\",\"2011/04/20 10:48:49\",\"10039\",\"セクションをダウンロードしました{=messageKeyを元にリソースから取得した文章+\r\n   * messageContents}\", \"2003_B5縦{=objectName}\",\"_96700002_3_96700002_6{=objectId}\"\r\n   * @param messageKey 操作ログメッセージのキー ※OperationLog_*.properties参照\r\n   * @param messageContents 操作ログメッセージに埋め込む文字列（先頭から埋め込む。数が合わない場合はエラーにせず埋められるところまで埋める。）\r\n   * @param objectName 対象のオブジェクト名\r\n   * @param objectId 対象のオブジェクトID\r\n   */\r\n  outOperationLog(messageKey: string, messageContents: string[], objectName: string, objectId: string): Observable<any> {\r\n    const url = urlConfig.outOperationLog;\r\n    const body: OperationLogRequest = {\r\n      messageKey: messageKey,\r\n      messageContents: messageContents,\r\n      objectName: objectName,\r\n      objectId: objectId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * サブデータを差し替える。\r\n   * @param documentVo 変更したい文書（cabIdとidが必要。）\r\n   * @param sectionNo 差し替え対象のセクションNo\r\n   * @param rendition サブデータの種類（SectionVOの定数を使用）\r\n   * @param viewerId ビューアID\r\n   * @param fileName サブデータのファイル名\r\n   */\r\n  setSubData(documentVo: DocumentVO, sectionNo: number, rendition: number, viewerId: string, fileName: string): Observable<any> {\r\n    const url = urlConfig.setSubData;\r\n    const body = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      section: sectionNo,\r\n      renditon: rendition,\r\n      viewerId: viewerId,\r\n      fileName: fileName\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定セクションに付箋をつける\r\n   * @param documentVo 文書を指定する\r\n   * @param tag [in]対象セクションを指定。以下のプロパティを利用する。\r\n   *            sectionNo:セクションNoを指定。\r\n   *            1～最大No（既存の最後のセクション番号）以外が指定された場合はエラーとする。\r\n   *            tagColor:該当セクションの付箋色を指定\r\n   *            tagText: 無視される\r\n   */\r\n  makeTag(documentVo: DocumentVO, tag: TagVO): Observable<any> {\r\n    const url = urlConfig.makeTag;\r\n    const body: CreateTagRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      tag: ServerTagModelVo.convert(tag)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定セクションのセクションの付箋情報(色/コメント)を登録・更新する。\r\n   * connectObject後、disconnectObjectの前に呼び出す。\r\n   * @param documentVo 文書を指定する\r\n   * @param tag セクションの付箋オブジェクトを指定する。\r\n   *            指定可能のデータ\r\n   *            sectionNo セクション番号を指定。\r\n   *            tagColor 付箋色の指定\r\n   *            tagText「,」を含まれない付箋コメントの指定。ただし、tagColorがnullの場合、値指定がnullでないとエラーとする。\r\n   */\r\n  updateTag(documentVo: DocumentVO, tag: TagVO): Observable<any> {\r\n    const url = urlConfig.updateTag;\r\n    const body: UpdateTagRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      tag: ServerTagModelVo.convert(tag)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定セクションのセクションの付箋情報(色/コメント)を削除する。\r\n   * 更新モードでなくても実行可能。更新は後勝ち。\r\n   * @param documentVo 文書を指定する\r\n   * @param sectionNo 対象のセクションNoを指定する\r\n   */\r\n  deleteTag(documentVo: DocumentVO, sectionNo: number): Observable<any> {\r\n    const url = urlConfig.deleteTag;\r\n    const body: DeleteTagRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 指定セクションの付箋情報(色/コメント)を編集する。\r\n   * 更新モード中に使用する。checkoutDocument後、checkinDocumentの前に呼び出す。\r\n   * @param documentVo 文書を指定する\r\n   * @param tag セクションの付箋オブジェクトを指定する。\r\n   *            指定可能のデータ\r\n   *            sectionNo　セクション番号を指定。\r\n   *            tagColor 付箋色の指定 tagText\r\n   *            「,」を含まない付箋コメントの指定。ただし、tagColorがnullの場合、値指定がnullでないとエラーとする。\r\n   */\r\n  editTag(documentVo: DocumentVO, tag: TagVO): Observable<any> {\r\n    const url = urlConfig.editTag;\r\n    const body: EditTagRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      tag: ServerTagModelVo.convert(tag)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 更新モード中の指定セクションの付箋情報(色/コメント)を削除する。\r\n   * 更新モード中に使用する。checkoutDocument後、checkinDocumentの前に呼び出す。\r\n   * @param documentVo 文書を指定する\r\n   * @param sectionNo 対象のセクションNoを指定する\r\n   */\r\n  clearTag(documentVo: DocumentVO, sectionNo: number): Observable<any> {\r\n    const url = urlConfig.clearTag;\r\n    const body: ClearTagRequest = {\r\n      document: ServerDocumentVo.convert(documentVo),\r\n      sectionNo: sectionNo\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   *  プロファイルに検索条件を保存する\r\n   * @param searchConditionVo 検索条件\r\n   */\r\n  saveProfileSearchCondition(searchConditionVo: SearchConditionVO): Observable<any> {\r\n    const url = urlConfig.saveProfileSearchCondition;\r\n    const body = ServerSearchConditionModelVo.convert(searchConditionVo);\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * プロファイルから検索条件取得（存在しなければnullを返す）\r\n   */\r\n  getProfileSearchCondition(): Observable<any> {\r\n    const url = urlConfig.getProfileSearchCondition;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * ツールバーのプロファイルを削除する。\r\n   */\r\n  deleteProfileSearchCondition(): Observable<any> {\r\n    const url = urlConfig.deleteProfileSearchCondition;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * 簡易ビューアのプロファイルを取得する。\r\n   * 該当するプロファイルが存在しなければnullを返す。\r\n   */\r\n  getProfileQuickViewer(): Observable<SearchConditionVO> {\r\n    const url = urlConfig.getProfileQuickViewer;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * 簡易ビューアのプロファイルを保存する。\r\n   * @param profileQuickViewerDatas データエントリと値のペアー。値は数値でも、文字列型でやり取りとする。\r\n   */\r\n  saveProfileQuickViewer(profileQuickViewerDatas: Map<string, string>): Observable<any> {\r\n    const url = urlConfig.saveProfileQuickViewer;\r\n    const body: QuickViewerRequest = {\r\n      quickViewerData: MapUtil.convertToMapEntryArray(profileQuickViewerDatas)\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * 開発環境にて、セッション情報に必要な属性を追加する。\r\n   */\r\n  updateSessionAttribute(): Observable<any> {\r\n    const url = urlConfig.updateSessionAttribute;\r\n    return this.post(url);\r\n  }\r\n\r\n  //\r\n  //  ユーティリティ\r\n  //\r\n\r\n  /**\r\n   * ソートを表す文字列を生成する\r\n   * @param sortProp ソート対象列名\r\n   * @param descend 降順ならtrueを、昇順ならfalseを指定する\r\n   */\r\n  makeSortString(sortProp: string | null, descend: boolean) {\r\n    const descendString = descend ? '1' : '0';\r\n    return sortProp ? sortProp + ',' + descendString : null;\r\n  }\r\n\r\n  /**\r\n   * クエリストリングを作成する\r\n   *\r\n   * パラメータ：{name1: value1, name2: value2}に対して\r\n   * ?name1=value1&name2=value2\r\n   * を返す。\r\n   *\r\n   * パラメータが存在しない場合は空文字列を返す。\r\n   *\r\n   * @param params パラメータのオブジェクト\r\n   */\r\n  makeQueryString(params): string {\r\n    const workParams: string[] = [];\r\n    for (const name in params) {\r\n      if (params[name]) {\r\n        const param = encode(name) + '=' + encode(params[name]);\r\n        workParams.push(param);\r\n      }\r\n    }\r\n    const ret = workParams.join('&');\r\n    return ret ? '?' + ret : '';\r\n  }\r\n\r\n  //\r\n  // private\r\n  //\r\n\r\n  /**\r\n   * コネクト\r\n   * UA/UDにて認証を行い、サーバへ接続する。\r\n   * @param viewerId ビューID\r\n   */\r\n  private connectServerInner(viewerId: string): Observable<any> {\r\n    const url = urlConfig.connectServer;\r\n    const body = {\r\n      viewerId: viewerId\r\n    };\r\n    return this.post(url, body);\r\n  }\r\n\r\n  /**\r\n   * サーバー情報を取得する。\r\n   */\r\n  private getServerInfoInner(): Observable<ServerInfo> {\r\n    const url = urlConfig.getServerInfo;\r\n    return this.post<ServerInfoResponse>(url).pipe(\r\n      map<ServerInfoResponse, ServerInfo>(response => MapUtil.create(ServerInfo, response.serverInfo))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * クライアント情報を取得する。\r\n   */\r\n  private getClientInfoInner(): Observable<ClientInfo> {\r\n    const url = urlConfig.getClientInfo;\r\n    return this.post<ClientInfoResponse>(url).pipe(\r\n      map<ClientInfoResponse, ClientInfo>(response => MapUtil.createClientInfo(response.clientInfo))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * ログイン情報を取得する。\r\n   */\r\n  private getLoginInfoInner(): Observable<LoginInfo> {\r\n    const url = urlConfig.getLoginInfo;\r\n    return this.post<InfoResponse>(url).pipe(map<InfoResponse, LoginInfo>(response => MapUtil.create(LoginInfo, response.info)));\r\n  }\r\n\r\n  /**\r\n   * 用語リストを取得する。\r\n   */\r\n  private getWordingInner(): Observable<any> {\r\n    const url = urlConfig.getWording;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * クライアントのログレベルを取得する。\r\n   */\r\n  private getClientLogLevelInner(): Observable<any> {\r\n    const url = urlConfig.getClientLogLevel;\r\n    return this.postResponseTypeText(url);\r\n  }\r\n\r\n  /**\r\n   * キャビネットへ接続しているかどうかをチェックする。\r\n   */\r\n  private getDomainListInner(): Observable<DomainVO[]> {\r\n    const url = urlConfig.getDomainList;\r\n    return this.post(url);\r\n  }\r\n\r\n  /**\r\n   * HTTPのpostメソッドを発行する\r\n   * @param url\r\n   * @param body\r\n   */\r\n  private post<T>(url: string, body?: any) {\r\n    const options = this.getHttpOptions();\r\n    const fullUrl = this.makeUrl(url);\r\n    return this.http.post<T>(fullUrl, body, options);\r\n  }\r\n\r\n  /**\r\n   * HTTPのpostメソッドを発行する（レスポンスがテキスト形式のAPIにて使用）\r\n   * @param url\r\n   * @param body\r\n   */\r\n  private postResponseTypeText<T>(url: string, body?: any) {\r\n    const options = this.getHttpOptionsResponseTypeText();\r\n    const fullUrl = this.makeUrl(url);\r\n    return this.http.post<T>(fullUrl, body, options);\r\n  }\r\n\r\n  /**\r\n   * HttpClientに渡すオプションを生成する\r\n   */\r\n  private getHttpOptions() {\r\n    const accessToken = localStorage.getItem(StorageKey.token);\r\n    const authToken = 'Basic ' + btoa('accesstoken:' + accessToken);\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization: authToken\r\n      })\r\n    };\r\n  }\r\n\r\n  /**\r\n   * HttpClientに渡すオプションを生成する（レスポンスがテキスト形式のAPIにて使用）\r\n   */\r\n  private getHttpOptionsResponseTypeText() {\r\n    const accessToken = localStorage.getItem(StorageKey.token);\r\n    const authToken = 'Basic ' + btoa('accesstoken:' + accessToken);\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        Accept: 'text/plain',\r\n        Authorization: authToken\r\n      })\r\n    };\r\n    // オブジェクト生成時に追加しようとすると互換性エラーが発生するため、後から追加\r\n    options['responseType'] = 'text';\r\n    return options;\r\n  }\r\n\r\n  /**\r\n   * 認証API用のHttpClientに渡すオプションを生成する\r\n   */\r\n  private getAuthenticationHttpOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        Accept: 'application/json'\r\n      })\r\n    };\r\n  }\r\n\r\n  /**\r\n   * URLを生成する\r\n   * @param tail URLの末尾部分\r\n   */\r\n  private makeUrl(tail: string) {\r\n    return urlConfig.host + urlConfig.path + tail;\r\n  }\r\n}\r\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { urlConfig } from '../url.config';\r\n\r\n/**\r\n * HttpリクエストにCookieを付与する\r\n */\r\n@Injectable()\r\nexport class CookieInterceptor implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // updateSessionAttributeにのみCookieを乗せる\r\n    if (request.url.indexOf(urlConfig.updateSessionAttribute) >= 0) {\r\n      request = request.clone({\r\n        withCredentials: true\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","/**\r\n * numberとDateの変換を行います\r\n */\r\nexport class DateConverter {\r\n  /**\r\n   * 配列を扱う便利関数群\r\n   */\r\n  static Arrays = class {\r\n    /**\r\n     * VOのプロパティをnumberからDateに変換します\r\n     * @param array VO配列\r\n     */\r\n    static numberToDate(array: object[]): object[] {\r\n      for (const vo of array) {\r\n        new DateConverter(vo).numberToDate();\r\n      }\r\n      return array;\r\n    }\r\n\r\n    /**\r\n     * VOのプロパティをDateからnumberに変換します\r\n     * @param array VO配列\r\n     */\r\n    static dateToNumber(array: object[]): object[] {\r\n      for (const vo of array) {\r\n        new DateConverter(vo).dateToNumber();\r\n      }\r\n      return array;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * voフォルダに属するモデルクラスの全てのDateプロパティ名\r\n   *\r\n   * 変換すべきプロパティ(number型)を見つけるために Date型のプロパティ名を配列として持っています\r\n   *\r\n   * JSONをparseしてできたオブジェクトはinstanceofでのVOクラスの判定ができないので、プロパティ名のみでの判定になります\r\n   *\r\n   * (VOにDate型プロパティを新たに追加する場合には名前が重複しないように注意してください)\r\n   *\r\n   * 既知のVO以外のオブジェクトを渡すと、想定外のプロパティが変換されてしまう可能性があります\r\n   */\r\n  private static readonly DATE_PROPS = [\r\n    // VersionVO\r\n    'checkinDate',\r\n    // Sys0BaseVO\r\n    'createDate',\r\n    // SearchConditionItemVO\r\n    'dateValueFrom',\r\n    'dateValueTo',\r\n    // DocumentVO\r\n    'entryDate',\r\n    'lastAccessDate',\r\n    'lastUpdateDate',\r\n    'retensionDate',\r\n    'userDate1',\r\n    'userDate2',\r\n    'userDate3',\r\n    'userDate4',\r\n    'userDate5',\r\n    // WorkflowLog\r\n    'updateDate'\r\n  ];\r\n\r\n  /**\r\n   * Date型のプロパティ名を持つVOの配列型のプロパティ名\r\n   *\r\n   * VOのプロパティをなめていったときに要素もパースするかどうかの判定に使います\r\n   *\r\n   * DocumentVO.tagListのように、Date型プロパティを持たないTagVOのようなVOの配列プロパティは、掘り下げる必要がないため、ここに列挙しません\r\n   */\r\n  private static readonly ARRAY_PROPS = [\r\n    'children', // ObjectBaseVO\r\n    'items' // SearchConditionVO\r\n  ];\r\n\r\n  /**\r\n   * オブジェクトのプロパティのうち、配列形式のものについて、要素すべてを変換する便利関数\r\n   * @param target VOの配列型のプロパティを持つオブジェクト\r\n   * @example 以下の場合propA, propBの要素が変換対象\r\n   *\r\n   * target  { propA: object[], propB: object[], propC: string }\r\n   */\r\n  static numberToDateForArrayProps(target: object): object {\r\n    DateConverter.convertArrayProps(target, DateConverter.Arrays.numberToDate);\r\n    return target;\r\n  }\r\n\r\n  /**\r\n   * オブジェクトのプロパティのうち、配列形式のものについて、要素すべてを変換する便利関数\r\n   * @param target VOの配列型のプロパティを持つオブジェクト\r\n   * @example 以下の場合propA, propBの要素が変換対象\r\n   *\r\n   * target  { propA: object[], propB: object[], propC: string }\r\n   */\r\n  static dateToNumberForArrayProps(target: object): object {\r\n    DateConverter.convertArrayProps(target, DateConverter.Arrays.dateToNumber);\r\n    return target;\r\n  }\r\n\r\n  private static convertArrayProps(target: object, converter: (arrayOfVO: object[]) => void): object {\r\n    for (const propName of Object.keys(target)) {\r\n      const prop = target[propName];\r\n      if (Array.isArray(prop)) {\r\n        converter(prop);\r\n      }\r\n    }\r\n    return target;\r\n  }\r\n\r\n  constructor(private target: object) {}\r\n\r\n  /**\r\n   * VOのプロパティをnumberからDateに変換します\r\n   *\r\n   * numberは\r\n   * 1970年1月1日0時0分0秒(UTC)を起点とした経過ミリ秒\r\n   */\r\n  numberToDate(): object {\r\n    this.parseVO(this.target, this.toDate.bind(this));\r\n    return this.target;\r\n  }\r\n\r\n  /**\r\n   * VOのプロパティをDateからnumberに変換します\r\n   *\r\n   * numberは\r\n   * 1970年1月1日0時0分0秒(UTC)を起点とした経過ミリ秒\r\n   */\r\n  dateToNumber(): object {\r\n    this.parseVO(this.target, this.toNumber.bind(this));\r\n    return this.target;\r\n  }\r\n\r\n  private toDate(vo: object, propName: string): void {\r\n    if (this.datePropsContains(propName)) {\r\n      const asNumber = vo[propName];\r\n      // 念のため numberかどうかはチェック\r\n      if (typeof asNumber === 'number') {\r\n        vo[propName] = new Date(asNumber);\r\n      }\r\n    }\r\n  }\r\n\r\n  private toNumber(vo: object, propName: string): void {\r\n    const asDate = vo[propName];\r\n    // JSONからparseされたオブジェクトのメンバーでも、Dateへの変換で new Date() してるはずなのでinstanceof Dateで判定可能\r\n    if (asDate instanceof Date) {\r\n      vo[propName] = asDate.getTime();\r\n    }\r\n  }\r\n\r\n  private datePropsContains(propName: string): boolean {\r\n    return DateConverter.DATE_PROPS.some(dateProp => propName === dateProp);\r\n  }\r\n\r\n  /**\r\n   * VOのプロパティにcallbackを適用する。プロパティが、特定のVOの配列であれば その要素(VO)にも\r\n   * @param vo json から parseされてできたVOオブジェクトも考慮に入れる\r\n   * @param callback\r\n   */\r\n  private parseVO(vo: object, callback: (object, string) => void): void {\r\n    for (const propName of Object.keys(vo)) {\r\n      const value = vo[propName];\r\n      if (value == null) {\r\n        continue;\r\n      }\r\n      // 特定の配列プロパティなら要素全てparseVOします\r\n      if (Array.isArray(value) && DateConverter.ARRAY_PROPS.some(arrayProp => propName === arrayProp)) {\r\n        for (const element of value) {\r\n          this.parseVO(element, callback);\r\n        }\r\n      } else {\r\n        callback(vo, propName);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Java側(サーバー側)の APIの Map<String, T> は このオブジェクトの配列の形でJSONにしてやりとりします\r\n */\r\nexport class MapEntry<T> {\r\n  key: string;\r\n  value: T;\r\n}\r\n","import { ApplicationError } from './../../application-error';\r\nimport { ClientInfo } from './../../models/client-info';\r\nimport { MapEntry } from './map-entry';\r\n\r\n/**\r\n * サーバーから得た値からクライアントのモデルをに変換します\r\n */\r\nexport class MapUtil {\r\n  static createClientInfo(array: MapEntry<any>[]): ClientInfo {\r\n    const METHOD = 'createClientInfo';\r\n\r\n    const info = new ClientInfo();\r\n    // ClientInfoのMapのキーとClientInfoのプロパティ名は同じではないので、(一部キーに '&' が含まれる) 一つ一つキーを調べて値を入れる\r\n    for (const e of array) {\r\n      if (e.key === ClientInfo.Key.MAIN_DND_PATH) {\r\n        info.mainDnDPath = e.value as string;\r\n      } else if (e.key === ClientInfo.Key.MAIN_DND_STATUS) {\r\n        info.mainDnDStatus = e.value as string;\r\n      } else if (e.key === ClientInfo.Key.VIEWER_DND_PATH) {\r\n        info.viewerDnDPath = e.value as string;\r\n      } else if (e.key === ClientInfo.Key.VIEWER_DND_STATUS) {\r\n        info.viewerDnDStatus = e.value as string;\r\n      } else if (e.key === ClientInfo.Key.VIEWER_DND_DISABLE_PATH) {\r\n        info.viewerDnDDisablePath = e.value as string;\r\n      } else if (e.key === ClientInfo.Key.SEARCH_MAX_COUNT) {\r\n        info.searchMaxCount = e.value as number;\r\n      } else if (e.key === ClientInfo.Key.TRASH_MAX_COUNT) {\r\n        info.trashMaxCount = e.value as number;\r\n      } else if (e.key === ClientInfo.Key.TIMESTAMP_ON) {\r\n        info.timestampOn = e.value as boolean;\r\n      } else if (e.key === ClientInfo.Key.TIMESTAMP_TOTAL_TRADE_PRICE_DISPLAY_NAME) {\r\n        info.timestampTotalTradePriceDisplayName = e.value as string;\r\n      } else {\r\n        // throw new ApplicationError(`[${METHOD}] unknown property ${e}`);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /**\r\n   * MapEntryのkey文字列がプロパティ名、valueがその値、であるオブジェクトを作ります。メンバー数はMapEntry配列の要素数と同じになります。\r\n   *\r\n   * @param ctor 生成するオブジェクトのコンストラクタ関数\r\n   * @param props Java層で Map<String, V>で表現されているものを /rpc経由でJSONで受けたもの。オブジェクトのプロパティになります\r\n   */\r\n  static create<T, V>(ctor: new () => T, props: MapEntry<V>[]): T {\r\n    const object = new ctor();\r\n    for (const e of props) {\r\n      object[e.key] = e.value;\r\n    }\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * MapをMapEntry[]に変換します\r\n   * @param map\r\n   */\r\n  static convertToMapEntryArray<T>(map: Map<string, T>): MapEntry<T>[] {\r\n    const entryArray: MapEntry<T>[] = [];\r\n\r\n    if (map.forEach) {\r\n      map.forEach((value: T, key: string) => {\r\n        if (value != null) {\r\n          const entry = new MapEntry<T>();\r\n          entry.key = key;\r\n          entry.value = value;\r\n          entryArray.push(entry);\r\n          //        entryArray.push({ key, value });\r\n        }\r\n      });\r\n    } else {\r\n      const entry = new MapEntry<T>();\r\n      for (const key of Object.getOwnPropertyNames(map)) {\r\n        entry.key = key;\r\n        entry.value = map[key];\r\n        entryArray.push(entry);\r\n      }\r\n    }\r\n    return entryArray;\r\n  }\r\n\r\n  /**\r\n   * Mapの配列用の便利関数\r\n   * @param mapList\r\n   */\r\n  static convertToArryaOfMapEntryArray<T>(mapList: (Map<string, T> | null)[]): (MapEntry<T>[] | null)[] {\r\n    const arrayOfMapEntryArray: (MapEntry<T>[] | null)[] = [];\r\n    for (const map of mapList) {\r\n      arrayOfMapEntryArray.push(map ? MapUtil.convertToMapEntryArray(map) : map);\r\n    }\r\n    return arrayOfMapEntryArray;\r\n  }\r\n}\r\n","/**\r\n * VOクラスの変換\r\n */\r\nexport class VoConverter {\r\n  /**\r\n   * VO型のプロパティを、サーバ側のVOと同一プロパティに変換する\r\n   * @param target VOクラスのプロパティを保持している変換対象のVO\r\n   * @param castPair VO型のプロパティの型とtypeGuardのセット{cast, serverVo}\r\n   * @param keys  変換先VOクラスのプロパティリスト\r\n   */\r\n  static convertVoProperties(target, castPair, keys: []) {\r\n    for (const key of keys) {\r\n      if (Array.isArray(target[key])) {\r\n        // リストの場合\r\n        const conv = castPair.find(value => {\r\n          return value.cast(target[key][0]);\r\n        });\r\n        if (conv != null) {\r\n          // XxxVO[]の場合\r\n          target[key] = target[key].map(obj => {\r\n            return conv.serverVo.convert(obj);\r\n          });\r\n        }\r\n      } else if (typeof target[key] === 'object') {\r\n        // オブジェクトの場合\r\n        const conv = castPair.find(value => {\r\n          return value.cast(target[key]);\r\n        });\r\n        if (conv != null) {\r\n          // XxxVOの場合\r\n          target[key] = conv.serverVo.convert(target[key]);\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  }\r\n}\r\n","import { Type } from '@angular/core';\r\n\r\nimport { InjectorProvider } from '../utils/injector-provider';\r\n\r\nimport { BaseModelLocatorService } from './base-model-locator.service';\r\n\r\n/**\r\n * 現在のlocator serviceインスタンス\r\n */\r\nlet locatorService: BaseModelLocatorService;\r\n\r\n/**\r\n * locator serviceを返すfactory\r\n */\r\nexport function locatorServiceFactory() {\r\n  return locatorService;\r\n}\r\n\r\n/**\r\n * 現在のlocator serviceのクラスを登録する\r\n * @param serviceType locator serviceのクラス\r\n */\r\nexport function setLocatorService<T extends BaseModelLocatorService>(serviceType: Type<T>) {\r\n  locatorService = InjectorProvider.get().get(serviceType);\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\nimport { HttpService } from './http.service';\r\n\r\n/**\r\n * コンソールとサーバーの「クライアントログ」に出力します. 製品版ではコンソールには出力しません\r\n *\r\n * @example\r\n * constructor(private logger: Logger) {}\r\n *\r\n * @example\r\n * this.logger.info('X Component initialized.');\r\n *\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Logger {\r\n  /**\r\n   * LEVEL FATAL\r\n   */\r\n  static readonly LEVEL_FATAL = 0;\r\n\r\n  /**\r\n   * LEVEL ERROR\r\n   */\r\n  static readonly LEVEL_ERROR = 1;\r\n\r\n  /**\r\n   * LEVEL WARN\r\n   */\r\n  static readonly LEVEL_WARN = 2;\r\n\r\n  /**\r\n   * LEVEL INFO\r\n   */\r\n  static readonly LEVEL_INFO = 3;\r\n\r\n  /**\r\n   * LEVEL DEBUG\r\n   */\r\n  static readonly LEVEL_DEBUG = 4;\r\n\r\n  private static readonly dateFormat = 'yyyy-MM-dd HH:mm:ss,SSS';\r\n  private static readonly datePipe = new DatePipe('en-US'); // en-US以外は使えない\r\n\r\n  /**\r\n   * log level\r\n   */\r\n  private _logLevel;\r\n  set logLevel(number) {\r\n    this.info =\r\n      !environment.production && number >= Logger.LEVEL_INFO\r\n        ? (function() {\r\n            const timestamp = function() {};\r\n            timestamp.toString = function() {\r\n              return Logger.now();\r\n            };\r\n            return console.log.bind(console, '%s', timestamp, '-');\r\n          })()\r\n        : () => {};\r\n\r\n    this.warn =\r\n      !environment.production && number >= Logger.LEVEL_WARN\r\n        ? (function() {\r\n            const timestamp = function() {};\r\n            timestamp.toString = function() {\r\n              return Logger.now();\r\n            };\r\n            return console.warn.bind(console, '%s', timestamp, '-');\r\n          })()\r\n        : () => {};\r\n\r\n    this._logLevel = number;\r\n  }\r\n\r\n  get logLevel() {\r\n    return this._logLevel;\r\n  }\r\n\r\n  private static now(): string {\r\n    return Logger.datePipe.transform(Date.now(), Logger.dateFormat) || '';\r\n  }\r\n\r\n  constructor(private httpService: HttpService) {\r\n    this.logLevel = Logger.LEVEL_FATAL;\r\n  }\r\n\r\n  /**\r\n   * console.logのラッパーとなるfunctionのプロパティ。開発時/ログレベルがINFO以上の時にコンソールに出力します。\r\n   * 時刻を表示します。\r\n   *\r\n   * 補足:インスタンス生成時setterにて environmentを見てbound function になるか、なにもしない関数になるかが決まる\r\n   *\r\n   * @example\r\n   * // メソッドと同じように利用する<br>\r\n   * this.logger.info('X Component initialized.');\r\n   *\r\n   * @param {any} コンソールに出力するもの\r\n   */\r\n  // tslint:disable-next-line:member-ordering (プロパティだけどメソッドのように使うのでここに配置)\r\n  info;\r\n\r\n  /**\r\n   * console.warnのラッパーとなるfunctionのプロパティ。開発時/ログレベルがWARNING以上の時に出力します。時刻を表示します。\r\n   *\r\n   * 補足:インスタンス生成時setterにて environmentを見てbound function になるか、なにもしない関数になるかが決まる\r\n   *\r\n   * @example\r\n   * // メソッドと同じように利用する<br>\r\n   * this.logger.warn('X Component initialized.');\r\n   *\r\n   * @param {any} コンソールに出力するもの\r\n   */\r\n  // tslint:disable-next-line:member-ordering (プロパティだけどメソッドのように使うのでここに配置)\r\n  warn;\r\n\r\n  /**\r\n   * サーバーの「クライアントログ」にメッセージを書き込みます。開発時にのみコンソールにも出力しクライアント時刻を表示します\r\n   *\r\n   * 制限: コンソール出力時 ファイル名・行数はこのファイルのconsolo.errorを呼ぶところになります。\r\n   * 　　　出力はJSON.stringfy()したものとなります。\r\n   * @param args\r\n   */\r\n  error(...args) {\r\n    const message = JSON.stringify(args);\r\n    if (!environment.production) {\r\n      console.error.call(console, Logger.now() + ' -', message); // このファイルとこの行番号が出る\r\n    }\r\n    this.outClientLog(message);\r\n  }\r\n\r\n  /**\r\n   * infoログを出力可能かどうかを表します。\r\n   *\r\n   * @return true 出力可能 false 出力不可\r\n   */\r\n  isDebug(): boolean {\r\n    return this.canWriteLog(Logger.LEVEL_DEBUG);\r\n  }\r\n\r\n  /**\r\n   * infoログを出力可能かどうかを表します。\r\n   *\r\n   * @return true 出力可能 false 出力不可\r\n   */\r\n  isInfo(): boolean {\r\n    return this.canWriteLog(Logger.LEVEL_INFO);\r\n  }\r\n\r\n  /**\r\n   * warnログを出力可能かどうかを表します。\r\n   *\r\n   * @return true 出力可能 false 出力不可\r\n   */\r\n  isWarn(): boolean {\r\n    return this.canWriteLog(Logger.LEVEL_WARN);\r\n  }\r\n\r\n  /**\r\n   * errorログを出力可能かどうかを表します。\r\n   *\r\n   * @return true 出力可能 false 出力不可\r\n   */\r\n  isError(): boolean {\r\n    return this.canWriteLog(Logger.LEVEL_ERROR);\r\n  }\r\n\r\n  /**\r\n   * errorログを出力可能かどうかを表します。\r\n   *\r\n   * @return true 出力可能 false 出力不可\r\n   */\r\n  isFatal(): boolean {\r\n    return this.canWriteLog(Logger.LEVEL_FATAL);\r\n  }\r\n\r\n  private outClientLog(message) {\r\n    this.httpService.outClientLog(this.logLevel, message);\r\n  }\r\n\r\n  private canWriteLog(level: number): boolean {\r\n    return level <= this.logLevel;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, ObservableInput, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { Authenticate } from '../models/authenticate';\r\nimport { StorageKey } from '../storage-key';\r\nimport { Sys0JavaScriptMethodType } from '../sys0-java-script-method-type';\r\nimport { ExternalInterface } from '../utils/external-interface';\r\n\r\nimport { HttpService } from './http.service';\r\nimport { Logger } from './logger.service';\r\n\r\n/**\r\n * このサービスは開発モード用です\r\n *\r\n * 認証を依頼するサービスです\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  /**\r\n   * ログインされた状態かどうかを保持します\r\n   */\r\n  isLoggedIn = false;\r\n\r\n  /**\r\n   * パラメータ\r\n   */\r\n  queryParams: any = undefined;\r\n\r\n  /**\r\n   * ログイン後に移るURLパス ( main or viewer)\r\n   */\r\n  private redirectUrl: string;\r\n\r\n  constructor(private router: Router, private httpService: HttpService, private logger: Logger) {}\r\n\r\n  getRedirectUrl(): string {\r\n    return this.redirectUrl;\r\n  }\r\n\r\n  setRedirectUrl(url: string) {\r\n    this.logger.info(`setRedirectUrl: ${url}`);\r\n    this.redirectUrl = url;\r\n  }\r\n\r\n  /**\r\n   * 認証APIをコールし認証結果を反映する\r\n   *\r\n   * @param accountName\r\n   * @param password\r\n   * @param domainName\r\n   */\r\n  login(accountName: string, password: string, domainName: string): Observable<boolean> {\r\n    // 成功時の処理\r\n    const onSuccess = (authResult: Authenticate) => {\r\n      this.isLoggedIn = true;\r\n      localStorage.setItem(StorageKey.token, authResult.accessToken);\r\n      // JS/ActiveX初期化（本番構成ではサーバーから降ってくるHTMLに呼び出しが含まれている想定なので、開発時のみ自力で呼び出している）\r\n      ExternalInterface.call(Sys0JavaScriptMethodType.EXTERNAL_AUTO_EDIT_INIT, authResult.accessToken, '1', '104857600', '10485760');\r\n      // 開発時のみ開発用APIを呼ぶ\r\n      this.httpService.updateSessionAttribute().subscribe();\r\n    };\r\n\r\n    // エラー時の処理\r\n    const onError = (e: any) => {\r\n      this.logger.info(e);\r\n      this.isLoggedIn = false;\r\n    };\r\n\r\n    // booleanにする エラーのときは呼ばれない\r\n    const switchToBooleanOnSuccess = (value: Authenticate, index: number) => {\r\n      return of(true);\r\n    };\r\n\r\n    return this.httpService.authenticate(accountName, password, domainName).pipe(\r\n      // doを使いたかったが警告が出るのでpipe & tap\r\n      tap<Authenticate>(onSuccess, onError),\r\n      switchMap<Authenticate, ObservableInput<boolean>>(switchToBooleanOnSuccess)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * ユーザーが行きたいページに遷移する\r\n   */\r\n  navigate() {\r\n    this.logger.info(`navigate to ${this.redirectUrl}`);\r\n    if (this.redirectUrl != null) {\r\n      this.router.navigate([this.redirectUrl], this.queryParams);\r\n    }\r\n  }\r\n}\r\n","import { ComponentRef, Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport * as _ from 'lodash';\r\n\r\nimport { MainState } from '../../main/store/main.state';\r\nimport { AlertDialogComponent } from '../../shared/containers/dialogs/alert-dialog/alert-dialog.component';\r\nimport { Sys0Alert } from '../containers/dialogs/sys0-alert';\r\nimport { SystemCloseDialogComponent } from '../containers/dialogs/system-close-dialog/system-close-dialog.component';\r\nimport { Alert } from '../models/alert';\r\nimport { CursorType } from '../models/cursor-css';\r\nimport { Sys0AlertType } from '../models/sys0-alert-type';\r\nimport * as CoreAction from '../store/core.actions';\r\nimport { getApplicationInitializationPreLoading } from '../store/core.selectors';\r\n\r\nimport { Logger } from './logger.service';\r\nimport { PopupService } from './popup.service';\r\nimport { StateUtilService } from './state-util.service';\r\nimport { WordingService } from './wording.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageDialogService {\r\n  /** 通信エラーメッセージ */\r\n  private static readonly NO_MESSAGE_RESOURCE_ERROR: string = '通信エラーが発生しました。\\n画面を閉じて終了してください。';\r\n\r\n  // システムエラー表示画面のインスタンス\r\n  private sysCloseDialog: ComponentRef<SystemCloseDialogComponent> | null = null;\r\n\r\n  constructor(\r\n    private wordingService: WordingService,\r\n    private popupService: PopupService<SystemCloseDialogComponent>,\r\n    private store: Store<MainState>,\r\n    private logger: Logger,\r\n    private stateUtilService: StateUtilService\r\n  ) {}\r\n\r\n  /**\r\n   * ポップアップとエラー情報エリアにメッセージを表示します.\r\n   *\r\n   * @param messageKey Alertに表示するメッセージキーを指定します。\r\n   * @param flags\tAlertに表示するボタン群を指定します。\r\n   * @param type Alertのエラーの種類を指定します。\r\n   * @param closeHandler Alertを閉じた時に発生したCloseEventを取得するHandlerFunctionを指定します。\r\n   * @param enableCloseOnEscKeyDownFlag Escキーで画面を閉じるかを指定します。\r\n   *\r\n   * @return メッセージ表示ダイアログのインスタンスを返します\r\n   *\r\n   * ★Stitch V1.3対応\r\n   * 引数 textをmessageKeyに変更（本メソッド呼び出し時には用語解決されていないことを明示するため）\r\n   * 引数 parentはAngularで不要のため、削除\r\n   * 引数 defaultButtonFlag及び補正処理はAngularで不要のため、削除（詳細はAlertDialogComponentのクラスコメント参照）\r\n   * 引数 enableCloseOnEscKeyDownFlagは設定した真偽値と逆の動きをするバグがあるので、修正\r\n   */\r\n  public showErrorMessage(\r\n    messageKey: string,\r\n    flags: number = Alert.OK,\r\n    type: number = Sys0AlertType.TYPE_WARNING,\r\n    closeHandler: Function | null = null,\r\n    enableCloseOnEscKeyDownFlag: boolean = true\r\n  ): ComponentRef<AlertDialogComponent> | null {\r\n    // 初期化処理の進捗ダイアログが表示中の場合\r\n    if (this.getPreLoadingStatus()) {\r\n      // 進捗ダイアログを閉じる\r\n      this.store.dispatch(new CoreAction.HideInitializationPreLoader());\r\n    }\r\n\r\n    // ★Stitch v1.3対応\r\n    // title, iconClassの発送を削除\r\n    // これらは実質的にtypeによって定まっているため、\r\n    // Sys0Alert(AlertDialogComponent)側に制御を集約する\r\n    return Sys0Alert.show(messageKey, flags, type, closeHandler, enableCloseOnEscKeyDownFlag);\r\n  }\r\n\r\n  /**\r\n   * システムの操作が不能な場合のメッセージダイアログを表示します。\r\n   *\r\n   * アプリケーション停止アクションを発行し、stateのApplicationStopにtrueを設定します\r\n   *\r\n   * @param iconType エラーダイアログのアイコンタイプ。@see Sys0AlertType\r\n   * @param msgKey メッセージのキーを指定します。\r\n   * @param args 可変長引数。用語内の{0}, {1}, ... に置き換える数や文字列を指定\r\n   * @return SystemCloseDialogのインスタンス\r\n   *\r\n   */\r\n  showSystemCloseDialog(iconType: number, msgKey: string, ...args: (string | number)[]): ComponentRef<SystemCloseDialogComponent> | null {\r\n    // 初期化処理の進捗ダイアログが表示中の場合\r\n    if (this.getPreLoadingStatus()) {\r\n      // 進捗ダイアログを閉じる\r\n      this.store.dispatch(new CoreAction.HideInitializationPreLoader());\r\n    }\r\n    if (this.sysCloseDialog != null) {\r\n      // 既に表示されている場合は表示しない。\r\n      return null;\r\n    }\r\n\r\n    // アプリケーション停止 Actionを発行する\r\n    this.store.dispatch(new CoreAction.ApplicationStop());\r\n\r\n    // systemCloseDialogComponentを生成\r\n    this.sysCloseDialog = this.popupService.createComponentInstance(SystemCloseDialogComponent);\r\n\r\n    if (this.sysCloseDialog == null) {\r\n      return null;\r\n    }\r\n\r\n    // ワード取得が完了しているか判定\r\n    if (!this.wordingService.hasWord()) {\r\n      // 取得出来ていない場合は通信障害とする\r\n      this.sysCloseDialog.instance.messageLabel = MessageDialogService.NO_MESSAGE_RESOURCE_ERROR;\r\n    } else if (msgKey != null) {\r\n      this.sysCloseDialog.instance.messageLabel = this.wordingService.get(msgKey, ...args);\r\n    }\r\n\r\n    this.sysCloseDialog.instance.iconType = iconType;\r\n\r\n    this.popupService.addPopUp(this.sysCloseDialog);\r\n    document.body.style.cursor = CursorType.AUTO;\r\n\r\n    return this.sysCloseDialog;\r\n  }\r\n\r\n  /**\r\n   * stateからpreLoading状態を取得します\r\n   * @returns true:  初期化処理で進捗表示中\r\n   */\r\n  private getPreLoadingStatus(): boolean | undefined {\r\n    return this.stateUtilService.getCurrentState(getApplicationInitializationPreLoading);\r\n  }\r\n}\r\n","import { ComponentFactoryResolver, ComponentRef, Injectable, Type, ViewContainerRef } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { DialogInterface } from '../models/dialog-interface';\r\nimport * as CoreAction from '../store/core.actions';\r\nimport { CoreState } from '../store/core.state';\r\n\r\n/**\r\n * ポップアップ管理情報\r\n */\r\ninterface PopupInfo<T> {\r\n  popup: ComponentRef<T>;\r\n  isProgress: boolean;\r\n}\r\n\r\n/**\r\n * ポップアップ画面の管理サービス\r\n * ポップアップの表示、ポップアップのインスタンス作成、インスタンスの破棄\r\n * 表示中ポップアップの管理を行います\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PopupService<T extends DialogInterface> {\r\n  /**\r\n   * ViewContainerRefはComponentでしかDI出来ないため、popupService利用時のパラメータとして渡してください\r\n   * ただし、popupServiceはシングルトンで利用するため、メイン画面またはビューア画面のconstructorで一度セットするだけで良いです\r\n   */\r\n  viewContainerRef: ViewContainerRef;\r\n\r\n  /**\r\n   * ComponentFactoryResolverはComponentでしかDI出来ないため、popupService利用時のパラメータとして渡してください\r\n   * ただし、popupServiceはシングルトンで利用するため、メイン画面またはビューア画面のconstructorで一度セットするだけで良いです\r\n   */\r\n  componentFactoryResolver: ComponentFactoryResolver;\r\n\r\n  // ダイアログの初回表示と最終クローズを検知するため、表示中のポップアップ画面をスタック配列形式で管理\r\n  private popupInfos: PopupInfo<T>[] = [];\r\n\r\n  constructor(private store: Store<CoreState>) {}\r\n\r\n  /**\r\n   * ポップアップの表示はしません\r\n   * 渡されたポップアップのインスタンスを作成します\r\n   * @param componentClass インスタンスを作成するポップアップのクラス\r\n   * @param isProgress 進捗ダイアログか否か\r\n   * @returns ポップアップのインスタンス\r\n   */\r\n  createPopUp(componentClass: Type<T>, isProgress = false): ComponentRef<DialogInterface> | null {\r\n    if (!componentClass) {\r\n      return null;\r\n    }\r\n    const componentRef = this.createComponentInstance(componentClass);\r\n    if (!componentRef) {\r\n      return null;\r\n    }\r\n    this.pushPopup(componentRef, isProgress);\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /**\r\n   * ポップアップの表示まで行います\r\n   * 引数のcomponentClassを渡した場合は、引数のインスタンスを作成し、ポップアップの表示をします\r\n   * 引数のcomponentClassを渡さない場合は、最後にcreatePopup or addPopupされたポップアップを表示します\r\n   * @param componentClass  (任意)表示するポップアップのクラス\r\n   * @param isProgress 進捗ダイアログか否か\r\n   * @returns ポップアップのインスタンス\r\n   */\r\n  showPopUp(componentClass?: Type<T>, isProgress = false): ComponentRef<T> | null {\r\n    let componentRef: ComponentRef<T> | null;\r\n\r\n    if (componentClass) {\r\n      componentRef = this.createComponentInstance(componentClass);\r\n      if (!componentRef) {\r\n        return null;\r\n      }\r\n\r\n      this.pushPopup(componentRef, false);\r\n      if (this.exclusionProgressPopupLength() === 1) {\r\n        // ポップアップ初回表示イベントを発行する\r\n        this.store.dispatch(new CoreAction.OpenFirstPopup(isProgress));\r\n      }\r\n    } else {\r\n      if (this.popupInfos.length > 0) {\r\n        if (this.exclusionProgressPopupLength() === 1) {\r\n          // ポップアップ初回表示イベントを発行する\r\n          this.store.dispatch(new CoreAction.OpenFirstPopup(isProgress));\r\n        }\r\n        componentRef = this.popupInfos[this.popupInfos.length - 1].popup;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // ポップアップ表示\r\n    componentRef.instance.showDialog();\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /**\r\n   * 引数で渡されたポップアップのインスタンスを用いて、ポップアップの表示を行います\r\n   * @param componentRef 表示するポップアップのインスタンス\r\n   * @param isProgress 進捗ダイアログか否か\r\n   */\r\n  addPopUp(componentRef: ComponentRef<T>, isProgress = false) {\r\n    this.pushPopup(componentRef, isProgress);\r\n    if (this.exclusionProgressPopupLength() === 1) {\r\n      // ポップアップ初回表示イベントを発行する\r\n      this.store.dispatch(new CoreAction.OpenFirstPopup(isProgress));\r\n    }\r\n    // ポップアップを表示する\r\n    componentRef.instance.showDialog();\r\n  }\r\n\r\n  /**\r\n   * 現在表示中のポップアップのインスタンスを破棄する\r\n   * 画面のクローズは行わないため、クローズは自身で行ってください\r\n   * @param {boolean} destroyFlag クラスを削除するフラグ\r\n   */\r\n  removePopUp(dialog: any, destroyFlag: boolean = true) {\r\n    const popUpInfo = this.popPopup(dialog);\r\n\r\n    if (popUpInfo) {\r\n      if (destroyFlag) {\r\n        popUpInfo.destroy();\r\n      }\r\n\r\n      if (this.popupInfos.length === 0) {\r\n        // 最後のポップアップを閉じた場合、ポップアップ非表示イベントを発行する\r\n        this.store.dispatch(new CoreAction.CloseLastPopup());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ★Stitch V1.3対応\r\n   * destroyする対象のクラスを探す。\r\n   * @param componentRef\r\n   */\r\n  popPopup(dialog: any): ComponentRef<DialogInterface> | null {\r\n    if (dialog == null) {\r\n      return null;\r\n    }\r\n    let ret: ComponentRef<DialogInterface> | null = null;\r\n    this.popupInfos.forEach((info, index) => {\r\n      if (dialog instanceof ComponentRef) {\r\n        if (info.popup.instance === dialog.instance) {\r\n          this.popupInfos.splice(index, 1);\r\n\r\n          ret = info.popup;\r\n        }\r\n      } else {\r\n        if (info.popup.instance === dialog) {\r\n          this.popupInfos.splice(index, 1);\r\n\r\n          ret = info.popup;\r\n        }\r\n      }\r\n    });\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 現在表示中(※)のポップアップ画面インスタンスを返却する\r\n   * ※最後にshowPopup, addPopup, CreatePopupされたインスタンス\r\n   * @returns コンポーネントのインスタンスを返却、表示中コンポーネントが存在しない場合はnull\r\n   */\r\n  getLastPopUp(): ComponentRef<DialogInterface> | null {\r\n    if (this.popupInfos.length === 0) {\r\n      return null;\r\n    } else {\r\n      return this.popupInfos[this.popupInfos.length - 1].popup;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 渡されたコンポーネントクラスから、コンポーネントのインスタンスを作成する\r\n   * @param component 作成するコンポーネント\r\n   * @returns コンポーネントのインスタンス\r\n   */\r\n  createComponentInstance(component: Type<T>): ComponentRef<T> | null {\r\n    if (!this.componentFactoryResolver || !this.viewContainerRef) {\r\n      return null;\r\n    }\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\r\n    const componentRef: ComponentRef<T> = this.viewContainerRef.createComponent(componentFactory);\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /**\r\n   * this.popupsにpushします。\r\n   * すでに存在するポップアップはpushしません。\r\n   * @param componentRef\r\n   */\r\n  private pushPopup(componentRef: ComponentRef<T>, isProgress: boolean) {\r\n    let exist = false;\r\n    for (const info of this.popupInfos) {\r\n      if (info.popup.instance.constructor === componentRef.instance.constructor) {\r\n        exist = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!exist) {\r\n      this.popupInfos.push({ popup: componentRef, isProgress: isProgress });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 進捗ダイアログを除いたポップアップの件数を返します\r\n   */\r\n  private exclusionProgressPopupLength(): number {\r\n    let length = 0;\r\n    this.popupInfos.forEach(info => {\r\n      if (!info.isProgress) {\r\n        length++;\r\n      }\r\n    });\r\n\r\n    return length;\r\n  }\r\n}\r\n","import { ComponentRef, Injectable } from '@angular/core';\r\n\r\nimport { ProgressDialogComponent } from '../../shared/components/progress-dialog/progress-dialog.component';\r\nimport { CursorType } from '../models/cursor-css';\r\n\r\nimport { ICancelProgress } from './i-cancel-progress';\r\nimport { Logger } from './logger.service';\r\nimport { PopupService } from './popup.service';\r\n\r\n/**\r\n * リモートオブジェクトに対応するプログレスダイアログを制御します。\r\n *\r\n * 内部ではただ一つのProgressDialogを保持します。\r\n * 内部にICancelProgressを実装するクラス(RpcCommandなど)の配列を保持してプログレス表示と関連付けています。\r\n *\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressManager {\r\n  /**\r\n   * 半透明にするかどうか\r\n   * trueであれば半透明。falseであれば透明。\r\n   *\r\n   * ★Stitch V1.3対応 blurは表示非表示の制御のみ行う。\r\n   */\r\n  blur = true;\r\n\r\n  /**\r\n   * コマンド\r\n   */\r\n  private commands: ICancelProgress[] = [];\r\n\r\n  /**\r\n   * プログレスダイアログ\r\n   */\r\n  private componentRef: ComponentRef<ProgressDialogComponent>;\r\n\r\n  /**\r\n   * プログレスダイアログのコンポーネント参照\r\n   */\r\n  private _dialog: ProgressDialogComponent;\r\n  get dialog() {\r\n    if (!this._dialog) {\r\n      this.initDialog();\r\n    }\r\n    return this._dialog;\r\n  }\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   *\r\n   * @param {Logger} logger ログサービスです。\r\n   * @param {PopupService} popup ポップアップサービスです。\r\n   *\r\n   */\r\n  constructor(private logger: Logger, private popup: PopupService<ProgressDialogComponent>) {}\r\n\r\n  /**\r\n   * キャンセルボタン\r\n   *\r\n   * ICancelProgressのcancel関数を実行する\r\n   */\r\n  onCancelProgress(): void {\r\n    for (let i: number = this.commands.length - 1; i >= 0; i--) {\r\n      this.commands[i].cancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * コマンドクラスを追加してプログレスダイアログの表示をします。\r\n   * commandにnullが指定されている場合は、カーソルをビジーに変更します。\r\n   * プログレスダイアログが表示中の場合には、再表示をしません。\r\n   *\r\n   * @param command ICancelProgressインターフェイスを実装したクラスのインスタンスです。\r\n   * 操作しているコマンドクラス。通常はRpcCommand\r\n   * プログレスバーからのキャンセルをする場合は必須です。\r\n   * @param cancelable キャンセル可能かどうかを表します。\r\n   * @param allCount 実行合計数\r\n   * @param objectName 実行しているアイテムの名前を指定します。\r\n   * @param objectNameLabel プログレスバーのラベルを指定します。例）項目名：\r\n   * @param progressMessageLabel 複数オブジェクト操作時に表示するメッセージを指定します。例）コピー中です...\r\n   * @param progressCountLabel 複数オブジェクト操作時にプログレスの進捗具合を示すラベルを指定します。例）X件中Y件完了しました。\r\n   * @param addCount 処理完了数\r\n   * @param displayProgress メッセージラベル・進捗ラベル・実行アイテムラベル表示\r\n   *\r\n   */\r\n  addCommand(\r\n    command: ICancelProgress | null,\r\n    cancelable: boolean,\r\n    allCount: number,\r\n    objectName: string | null,\r\n    objectNameLabel: string | null,\r\n    progressMessageLabel: string | null,\r\n    progressCountLabel: string | null,\r\n    addCount: number = 0,\r\n    displayProgress: boolean = false\r\n  ): void {\r\n    if (command != null) {\r\n      this.commands.push(command);\r\n    } else {\r\n      document.body.style.cursor = CursorType.WAIT;\r\n    }\r\n\r\n    // 進捗中表示を使用するときだけ変更する。\r\n    if (this.dialog.owner == null) {\r\n      // ★Stitch V1.3対応 blurは表示非表示の制御のみ行う\r\n      this.dialog.blur = displayProgress;\r\n\r\n      // 親が指定されていない場合\r\n      if (displayProgress) {\r\n        // メッセージラベル・実行アイテムラベル・進捗ラベル表示\r\n        this.dialog.setProgressCount(allCount, addCount);\r\n\r\n        // メッセージラベル表示\r\n        if (progressMessageLabel != null) {\r\n          this.dialog.showProgressMessageLabel = true;\r\n          this.dialog._progressMessageLabel = progressMessageLabel;\r\n        } else {\r\n          this.dialog.showProgressMessageLabel = false;\r\n        }\r\n        // 実行しているアイテムラベル表示\r\n        if (objectNameLabel != null) {\r\n          this.dialog.showObjectNameLabel = true;\r\n          this.dialog.setObjectNameLabel(objectNameLabel, objectName || '');\r\n        } else {\r\n          this.dialog.showObjectNameLabel = false;\r\n        }\r\n        // 進捗ラベル表示\r\n        if (progressCountLabel != null) {\r\n          this.dialog.showProgressCountLabel = true;\r\n          this.dialog._progressCountLabel = progressCountLabel;\r\n        } else {\r\n          this.dialog.showProgressCountLabel = false;\r\n        }\r\n\r\n        this.dialog.updateProgress(objectName || '', addCount);\r\n\r\n        // キャンセルボタン\r\n        this.dialog.cancelable = cancelable;\r\n      }\r\n      // true 不確定型のプログレス表示, false 確定型のプログレス表示\r\n      this.dialog.indeterminate = allCount <= 1;\r\n\r\n      // ダイアログ表示\r\n      this.popup.addPopUp(this.componentRef, true);\r\n    } else {\r\n      this.logger.info('dialog.owner: ' + this._dialog.owner.constructor.name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 膜だけを張ります。\r\n   * 内部では、addCommandを呼び出しプログレスダイアログ非表示の状態でポップアップします。\r\n   *\r\n   * @param command コマンドクラスです。\r\n   *\r\n   */\r\n  transProgress(command: ICancelProgress | null = null): void {\r\n    this.addCommand(command, false, 0, null, null, null, null);\r\n  }\r\n\r\n  /**\r\n   * 透明な膜とビジーカーソルを表示させます。\r\n   * 内部では、addCommandを呼び出しプログレスダイアログ非表示の状態でポップアップします。\r\n   * カーソルをビジーカーソルに変更します。\r\n   *\r\n   * @param command コマンドクラスです。\r\n   *\r\n   */\r\n  setTransProgressBusyCursor(command: ICancelProgress | null = null): void {\r\n    document.body.style.cursor = CursorType.WAIT;\r\n    this.addCommand(command, false, 0, null, null, null, null);\r\n  }\r\n\r\n  /**\r\n   * setTransProgressBusyCursorと対で呼び出します。\r\n   * 表示した透明な膜と、ビジーカーソルを非表示にします。\r\n   *\r\n   * @param command コマンドクラスです。\r\n   *\r\n   */\r\n  removeTransProgressBusyCursor(command: ICancelProgress | null): void {\r\n    document.body.style.cursor = CursorType.AUTO;\r\n    this.removeCommand(command);\r\n  }\r\n\r\n  /**\r\n   * 複数オブジェクト操作時の進捗中表示の場合、プログレスバーを更新します。\r\n   * addCommandでプログレスダイアログを表示後の場合のみ動作します。\r\n   *\r\n   * @param addCount 処理完了数です。\r\n   * @param objectName 次に処理を実行するアイテムの名前を指定します。\r\n   * @param command コマンドクラスです。\r\n   */\r\n  updateProgress(addCount: number, objectName: string, command: ICancelProgress): void {\r\n    if (this.dialog != null) {\r\n      this.dialog.updateProgress(objectName, addCount);\r\n    }\r\n\r\n    if (this.commands.length > 0) {\r\n      // コマンドクラスを差し替えます\r\n      this.commands[this.commands.length - 1] = command;\r\n    } else {\r\n      this.commands.push(command);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 登録されたコマンドクラスを消去してプログレスダイアログを非表示にします。\r\n   * commandにnullが指定された場合には、ビジーカーソルを解除します。\r\n   * コマンドクラスが残っている場合には、プログレスダイアログを非表示にしません。\r\n   *\r\n   * @param command 操作しているコマンドクラス。通常はRpcCommand\r\n   * プログレスバーからのキャンセルをする場合は必須です。\r\n   */\r\n  removeCommand(command: ICancelProgress | null): void {\r\n    if (command) {\r\n      for (let i: number = this.commands.length - 1; i >= 0; i--) {\r\n        if (this.commands[i] === command) {\r\n          this.commands.splice(i, 1);\r\n        }\r\n      }\r\n    } else {\r\n      document.body.style.cursor = CursorType.AUTO;\r\n    }\r\n\r\n    if (this.dialog != null && this.commands.length < 1) {\r\n      if (this.dialog.cancelable) {\r\n        this.dialog.cancelable = false;\r\n      }\r\n      // ダイアログ非表示\r\n      this.dialog.closeDialog();\r\n      this.popup.removePopUp(this._dialog, false);\r\n      // this.popup.removePopUp(this._dialog);\r\n      document.body.style.cursor = CursorType.AUTO;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 進捗中表示に登録しているコマンドの削除を行います。\r\n   * removeCommandでコマンドクラスを消去できない場合に使用します。\r\n   *\r\n   * @param command 削除するコマンド\r\n   *\r\n   */\r\n  clearCommand(command: ICancelProgress): void {\r\n    for (let i: number = this.commands.length - 1; i >= 0; i--) {\r\n      if (this.commands[i] === command) {\r\n        this.commands.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * プログレスダイアログのインスタンス作成する\r\n   */\r\n  private initDialog(): void {\r\n    const componentRef = this.popup.createComponentInstance(ProgressDialogComponent);\r\n    if (componentRef == null) {\r\n      this.logger.info('cannot create component instance');\r\n    } else {\r\n      this.componentRef = componentRef;\r\n      this._dialog = this.componentRef.instance as ProgressDialogComponent;\r\n\r\n      // キャンセル押下イベント時処理設定\r\n      this._dialog.cancelFunction = this.onCancelProgress.bind(this);\r\n    }\r\n  }\r\n}\r\n","import * as _cloneDeep from 'lodash/cloneDeep';\r\nimport 'url-search-params-polyfill';\r\n\r\nimport { Location } from '@angular/common';\r\nimport { Route } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, Routes } from '@angular/router';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { devMainRoutes, devRoutes, devViewerRoutes, prodMainRoutes, prodRoutes, prodViewerRoutes } from '../../app-routing.module';\r\n\r\n/**\r\n * routing設定を管理するサービスです\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoutingManageService {\r\n  constructor(private location: Location, private router: Router) {}\r\n\r\n  /**\r\n   * 現在のurlを元にroutingコンフィグをセットします\r\n   */\r\n  setConfigByUrl() {\r\n    const url = this.location.path();\r\n    const urlSplit: string[] = url.split('?');\r\n    // /rsn/xxx?aaa=111&bbb=222 から  /xxx　部分だけ抜き出し\r\n    const urlParam: string = urlSplit[0];\r\n    // /rsn/xxx?aaa=111&bbb=222 から  getパラメータ部分だけ抜き出し\r\n    const queryParams: URLSearchParams = new URLSearchParams(urlSplit.length === 1 ? '' : urlSplit[1]);\r\n    const appId: string | null = queryParams.get('appId');\r\n\r\n    if (!environment.production && urlParam === '/login') {\r\n      // 開発モード限定でloginの場合はログイン処理に任せて何もしない\r\n    } else if (urlParam === '/DocViewer' || appId === 'Viewer') {\r\n      // Viewer用のroutingConfigを設定する\r\n      this.setConfigForViewer();\r\n    } else {\r\n      // main用のroutingConfigを設定する\r\n      this.setConfigForMain();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * main画面用のroutingコンフィグをセットします\r\n   *\r\n   * ダミー用のコンフィグはロードしません\r\n   */\r\n  setConfigForMain() {\r\n    let config: Route[];\r\n\r\n    // main用のroutingConfigを追加する\r\n    if (environment.production) {\r\n      config = _cloneDeep(prodRoutes);\r\n      prodMainRoutes.forEach(route => config.push(route));\r\n    } else {\r\n      config = _cloneDeep(devRoutes);\r\n      devMainRoutes.forEach(route => config.push(route));\r\n    }\r\n\r\n    this.deleteDummyRouting(config);\r\n\r\n    this.router.resetConfig(config);\r\n  }\r\n\r\n  /**\r\n   * viewer画面用のroutingコンフィグをセットします\r\n   *\r\n   * ダミー用のコンフィグはロードしません\r\n   */\r\n  setConfigForViewer() {\r\n    let config: Route[];\r\n\r\n    // Viewer用のroutingConfigを追加する\r\n    if (environment.production) {\r\n      config = _cloneDeep(prodRoutes);\r\n      prodViewerRoutes.forEach(route => config.push(route));\r\n    } else {\r\n      config = _cloneDeep(devRoutes);\r\n      devViewerRoutes.forEach(route => config.push(route));\r\n    }\r\n\r\n    this.deleteDummyRouting(config);\r\n\r\n    this.router.resetConfig(config);\r\n  }\r\n\r\n  private deleteDummyRouting(configs: Routes) {\r\n    this.deleteRouting(configs, 'dummyMain');\r\n    this.deleteRouting(configs, 'dummyViewer');\r\n  }\r\n\r\n  private deleteRouting(configs: Routes, key: string) {\r\n    const index = configs.findIndex(({ path }) => path === key);\r\n    configs.splice(index, 1);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { select, Selector, Store } from '@ngrx/store';\r\nimport * as _ from 'lodash';\r\nimport { of } from 'rxjs';\r\nimport { map, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { ApplicationError } from '../application-error';\r\n\r\nimport { Logger } from './logger.service';\r\n\r\n/**\r\n * Stateに関するユーティリティサービス\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateUtilService {\r\n  private static className = 'StateUtilService';\r\n\r\n  constructor(private store: Store<any>, private logger: Logger) {}\r\n\r\n  /**\r\n   * 現在のStateのスナップショットを取得する\r\n   * @param selector セレクタ\r\n   * @returns セレクタによって取得したState断片のスナップショット\r\n   */\r\n  getCurrentState<STATE, RESULT>(selector: Selector<STATE, RESULT>): RESULT {\r\n    // stateに値が代入されたかどうかを判定するためのオブジェクト\r\n    const unchangedMarker = {};\r\n\r\n    // 戻り値になるstate。初期値としてunchangedMarkerへの参照を入れておく。\r\n    // Stateをselectした結果がnullの場合を考えて、nullでの取得チェックではなく、参照でチェックすることにした。\r\n    let state: RESULT | typeof unchangedMarker = unchangedMarker;\r\n    // 同期的にStateを取得する\r\n    // of関数はデフォルトで同期的取得であることが公式ドキュメントに記述されているのでofを使う\r\n    // 引数のnullはダミーであり結果には入ってこない\r\n    of(null)\r\n      .pipe(\r\n        withLatestFrom(this.store.pipe(select(selector))),\r\n        map(([__, s]) => s)\r\n      )\r\n      .subscribe(s => (state = s));\r\n\r\n    // 取得値チェック\r\n    if (state === unchangedMarker) {\r\n      // ここに来るのは想定外の状態\r\n      this.logger.error(`[${StateUtilService.className}] Failed to get current state.`);\r\n      throw new ApplicationError(`[${StateUtilService.className}] Failed to get current state.`);\r\n    }\r\n    // Stateを書き換えてしまう事故を防ぐためにコピーする\r\n    return _.cloneDeep(state) as RESULT;\r\n  }\r\n}\r\n","import { environment } from '../../../environments/environment';\r\n\r\n/**\r\n * URLに関する設定ファイル\r\n */\r\nexport const urlConfig = {\r\n  host: environment.apiOrigin || location.origin,\r\n  baseHref: '/rsn',\r\n  path: '/rsn/rpc',\r\n\r\n  // workflow系URLは仮  workflowの新APIは次バージョンで実装します\r\n  applyDocument: '/workflow/{id}/apply',\r\n  approveDocument: ' /workflow/{id}/approve',\r\n  createWorkflowTemplate: '/workflow/template',\r\n  deleteWorkflowTemplate: '/workflow/template',\r\n  disallowDocument: '/workflow/{id}/disallow',\r\n  examineDocument: '/workflow/{id}/examine',\r\n  // ★Stitch V1.3対応\r\n  // ワークフロー機能は提供しない\r\n  // getWorkflow: '/workflow',\r\n  getWorkflowTemplate: '/workflow/template',\r\n  getWorkflowTemplateList: '/workflow/template/list',\r\n  sendWorkflowMail: '/workflow/{id}/email',\r\n  updateWorkflowTemplate: '/workflow/template',\r\n  withdrawDocument: '/workflow/{id}/withdraw',\r\n\r\n  // 新API\r\n  acquireOwnership: '/v2/acl/ownership/acquire',\r\n  addWord: '/v2/wordBook/update',\r\n  authenticate: '/v2/service/auth',\r\n  bindDocuments: '/v2/document/bind',\r\n  cancelExportCSVFile: '/v2/service/documents/csvFile/export/cancel',\r\n  cancelExportDocuments: '/v2/service/documents/export/cancel',\r\n  cancelExportSection: '/v2/service/section/export/cancel',\r\n  cancelSearch: '/v2/search/cancel',\r\n  checkExistLoginUser: '/v2/user/existence/get',\r\n  clearTag: '/v2/section/updateMode/tag/clear',\r\n  clearTrashAsync: '/v2/trash/empty/async',\r\n  connectObject: '/v2/object/connect',\r\n  connectServer: '/v2/service/connect',\r\n  copy: '/v2/object/copy',\r\n  copyFolderAsync: '/v2/folder/async/copy',\r\n  createDocument: '/v2/document/create',\r\n  createDocumentSubData: '/v2/document/subData/update',\r\n  createFavorite: '/v2/favorite/create',\r\n  createFavoriteCategory: '/v2/favorite/category/create',\r\n  createFolder: '/v2/folder/create',\r\n  createShortcut: '/v2/shortcut/create',\r\n  declareAccessDocument: '/v2/document/access',\r\n  deleteFavoriteObject: '/v2/favorite/delete',\r\n  deleteObject: '/v2/object/delete',\r\n  deleteProfileDisplayList: '/v2/user/profile/displayList/delete',\r\n  deleteProfileSearchCondition: '/v2/search/profileCondition/delete',\r\n  deleteSection: '/v2/section/delete',\r\n  deleteTag: '/v2/section/tag/delete',\r\n  deleteVersion: '/v2/document/version/delete',\r\n  disconnectObject: '/v2/object/disconnect',\r\n  divideDocument: '/v2/document/divide',\r\n  documentUpdateEnd: '/v2/document/checkIn',\r\n  documentUpdateStart: '/v2/document/checkOut',\r\n  editDocumentDetail: '/v2/document/update',\r\n  editTag: '/v2/section/updateMode/tag/edit',\r\n  endRetrieve: '/v2/folder/resultSetId/release',\r\n  eraseFolderAsync: '/v2/trash/folder/delete/async',\r\n  eraseObject: '/v2/trash/object/delete',\r\n  exportCSV: '/v2/service/documents/csvFile/export',\r\n  exportDocuments: '/v2/service/documents/export',\r\n  exportSection: '/v2/service/section/export',\r\n  getAcl: '/v2/acl/get',\r\n  getChildren: '/v2/folder/object/get',\r\n  getClientInfo: '/v2/service/clientInfo/get',\r\n  getClientLogLevel: '/v2/service/clientLogLevel/get',\r\n  getConfig: '/v2/service/config/get',\r\n  getDefaultFavorite: '/v2/favorite/default/get',\r\n  getDocumentDetail: '/v2/document/get',\r\n  getDocumentTypeDetail: '/v2/documentType/get',\r\n  getDocumentTypeList: '/v2/documentType/list/get',\r\n  getDocumentUserNumber: '/v2/document/userNumber/issue',\r\n  getDomainList: '/v2/user/list/domain/get',\r\n  getFavoriteCategoryDetail: '/v2/favorite/category/get',\r\n  getFavoriteCategoryList: '/v2/favorite/category/list/get',\r\n  getFavoriteDetail: '/v2/favorite/detail/get',\r\n  getFavoriteList: '/v2/favorite/list/get',\r\n  getFavoriteTarget: '/v2/favorite/target/get',\r\n  getFolderDetail: '/v2/folder/detail/get',\r\n  getFolderList: '/v2/folder/subFolderList/get',\r\n  getFolderSize: '/v2/folder/size/get',\r\n  getLoginInfo: '/v2/user/info/get',\r\n  getObjectMobileUrl: '/v2/object/mobileUrl/get',\r\n  getObjectUrl: '/v2/object/url/get',\r\n  getProfileDisplayList: '/v2/user/profile/displayList/get',\r\n  getProfileQuickViewer: '/v2/user/profile/quickViewer/get',\r\n  getProfileSearchCondition: '/v2/search/profileCondition/get',\r\n  getProfileSetting: '/v2/user/profile/setting/get',\r\n  getProfileToolBar: '/v2/user/profile/toolbar/get',\r\n  getResultClearTrashAsync: '/v2/trash/result/empty/async/get',\r\n  getResultCopyFolderAsync: '/v2/folder/async/resultCopy/get',\r\n  getResultEraseFolderAsync: '/v2/trash/result/folder/delete/async/get',\r\n  getResultSetContainerAclAsync: '/v2/acl/update/async/result',\r\n  getSectionDetail: '/v2/section/detail/get',\r\n  getSectionDetailForPrint: '/v2/section/detailForPrint/get',\r\n  getSectionList: '/v2/section/list/get',\r\n  getSectionThumbnail: '/v2/section/thumbnail/get',\r\n  getServerInfo: '/v2/service/serverInfo/get',\r\n  getServerTime: '/v2/service/serverTime/get',\r\n  getSortedFolderList: '/v2/folder/list/sorted/get',\r\n  getTargetStatus: '/v2/object/status/get',\r\n  getThresholdForSetACL: '/v2/acl/threshold/get',\r\n  getTopFolder: '/v2/folder/top/get',\r\n  getUserMailAddress: '/v2/user/mailAddress/get',\r\n  getVersionDetail: '/v2/document/version/get',\r\n  getVersionList: '/v2/document/version/list/get',\r\n  getWordBook: '/v2/wordBook/get',\r\n  getWording: '/v2/service/wording/get',\r\n  getWorkingSectionDetail: '/v2/section/detail/working/get',\r\n  getWorkingSectionThumbnail: '/v2/section/thumbnail/working/get',\r\n  getWorkflowInfo: '/v2/workFlow/get',\r\n  insertSection: '/v2/section/insert',\r\n  isConnectServer: '/v2/service/connectivity/get',\r\n  keepAlive: '/v2/service/keepAlive',\r\n  makeTag: '/v2/section/tag/create',\r\n  move: '/v2/object/move',\r\n  moveFavorite: '/v2/favorite/move',\r\n  moveFavoriteCategory: '/v2/favorite/category/move',\r\n  moveSection: '/v2/section/move',\r\n  outClientLog: '/v2/service/clientLog/output',\r\n  outOperationLog: '/v2/service/operationLog/output',\r\n  reSortSearchResult: '/v2/search/sort',\r\n  renameSection: '/v2/section/name/update',\r\n  replaceAllSection: '/v2/section/list/replace',\r\n  replaceSection: '/v2/section/replace',\r\n  requestSearch: '/v2/search/preprocess',\r\n  retrieveAllChildren: '/v2/folder/retrieve',\r\n  retrieveAllChildrenExceptFolderList: '/v2/folder/subObjectList/exceptFolder/get',\r\n  retrieveEntryList: '/v2/user/list/entry/get',\r\n  retrieveSearchResult: '/v2/search/getResult',\r\n  saveProfileDisplayList: '/v2/user/profile/displayList/update',\r\n  saveProfileQuickViewer: '/v2/user/profile/quickViewer/update',\r\n  saveProfileSearchCondition: '/v2/search/profileCondition/save',\r\n  saveProfileSetting: '/v2/user/profile/setting/update',\r\n  saveProfileToolBar: '/v2/user/profile/toolbar/update',\r\n  sendInformMail: '/v2/service/informMail/send',\r\n  setAcl: '/v2/acl/update',\r\n  setContainerAclAsync: '/v2/acl/update/async',\r\n  setSubData: '/v2/section/subData/update',\r\n  startExportDocuments: '/v2/service/documents/export/start',\r\n  startExportSection: '/v2/service/section/export/start',\r\n  startSearch: '/v2/search/start',\r\n  unbindDocument: '/v2/document/unbind',\r\n  undelete: '/v2/trash/object/move',\r\n  updateDocumentAfterApprove: '/v2/document/approved/update',\r\n  updateFavorite: '/v2/favorite/update',\r\n  updateFavoriteCategoryDetail: '/v2/favorite/category/update',\r\n  updateLoginUserAddress: '/v2/user/mailAddress/update',\r\n  updateLoginUserPassword: '/v2/user/password/update',\r\n  updateTag: '/v2/section/tag/update',\r\n  updateVersionDetail: '/v2/document/version/comment/update',\r\n\r\n  // 開発用API\r\n  updateSessionAttribute: '/v2/develop/session/attribute/update'\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ISupportCommandMap } from '../commands/i-support-command-map';\r\n\r\n/**\r\n * ViewManagerクラス。\r\n * 登録したView（ISupportCommandMap）を取得できる。\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ViewManagerService {\r\n  private map = new Map<string, ISupportCommandMap>();\r\n\r\n  /**\r\n   * Viewを取得する\r\n   * @param viewType Viewのタイプ\r\n   */\r\n  get(viewType: string) {\r\n    return this.map.get(viewType);\r\n  }\r\n\r\n  /**\r\n   * Viewを登録する\r\n   * @param viewType Viewのタイプ\r\n   * @param view 登録するView\r\n   */\r\n  set(viewType: string, view: ISupportCommandMap) {\r\n    this.map.set(viewType, view);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\n/**\r\n * 用語を扱うサービスです\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WordingService {\r\n  private words: Map<string, string> = new Map<string, string>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * 用語リストをセットします\r\n   * @param words key:用語ID, value:用語のMap\r\n   */\r\n  set(words: Map<string, string>) {\r\n    this.words = _.cloneDeep(words);\r\n  }\r\n\r\n  /**\r\n   * 用語IDに対する用語を返します.\r\n   * 可変長引数には、用語が{0}, {1}, ... を含んでいた場合に埋め込む数値または文字列を与えることができます。\r\n   * @param id 用語ID\r\n   * @param args 可変長引数。用語内の{0}, {1}, ... に置き換える数や文字列。はじめの引数を{0}に、次を{1}に、、、と順に置き換えます。引数の数と{n}の数が合わなければundefinedという文字列に置き換えられることがあります。\r\n   * @returns 用語。idに対応する用語がなければ用語IDを返します。\r\n   * @example\r\n   *  // id: 'info.messagearea.copymulti', value: '{0}件の項目を{1}に複製しました'のキーがある場合...\r\n   *  constructor(private wording WordingService) {}\r\n   *  this.wording.get('info.messagearea.copymulti', 20, '新規フォルダ'); // '20件の項目を新規フォルダに複製しました'\r\n   */\r\n  get(id: string, ...args: (string | number)[]): string {\r\n    const text = this.words.get(id);\r\n    if (text == null) {\r\n      return id;\r\n    } else {\r\n      return this.format(text, args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * WordingServiceが用語リストを持っているか否かを返します.\r\n   *\r\n   * @return 用語リストを持っているか否か\r\n   */\r\n  hasWord(): boolean {\r\n    return this.words.size > 0;\r\n  }\r\n\r\n  /**\r\n   * {0} {1} ...  があれば argsの該当インデクス値に置換\r\n   * @param text\r\n   * @param args\r\n   */\r\n  formatEx(text: string | null, ...args): string {\r\n    if (!text) {\r\n      return '';\r\n    }\r\n    return this.format(text, args);\r\n  }\r\n\r\n  /**\r\n   * {0} {1} ...  があれば argsの該当インデクス値に置換\r\n   * @param { string } text\r\n   * @param { (string | number)[] } args 配列。要素はstringかnumber (getの可変長引数をそのまま渡してください)\r\n   */\r\n  private format(text: string, args: (string | number)[]): string {\r\n    // 引数がない場合はそのまま帰す\r\n    if (!args || args.length <= 0) {\r\n      return text;\r\n    }\r\n    return text.replace(/\\{(\\d+)\\}/g, function(match, submatch) {\r\n      // match: {0}, {1}, {2}, ...\r\n      // submatch: 0, 1, 2, ...\r\n      const replacement = args[submatch];\r\n      return replacement !== undefined ? replacement.toString() : replacement;\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Web Storage 関連の定数\r\n */\r\nexport class StorageKey {\r\n  static readonly token = 'token';\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { ISupportCommandMap } from '../commands/i-support-command-map';\r\n\r\n/**\r\n * payloadを持つAction\r\n */\r\nexport interface ActionWithPayload extends Action {\r\n  payload: any;\r\n}\r\n\r\n/**\r\n * parentObjectを持つAction\r\n */\r\nexport interface ActionWithParentObject extends Action {\r\n  parentObject: ISupportCommandMap;\r\n}\r\n\r\n/**\r\n * Command実行ができるAction\r\n */\r\nexport interface CommandAction extends ActionWithPayload, ActionWithParentObject {}\r\n\r\n/**\r\n * Command実行結果のSuccess/Error処理を表すAction\r\n */\r\ninterface SuccessOrErrorAction extends ActionWithPayload {\r\n  originalType: string;\r\n}\r\n\r\n/**\r\n * ActionがActionWithPayloadであることを確認するType Guard\r\n * @param action\r\n */\r\nexport function actionHasPayload(action: Action): action is ActionWithPayload {\r\n  return 'payload' in action;\r\n}\r\n\r\n/**\r\n * ActionがActionWithParentObjectであることを確認するType Guard\r\n * @param action\r\n */\r\nexport function actionHasParentObject(action: Action): action is ActionWithParentObject {\r\n  return (<ActionWithParentObject>action).parentObject != null;\r\n}\r\n\r\n/**\r\n * ActionがSuccessOrErrorActionであることを確認するType Guard\r\n * @param action\r\n */\r\nexport function actionIsSuccessOrError(action: Action): action is SuccessOrErrorAction {\r\n  return actionHasPayload(action) && typeof (<SuccessOrErrorAction>action).originalType === 'string';\r\n}\r\n","import { Action } from '@ngrx/store';\r\n\r\nimport { ClientInfo } from '../models/client-info';\r\nimport { CloseEvent } from '../models/close-event';\r\nimport { LoginInfo } from '../models/login-info';\r\nimport { ServerInfo } from '../models/server-info';\r\nimport { DomainVO } from '../vo/domain-vo';\r\n\r\nimport { ActionWithPayload } from './action-interfaces';\r\nimport { AutoEditType } from './payload/auto-edit-type';\r\nimport { UploadEndType } from './payload/upload-end-type';\r\n\r\n/**\r\n * coreのActionのtype定義\r\n */\r\nexport enum CoreActionTypes {\r\n  ApplicationInitialize = '[Core] Application Initialize',\r\n  ApplicationStop = '[Core] Application Stop',\r\n  AppletMessageClose = '[Core] Applet Message Close',\r\n  EditComplete = '[Core] Edit Complete',\r\n  UploadComplete = '[Core] Upload Complete',\r\n  ResumeEditConfirm = '[Core] Resume Edit Confirm',\r\n  UnknownFileExt = '[Core] Unknown File Ext',\r\n  ImageEdit = '[Core] Image Edit',\r\n  ApplicationInitializeComplete = '[Core] Application Initialize Complete',\r\n  ShowInitializationPreLoader = '[Core] Show Initialization PreLoader',\r\n  HideInitializationPreLoader = '[Core] Hide Initialization PreLoader',\r\n  SetLoginInfo = '[Core] Set Login Info',\r\n  SetServerInfo = '[Core] Set Server Info',\r\n  SetClientInfo = '[Core] Set Client Info',\r\n  SetDomainList = '[Core] Set Domain List',\r\n  MergeState = '[Core] Merge State',\r\n  OpenFirstPopup = '[Core] Open First Popup',\r\n  CloseLastPopup = '[Core] Close Last Popup ',\r\n  RefleshThumbnailItem = '[Core] RefleshThumbnailItem '\r\n}\r\n\r\n/**\r\n * アプリケーションの初期化アクション\r\n */\r\nexport class ApplicationInitialize implements Action {\r\n  readonly type = CoreActionTypes.ApplicationInitialize;\r\n  constructor() {}\r\n}\r\n\r\n/**\r\n * アプリケーションの停止アクション\r\n */\r\nexport class ApplicationStop implements Action {\r\n  readonly type = CoreActionTypes.ApplicationStop;\r\n  constructor(public payload?: undefined) {}\r\n}\r\n\r\n/**\r\n * アラートが閉じられた時のAction\r\n */\r\nexport class AppletMessageClose implements Action {\r\n  readonly type = CoreActionTypes.AppletMessageClose;\r\n  constructor(public payload: CloseEvent) {}\r\n}\r\n\r\n/**\r\n * アップロード完了Action\r\n */\r\nexport class UploadEnd implements Action {\r\n  readonly type = CoreActionTypes.ApplicationInitializeComplete;\r\n  constructor(public payload: UploadEndType) {}\r\n}\r\n\r\n/**\r\n * 直接編集-アップロード完了Action\r\n */\r\nexport class UploadComplete implements Action {\r\n  readonly type = CoreActionTypes.UploadComplete;\r\n  constructor(public payload: AutoEditType) {}\r\n}\r\n\r\n/**\r\n * 直接編集-編集完了Action\r\n */\r\nexport class EditComplete implements Action {\r\n  readonly type = CoreActionTypes.EditComplete;\r\n  constructor(public payload: AutoEditType) {}\r\n}\r\n\r\n/**\r\n * 直接編集-ファイルサイズオーバーAction\r\n */\r\nexport class ResumeEditConfirm implements Action {\r\n  readonly type = CoreActionTypes.ResumeEditConfirm;\r\n  constructor(public payload: AutoEditType) {}\r\n}\r\n\r\n/**\r\n * 直接編集-関連付けのないファイルを開いた場合のAction\r\n */\r\nexport class UnknownFileExt implements Action {\r\n  readonly type = CoreActionTypes.UnknownFileExt;\r\n  constructor(public payload: AutoEditType) {}\r\n}\r\n\r\n/**\r\n * 直接編集-イメージを直接編集した場合のAction\r\n */\r\nexport class ImageEdit implements Action {\r\n  readonly type = CoreActionTypes.ImageEdit;\r\n  constructor(public payload: AutoEditType) {}\r\n}\r\n\r\n/**\r\n * アプリケーション初期化完了Action\r\n */\r\nexport class ApplicationInitializeComplete implements Action {\r\n  readonly type = CoreActionTypes.ApplicationInitializeComplete;\r\n  constructor(public payload?: undefined) {}\r\n}\r\n\r\n/**\r\n * 初期化処理中の進捗ダイアログ表示Action\r\n */\r\nexport class ShowInitializationPreLoader implements Action {\r\n  readonly type = CoreActionTypes.ShowInitializationPreLoader;\r\n  constructor(public payload?: undefined) {}\r\n}\r\n\r\n/**\r\n * 初期化処理中の進捗ダイアログ非表示Action\r\n */\r\nexport class HideInitializationPreLoader implements Action {\r\n  readonly type = CoreActionTypes.HideInitializationPreLoader;\r\n  constructor(public payload?: undefined) {}\r\n}\r\n\r\n/**\r\n * ログイン情報設定Action\r\n */\r\nexport class SetLoginInfo implements Action {\r\n  readonly type = CoreActionTypes.SetLoginInfo;\r\n  constructor(public payload: LoginInfo) {}\r\n}\r\n\r\n/**\r\n * サーバ情報設定Action\r\n */\r\nexport class SetServerInfo implements Action {\r\n  readonly type = CoreActionTypes.SetServerInfo;\r\n  constructor(public payload: ServerInfo) {}\r\n}\r\n\r\n/**\r\n * クライアント情報設定Action\r\n */\r\nexport class SetClientInfo implements Action {\r\n  readonly type = CoreActionTypes.SetClientInfo;\r\n  constructor(public payload: ClientInfo) {}\r\n}\r\n\r\n/**\r\n * ドメインリスト設定Action\r\n */\r\nexport class SetDomainList implements Action {\r\n  readonly type = CoreActionTypes.SetDomainList;\r\n  constructor(public payload: DomainVO[]) {}\r\n}\r\n\r\n/**\r\n * Popup画面の初回表示イベントを発行するアクション\r\n */\r\nexport class OpenFirstPopup implements Action {\r\n  readonly type = CoreActionTypes.OpenFirstPopup;\r\n  constructor(public payload: boolean) {}\r\n}\r\n\r\n/**\r\n * Popup画面の最終クローズイベントを発行するアクション\r\n */\r\nexport class CloseLastPopup implements Action {\r\n  readonly type = CoreActionTypes.CloseLastPopup;\r\n  constructor(public payload?: undefined) {}\r\n}\r\n\r\n/**\r\n * サムネイルのアイテムを再描画するアクション\r\n */\r\nexport class RefleshThumbnailItem implements Action {\r\n  readonly type = CoreActionTypes.RefleshThumbnailItem;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\n/**\r\n * payloadをStateにマージするAction\r\n */\r\nexport class MergeState implements ActionWithPayload {\r\n  readonly type = CoreActionTypes.MergeState;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport type CoreActionsUnion =\r\n  | ApplicationInitialize\r\n  | ApplicationStop\r\n  | ApplicationInitializeComplete\r\n  | ShowInitializationPreLoader\r\n  | HideInitializationPreLoader\r\n  | UploadEnd\r\n  | UploadComplete\r\n  | EditComplete\r\n  | ResumeEditConfirm\r\n  | UnknownFileExt\r\n  | ImageEdit\r\n  | AppletMessageClose\r\n  | SetLoginInfo\r\n  | SetServerInfo\r\n  | SetClientInfo\r\n  | SetDomainList\r\n  | OpenFirstPopup\r\n  | CloseLastPopup\r\n  | RefleshThumbnailItem\r\n  | MergeState;\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\n\r\nimport { ControllerService } from '../services/controller.service';\r\n\r\n/**\r\n * Coreモジュールに定義されたActionの副作用を定義するEffectsクラス\r\n */\r\n@Injectable()\r\nexport class CoreEffects {\r\n  constructor(private actions$: Actions, private controller: ControllerService) {}\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nimport { CoreState } from './core.state';\r\nimport { StoreConst } from './store-const';\r\n\r\n/**\r\n * Coreのstateを返すselector\r\n */\r\nexport const selectCoreState = createFeatureSelector<CoreState>(StoreConst.FEATURE_NAME);\r\n\r\n/**\r\n * クライアント情報を返すselector\r\n */\r\nexport const getClientInfo = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.clientInfo\r\n);\r\n\r\n/**\r\n * ドメイン一覧を返すselector\r\n */\r\nexport const getDomainList = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.domainList\r\n);\r\n\r\n/**\r\n * アプリケーション停止状態を返すselector\r\n */\r\nexport const getApplicationStop = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.applicationStop\r\n);\r\n\r\n/**\r\n * アプリケーション初期化処理の開始状態を返すselector\r\n */\r\nexport const getApplicationInitializeStart = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.initialStatus && state.core.initialStatus.startApplication\r\n);\r\n\r\n/**\r\n * アプリケーション初期化処理の完了状態を返すComplete\r\n */\r\nexport const getApplicationInitializeComplete = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.initialStatus && state.core.initialStatus.appInitializeComplete\r\n);\r\n\r\n/**\r\n * 初期化処理の進捗表示状態を返すselector\r\n */\r\nexport const getApplicationInitializationPreLoading = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.initialStatus && state.core.initialStatus.preLoading\r\n);\r\n\r\n/**\r\n *  LoginInfoを返すselector\r\n */\r\nexport const getLoginInfo = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.loginInfo\r\n);\r\n\r\n/**\r\n *  ServerInfoを返すselector\r\n */\r\nexport const getServerInfo = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.serverInfo\r\n);\r\n\r\n/**\r\n * 文書タイプ一覧リスト<DocumentTypeVO[]>を返すselector\r\n */\r\nexport const getDocumentTypeList = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => state.core.documentTypeList\r\n);\r\n\r\n/**\r\n * Popup画面の初回表示/最終クローズのイベント状態を返すselector\r\n *\r\n * true:初回表示,  false:最終クローズ,  undefined:初期値(イベント未発生状態)\r\n */\r\nexport const getPopupIsOpend = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => {\r\n    return state.core.popup;\r\n  }\r\n);\r\n\r\n/**\r\n * サムネイルアイテムの再描画対象を返すselector\r\n */\r\nexport const getRefleshThumnailItem = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => {\r\n    return state.core.refleshThumbnailItem;\r\n  }\r\n);\r\n\r\n/**\r\n * ActiveXからのコールバックで表示されたメッセージダイアログが閉じたことの通知\r\n */\r\nexport const getAppletMessageClose = createSelector(\r\n  selectCoreState,\r\n  (state: CoreState) => {\r\n    return state.core.appletMessageClose;\r\n  }\r\n);\r\n","/**\r\n * Store関連の定数定義\r\n */\r\nexport class StoreConst {\r\n  // Storeを登録する際の機能名\r\n  static readonly FEATURE_NAME = 'sma-navi';\r\n}\r\n","/**\r\n * JavaScriptコール用の定義\r\n */\r\nexport class Sys0JavaScriptMethodType {\r\n  /** JavaScript利用可能チェック */\r\n  static readonly EXTERNAL_IS_ENABLE_JAVASCRIPT: string = 'isEnableJavascript';\r\n\r\n  /** Upload開始 */\r\n  static readonly EXTERNAL_UPLOAD_START: string = 'uploadStart';\r\n\r\n  /** Upload終了 */\r\n  static readonly EXTERNAL_UPLOAD_END: string = 'uploadEnd';\r\n\r\n  /** 1件upload完了 */\r\n  static readonly EXTERNAL_DATA_COMPLETE: string = 'dataComplete';\r\n\r\n  /** メッセージ表示 */\r\n  static readonly EXTERNAL_VIEW_MESSEGE: string = 'viewMassege';\r\n\r\n  /** Windowをひらく */\r\n  static readonly EXTERNAL_SHOW_APP: string = 'openApp';\r\n\r\n  /** Windowを閉じる */\r\n  static readonly EXTERNAL_CLOSE_WIN: string = 'closeWin';\r\n\r\n  /** セッションタイムアウト */\r\n  static readonly EXTERNAL_SYSTEM_CLOSE: string = 'systemClose';\r\n\r\n  /** ブラウザが閉じる前に呼び出される。 */\r\n  static readonly EXTERNAL_BEFORE_UNLOAD: string = 'beforeUnload';\r\n\r\n  /** Windowタイトルを設定する。 */\r\n  static readonly EXTERNAL_SET_TITLE: string = 'setTitle';\r\n\r\n  /** アプレットのリサイズを行ないます。 */\r\n  static readonly EXTERNAL_RESIZE: string = 'resize';\r\n\r\n  /** ドロップエリアのサイズ変更時 */\r\n  static readonly EXTERNAL_RESIZE_DROP_AREA: string = 'resizeDropArea';\r\n\r\n  /** ドロップ可能エリアかどうか */\r\n  static readonly EXTERNAL_CAN_DROP: string = 'canDrop';\r\n\r\n  /** 編集時のエラーが発生 */\r\n  static readonly EXTERNAL_ON_ERROR: string = 'onError';\r\n\r\n  /** 編集が終了 */\r\n  static readonly EXTERNAL_ON_COMPLETE: string = 'onCompleted';\r\n\r\n  /** 編集をキャンセルした。 */\r\n  static readonly EXTERNAL_CANCEL_END: string = 'cancelEdit';\r\n\r\n  /** 編集終了通知 */\r\n  static readonly EXTERNAL_END_EDIT: string = 'endEdit';\r\n\r\n  /** ファイルサイズが大きすぎる場合。 */\r\n  static readonly EXTERNAL_ON_RESUME_EDIT: string = 'onResumeEdit';\r\n\r\n  /** アプリケーションの再起動を行う。 */\r\n  static readonly EXTERNAL_RESUME_EDIT: string = 'resumeEdit';\r\n\r\n  /** ダウンロードが完了した。 */\r\n  static readonly EXTERNAL_EDIT_DOWNLOAD_END: string = 'rsnEditDownLoadEnd';\r\n\r\n  /** 関連付けされていないファイルだった場合。 */\r\n  static readonly EXTERNAL_UNKNOWN_FILE_EXT: string = 'rsnUnknownFileExt';\r\n\r\n  /** イメージ編集アプリケーションで、ペイントを開く確認をする。 */\r\n  static readonly EXTERNAL_IMAGE_EDIT: string = 'rsnImageEdit';\r\n\r\n  /** アプリ編集を開始する。 */\r\n  static readonly EXTERNAL_START_EDIT: string = 'startEdit';\r\n\r\n  /** 全文データをアプリ起動する。 */\r\n  static readonly EXTERNAL_START_EDIT_FTS: string = 'startEditFTS';\r\n\r\n  /** FTSの編集結果を再起動する */\r\n  static readonly EXTERNAL_RESUME_EDIT_FTS: string = 'resumeEditFTS';\r\n\r\n  /** ActiveXにファイルアップロードを依頼します。 */\r\n  static readonly EXTERNAL_UPLOAD_FILE: string = 'uploadFile';\r\n\r\n  /** 1ファイルの印刷要求をActiveXに要求 */\r\n  static readonly EXTERNAL_PRINT: string = 'rsnPrint';\r\n\r\n  /** ローカルプリンター一覧取得をActiveXに要求 */\r\n  static readonly EXTERNAL_GET_PRINTER_LIST: string = 'rsnGetPrinterList';\r\n\r\n  /** ローカルプリンター一覧取得をActiveXに要求 */\r\n  static readonly EXTERNAL_PRINTER_LIST: string = 'rsnPrinterList';\r\n\r\n  /** 印刷処理を中止することをActiveXに要求 */\r\n  static readonly EXTERNAL_CANCEL_PRINT: string = 'rsnCancelPrint';\r\n\r\n  /** 印刷が開始された事をFlexに通知 */\r\n  static readonly EXTERNAL_PRINT_START: string = 'rsnPrintStart';\r\n\r\n  /** 印刷処理が終了したことをFlexに通知 */\r\n  static readonly EXTERNAL_PRINT_END: string = 'rsnPrintEnd';\r\n\r\n  /** 印刷処理エラーが発生したことをFlexに通知 */\r\n  static readonly EXTERNAL_PRINT_ERROR: string = 'rsnPrintOnError';\r\n\r\n  /** Window height */\r\n  static readonly EXTERNAL_WINDOW_HEIGHT: string = 'windowHeight';\r\n\r\n  /** Window width */\r\n  static readonly EXTERNAL_WINDOW_WIDTH: string = 'windowWidth';\r\n\r\n  /** セッションチェック */\r\n  static readonly EXTERNAL_SESSION_CHECK: string = 'sessionCheck';\r\n\r\n  /** 初期化処理 */\r\n  static readonly EXTERNAL_AUTO_EDIT_INIT: string = 'autoeditInit';\r\n}\r\n","/**\r\n * 外部JS呼び出しインターフェース\r\n */\r\nexport class ExternalInterface {\r\n  /**\r\n   * 関数をJSから呼び出させるように登録します\r\n   * @param funcName 関数名\r\n   * @param callback 関数\r\n   */\r\n  static addCallback(funcName: string, callback: Function | null = null) {\r\n    Sys0Application_addCallback(funcName, callback);\r\n  }\r\n\r\n  /**\r\n   * 指定された関数を呼び出します。\r\n   * @param funcName 関数名\r\n   * @param arg 引数\r\n   */\r\n  static call(funcName: string, ...arg): any {\r\n    return Sys0Application_call(funcName, ...arg);\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\n\r\n/**\r\n * CoreのInjector（DIに使用する）を提供するクラス\r\n */\r\nexport class InjectorProvider {\r\n  private static injector: Injector;\r\n\r\n  /**\r\n   * Injectorを設定する\r\n   * @param injector Injectorへの参照\r\n   */\r\n  static set(injector: Injector) {\r\n    this.injector = injector;\r\n  }\r\n\r\n  /**\r\n   * Injectorを取得する\r\n   * @returns injector\r\n   */\r\n  static get(): Injector {\r\n    return this.injector;\r\n  }\r\n}\r\n","/**\r\n * Event管理クラス\r\n *\r\n * 各コンポーネントでインスタンス化してaddEventListenerと\r\n * removeEventListerを生やしてコマンドから使ってください。\r\n */\r\nexport class RsnEventManager {\r\n  private _events = new Map<string, Function[]>();\r\n\r\n  /**\r\n   * イベントを処理するリスナーを登録します。\r\n   * 同じキーに複数リスナーを登録できます(上書きはしない)\r\n   *\r\n   * @param key イベントのタイプです。\r\n   * @param func イベントを処理するリスナー関数です。\r\n   */\r\n  addEventListener(key: string, func: Function) {\r\n    let funcs: Function[] = [];\r\n    const innerFuncs = this._events.get(key);\r\n    if (innerFuncs) {\r\n      funcs = innerFuncs;\r\n    }\r\n    funcs.push(func);\r\n    this._events.set(key, funcs);\r\n  }\r\n\r\n  /**\r\n   * リスナーを削除します。\r\n   *\r\n   * @param key イベントのタイプです。\r\n   * @param func 削除するリスナーオブジェクトです。\r\n   */\r\n  removeEventListener(key: string, func: Function) {\r\n    const innerFuncs = this._events.get(key);\r\n    if (innerFuncs) {\r\n      const removeIndex = innerFuncs.indexOf(func);\r\n      if (removeIndex >= 0) {\r\n        innerFuncs.splice(removeIndex, 1);\r\n        this._events.set(key, innerFuncs);\r\n        this._events.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * すべてのリスナーを削除します。\r\n   *\r\n   */\r\n  allremoveEventListener() {\r\n    this._events.clear();\r\n  }\r\n\r\n  /**\r\n   * イベントを実行します。\r\n   *\r\n   * @param key イベントのタイプです。\r\n   * @param event イベントに渡す引数です。\r\n   */\r\n  execute(key: string, event?: any) {\r\n    const innerFuncs = this._events.get(key);\r\n    if (innerFuncs) {\r\n      // innerFuncsでループを回すと\r\n      // ハンドラの中でremoveEventListenerした場合に\r\n      // indexがずれて実行されないハンドラが出てきてしまうので\r\n      // コピーしておく。\r\n      const copied = [...innerFuncs];\r\n      copied.forEach(f => {\r\n        f(event);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 組み合わせアクセス権詳細データモデル\r\n */\r\nexport class AccessRightVO {\r\n  /**\r\n   * プロパティ参照(閲覧)\r\n   */\r\n  enableReadProperty = false;\r\n\r\n  /**\r\n   * プロパティ更新\r\n   */\r\n  enableWriteProperty = false;\r\n\r\n  /**\r\n   * 読み取り\r\n   */\r\n  enableRead = false;\r\n\r\n  /**\r\n   * 更新\r\n   */\r\n  enableUpdate = false;\r\n\r\n  /**\r\n   * 削除\r\n   */\r\n  enableDelete = false;\r\n\r\n  /**\r\n   * アクセス権変更\r\n   */\r\n  enableChangeACL = false;\r\n\r\n  /**\r\n   * 所有権取得\r\n   */\r\n  enableAcquireOwnship = false;\r\n\r\n  /**\r\n   * 文書作成\r\n   */\r\n  enableCreateDocument = false;\r\n\r\n  /**\r\n   * ｻﾌﾞフォルダ作成\r\n   */\r\n  enableCreateSubFolder = false;\r\n\r\n  /**\r\n   * ごみ箱を空にする\r\n   */\r\n  enableClearTrash = false;\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as AccessRightVO;\r\n  }\r\n}\r\n\r\n/**\r\n * AccessRightVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isAccessRightVO(object: any): object is AccessRightVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    'enableReadProperty' in object &&\r\n    'enableWriteProperty' in object &&\r\n    'enableRead' in object &&\r\n    'enableUpdate' in object &&\r\n    'enableDelete' in object &&\r\n    'enableChangeACL' in object &&\r\n    'enableAcquireOwnship' in object &&\r\n    'enableCreateDocument' in object &&\r\n    'enableCreateSubFolder' in object &&\r\n    'enableClearTrash' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new AccessRightVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { AccessRightVO } from './access-right-vo';\r\nimport { EntryVO } from './entry-vo';\r\n\r\n/**\r\n * １ユーザーはドキュメントまたはショートカットオブジェクトに対するアクセス権詳細データモデル\r\n */\r\nexport class AceVO {\r\n  /**\r\n   * ユーザーアカウント情報\r\n   */\r\n  entry: EntryVO | null = null;\r\n\r\n  /**\r\n   * オブジェクトの組み合わせアクセス権(BL側は利用しない)\r\n   */\r\n  accessRight: number | null = null;\r\n\r\n  /**\r\n   * オブジェクトの組み合わせアクセス権に伴う詳細アクセス権オプション\r\n   * 特殊なアクセス権以外は設定しても無視する\r\n   */\r\n  detail: AccessRightVO | null = null;\r\n\r\n  /**\r\n   * 文書のデフォルト組み合わせアクセス権(フォルダのみ有効)(BL側は利用しない)\r\n   */\r\n  documentDefaultaccessRight: number | null = null;\r\n\r\n  /**\r\n   * 文書の組み合わせアクセス権(デフォルト)に伴う詳細アクセス権オプション\r\n   * 特殊なアクセス権以外は設定しても無視する\r\n   * フォルダオブジェクトのみ有効\r\n   */\r\n  documentDefaultDetail: AccessRightVO | null = null;\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as AceVO;\r\n  }\r\n}\r\n\r\n/**\r\n * AceVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isAceVO(object: any): object is AceVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    'entry' in object &&\r\n    'accessRight' in object &&\r\n    'detail' in object &&\r\n    'documentDefaultaccessRight' in object &&\r\n    'documentDefaultDetail' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new AceVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { AceVO } from './ace-vo';\r\nimport { EntryVO } from './entry-vo';\r\nimport { ObjectBaseVO } from './object-base-vo';\r\n\r\n/**\r\n * オブジェクトのアクセス権詳細データクラス\r\n * id,cabIdはアクセス権の対象のオブジェクトのID\r\n *\r\n */\r\nexport class AclVO extends ObjectBaseVO {\r\n  /**\r\n   * アクセス権定数\r\n   */\r\n  /**\r\n   * アクセス権なし\r\n   */\r\n  static readonly AC_NOTHING = 0;\r\n\r\n  /**\r\n   * フルコントロール\r\n   */\r\n  static readonly AC_FULLCONTROL = 1;\r\n\r\n  /**\r\n   * 更新\r\n   */\r\n  static readonly AC_UPDATE = 2;\r\n\r\n  /**\r\n   * 閲覧(プロパティ参照)\r\n   */\r\n  static readonly AC_BROWER = 3;\r\n\r\n  /**\r\n   * 読み取り\r\n   */\r\n  static readonly AC_READ = 4;\r\n\r\n  /**\r\n   * 特殊なアクセス権\r\n   */\r\n  static readonly AC_SPECIAL = 5;\r\n\r\n  /**\r\n   * アカウントのカテゴリ\r\n   */\r\n  /**\r\n   * ユーザ\r\n   */\r\n  static readonly USERCATEGORY_USER = 0;\r\n\r\n  /**\r\n   * ローカルグループ\r\n   */\r\n  static readonly USERCATEGORY_LOCALGROUP = AclVO.USERCATEGORY_USER + 1;\r\n\r\n  /**\r\n   * グローバルグループ\r\n   */\r\n  static readonly USERCATEGORY_GLOBALGROUP = AclVO.USERCATEGORY_LOCALGROUP + 1;\r\n\r\n  /**\r\n   * 不明\r\n   */\r\n  static readonly USERCATEGORY_UNKNOWN = AclVO.USERCATEGORY_GLOBALGROUP + 1;\r\n\r\n  /**\r\n   * Sys0BaseVO.idにオブジェクトID\r\n   * Sys0BaseVO.nameにオブジェクト名\r\n   */\r\n  /**\r\n   * 所有者情報\r\n   */\r\n  owner: EntryVO | null = null;\r\n\r\n  /**\r\n   * ACL一覧\r\n   */\r\n  aceList: AceVO[] | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as AclVO;\r\n  }\r\n}\r\n\r\n/**\r\n * AclVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isAclVO(object: any): object is AclVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n  // 判定に使用するtypeのリスト\r\n  const objectTypes = [\r\n    ObjectBaseVO.TYPE_FOLDER,\r\n    ObjectBaseVO.TYPE_CABINET,\r\n    ObjectBaseVO.TYPE_FAVORITE_CATEGORY,\r\n    ObjectBaseVO.TYPE_FAVORITE,\r\n    ObjectBaseVO.TYPE_TRASH,\r\n    ObjectBaseVO.TYPE_DOCUMENT,\r\n    ObjectBaseVO.TYPE_SHORTCUT\r\n  ];\r\n\r\n  const ok = ('owner' in object || 'aceList' in object) && objectTypes.findIndex(object.type) >= 0;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new AclVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\n\r\n/**\r\n * キャビネットデータモデル\r\n */\r\nexport class CabinetVO extends ObjectBaseVO {\r\n  /**\r\n   * デフォルト文書タイプ\r\n   */\r\n  typeId: string | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as CabinetVO;\r\n  }\r\n}\r\n\r\n/**\r\n * CabinetVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isCabinetVO(object: any): object is CabinetVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = !('owner' in object) && !('aceList' in object) && object.type === ObjectBaseVO.TYPE_CABINET;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new CabinetVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\n\r\n/**\r\n * プロファイルデータモデル\r\n */\r\nexport class ConfigFileVO extends Sys0BaseVO {\r\n  /**\r\n   * 設定ファイルタイプ（ツールバー）\r\n   */\r\n  static readonly CONFIG_FILE_TYPE_TOOLBAR = 'toolbar';\r\n\r\n  /**\r\n   * 設定ファイルタイプ（一覧表示）\r\n   */\r\n  static readonly CONFIG_FILE_TYPE_DISPLAY = 'display';\r\n\r\n  /**\r\n   * 設定ファイルタイプ（ワークフロー）\r\n   */\r\n  static readonly CONFIG_FILE_TYPE_WORKFLOW = 'workflow';\r\n\r\n  /**\r\n   * 設定ファイルタイプ（デフォルトお気に入り）\r\n   */\r\n  static readonly CONFIG_FILE_TYPE_DEFAULT_FAVORITE = 'defaultFavorite';\r\n\r\n  /**\r\n   * 設定ファイルタイプ（個人設定）\r\n   */\r\n  static readonly CONFIG_FILE_TYPE_SETTING = 'setting';\r\n\r\n  /**\r\n   * 文書タイプ（全ての文書タイプ）\r\n   */\r\n  static readonly LIST_TYPE_ALL_DOC_TYPE = 'allDocType';\r\n\r\n  /**\r\n   * 文書タイプ（TODOリスト）\r\n   * ここの値はプロファイルに登録される文書名になる。（制限120文字）\r\n   * 文書タイプ名が重複してしまう可能性があるので、文書タイプ名の制限値（32文字）よりも大きい値を設定している。\r\n   */\r\n  static readonly LIST_TYPE_TODO_LIST = 'profile_display_list_doc_type_name_todo_list';\r\n\r\n  /**\r\n   * idに文書ID\r\n   * nameにプロファイル名\r\n   */\r\n  /**\r\n   * プロファイルＩＤ\r\n   */\r\n  profileId: string | null = null;\r\n\r\n  /**\r\n   * プロファイルの分類(指定の文字列は分類のフォルダ名になる)\r\n   */\r\n  type: string | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as ConfigFileVO;\r\n  }\r\n}\r\n\r\n/**\r\n * ConfigFileVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isConfigFileVO(object: any): object is ConfigFileVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = isSys0BaseVO(object, false) && 'profileId' in object && 'type' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new ConfigFileVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\nimport { TagVO } from './tag-vo';\r\nimport { WorkflowVO } from './workflow-vo';\r\n\r\n/**\r\n * 文書データモデル\r\n */\r\nexport class DocumentVO extends ObjectBaseVO {\r\n  /**\r\n   * 文書番号\r\n   */\r\n  number: number | null = null;\r\n\r\n  /**\r\n   *  編集できるかどうか\r\n   */\r\n  editable = true;\r\n\r\n  /**\r\n   * 作成者\r\n   */\r\n  creater: string | null = null;\r\n\r\n  /**\r\n   * 最終更新日\r\n   */\r\n  lastUpdateDate: Date | null = null;\r\n\r\n  /**\r\n   * 保管期限日\r\n   */\r\n  retensionDate: Date | null = null;\r\n\r\n  /**\r\n   * セクション数\r\n   */\r\n  sections: number | null = null;\r\n\r\n  /**\r\n   * 文書サイズ\r\n   */\r\n  size: number | null = -1;\r\n\r\n  /**\r\n   * 文書状態\r\n   */\r\n  status: number | null = null;\r\n\r\n  /**\r\n   * 文書タイプID\r\n   */\r\n  typeId: string | null = null;\r\n\r\n  /**\r\n   * パスIDリスト。見えない場合は空文字列\r\n   */\r\n  pathIds: string[] | null = null;\r\n\r\n  /**\r\n   * パス名リスト。見えない場合は空文字列\r\n   */\r\n  pathNames: string[] | null = null;\r\n\r\n  /**\r\n   * 版\r\n   */\r\n  version: string | null = '1.0';\r\n\r\n  /**\r\n   * 版コメント\r\n   */\r\n  versionMemo: string | null = null;\r\n\r\n  /**\r\n   * ゴミ箱からのドキュメント(true)\r\n   */\r\n  trashDoc = false;\r\n\r\n  /**\r\n   * 作成日\r\n   *\r\n   * ※サーバー側のバグにより以下の通りになっています。\r\n   * 登録日=createDate\r\n   * 作成日=entryDate\r\n   */\r\n  entryDate: Date | null = null;\r\n\r\n  /**\r\n   * 最終アクセス日\r\n   */\r\n  lastAccessDate: Date | null = null;\r\n\r\n  /**\r\n   * アクセス回数\r\n   */\r\n  accessCount: number | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列1\r\n   */\r\n  userString1: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列2\r\n   */\r\n  userString2: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列3\r\n   */\r\n  userString3: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列4\r\n   */\r\n  userString4: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列5\r\n   */\r\n  userString5: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列6\r\n   */\r\n  userString6: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列7\r\n   */\r\n  userString7: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列8\r\n   */\r\n  userString8: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列9\r\n   */\r\n  userString9: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列10\r\n   */\r\n  userString10: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列11\r\n   */\r\n  userString11: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列12\r\n   */\r\n  userString12: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列13\r\n   */\r\n  userString13: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列14\r\n   */\r\n  userString14: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列15\r\n   */\r\n  userString15: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列16\r\n   */\r\n  userString16: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列17\r\n   */\r\n  userString17: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列18\r\n   */\r\n  userString18: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列19\r\n   */\r\n  userString19: string | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列20\r\n   */\r\n  userString20: string | null = null;\r\n\r\n  /**\r\n   * ユーザー数値1\r\n   */\r\n  userInteger1: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値2\r\n   */\r\n  userInteger2: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値3\r\n   */\r\n  userInteger3: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値4\r\n   */\r\n  userInteger4: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値5\r\n   */\r\n  userInteger5: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値6\r\n   */\r\n  userInteger6: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値7\r\n   */\r\n  userInteger7: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値8\r\n   */\r\n  userInteger8: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値9\r\n   */\r\n  userInteger9: number | null = null;\r\n\r\n  /**\r\n   * ユーザー数値10\r\n   */\r\n  userInteger10: number | null = null;\r\n\r\n  /**\r\n   * ユーザーメモ1\r\n   */\r\n  userMemo1: string | null = null;\r\n\r\n  /**\r\n   * ユーザーメモ2\r\n   */\r\n  userMemo2: string | null = null;\r\n\r\n  /**\r\n   * ユーザーメモ3\r\n   */\r\n  userMemo3: string | null = null;\r\n\r\n  /**\r\n   * ユーザーメモ4\r\n   */\r\n  userMemo4: string | null = null;\r\n\r\n  /**\r\n   * ユーザーメモ5\r\n   */\r\n  userMemo5: string | null = null;\r\n\r\n  /**\r\n   * ユーザー日付1\r\n   */\r\n  userDate1: Date | null = null;\r\n\r\n  /**\r\n   * ユーザー日付2\r\n   */\r\n  userDate2: Date | null = null;\r\n\r\n  /**\r\n   * ユーザー日付3\r\n   */\r\n  userDate3: Date | null = null;\r\n\r\n  /**\r\n   * ユーザー日付4\r\n   */\r\n  userDate4: Date | null = null;\r\n\r\n  /**\r\n   * ユーザー日付5\r\n   */\r\n  userDate5: Date | null = null;\r\n\r\n  /**\r\n   * ユーザー文字列(採番)\r\n   */\r\n  userNumber: string | null = null;\r\n\r\n  /**\r\n   * 自動採番フラグ\r\n   */\r\n  autoNumber: boolean | null = false;\r\n\r\n  /**\r\n   * メモ\r\n   */\r\n  memo: string | null = null;\r\n\r\n  /**\r\n   * ワークフローデータ\r\n   */\r\n  /**\r\n   * ワークフロー状態(取得のみ)。可能値はDocumentVOのワークフロー状態を参照\r\n   */\r\n  workFlowStatus: number | null = WorkflowVO.WFSTATUS_EMPTY;\r\n\r\n  /**\r\n   * 申請者(取得のみ)\r\n   */\r\n  applicant: string | null = null;\r\n\r\n  /**\r\n   * 承認者(取得のみ)\r\n   */\r\n  approver: string | null = null;\r\n\r\n  /**\r\n   * 次の審査/承認者(取得のみ)\r\n   */\r\n  waitingApprover: string | null = null;\r\n\r\n  // ★Stitch V1.3対応 BASE64の文字列として扱う\r\n  /**\r\n   * メイン画面でのサムネイル表示用\r\n   */\r\n  thumbnailData: string | null = null;\r\n\r\n  /**\r\n   * 付箋あり(1)/なし(0)フラグ\r\n   */\r\n  tagStatus = 0;\r\n\r\n  /**\r\n   * 付箋情報。\r\n   * 指定によって、取得しないことがある。\r\n   * 従って、nullによって、付箋あり/なしのを判断できない\r\n   */\r\n  tagList: TagVO[] | null = null;\r\n\r\n  /**\r\n   * 取引金額で使われているプロパティを指定する。\r\n   */\r\n  tradingAmountName: string | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n    this.type = ObjectBaseVO.TYPE_DOCUMENT;\r\n  }\r\n\r\n  /**\r\n   * 取引金額用仮想フィールド。<br />\r\n   * 電調法対応。15桁数値対応。\r\n   */\r\n  get tradingAmount(): number | null {\r\n    if (this.tradingAmountName != null && this.hasOwnProperty(this.tradingAmountName)) {\r\n      const userString = this[this.tradingAmountName]; // 指定されたプロパティの値を取得。\r\n      return userString != null ? Number(userString) : null; // Numberとして返す。\r\n    } else {\r\n      return NaN;\r\n    }\r\n  }\r\n  set tradingAmount(value: number | null) {\r\n    if (this.tradingAmountName != null && this.hasOwnProperty(this.tradingAmountName)) {\r\n      if (value == null) {\r\n        this[this.tradingAmountName] = null;\r\n        return;\r\n      }\r\n      const num: number = value;\r\n      if (isNaN(num)) {\r\n        this[this.tradingAmountName] = value;\r\n      } else {\r\n        const absvalue: number = Math.abs(num); // 絶対値を取得\r\n        let valueString: string | null = null;\r\n        valueString = absvalue.toString(10); // 10進数で文字列変換\r\n        if (value < 0) {\r\n          // マイナスの場合\r\n          // 先頭にマイナスを付与する\r\n          valueString = '-' + valueString;\r\n        }\r\n\r\n        // 元のプロパティに変換後の値を設定する。\r\n        this[this.tradingAmountName] = valueString;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as DocumentVO;\r\n  }\r\n}\r\n\r\n/**\r\n * DocumentVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isDocumentVO(object: any): object is DocumentVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = !('owner' in object) && !('aceList' in object) && object.type === ObjectBaseVO.TYPE_DOCUMENT;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new DocumentVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { Sys0BaseVO } from './sys0-base-vo';\r\n/**\r\n * ドメイン用のデータモデル\r\n *\r\n * @author $Author: koichi $\r\n * @version $Id: DomainVO.as 13694 2010-03-26 08:11:28Z koichi $\r\n */\r\nexport class DomainVO extends Sys0BaseVO {\r\n  /**\r\n   * フォルダーのタイプ\r\n   */\r\n  folderType: string;\r\n\r\n  /**\r\n   * 読み\r\n   */\r\n  phoneticName: string;\r\n\r\n  /**\r\n   * フォルダへのパス\r\n   */\r\n  pathName: string;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as DomainVO;\r\n  }\r\n}\r\n\r\n/**\r\n * DomainVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isDomainVO(object: any): object is DomainVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = 'folderType' in object && 'phoneticName' in object && 'pathName' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new DomainVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\n\r\n/**\r\n * UDから取得したエントリ（ユーザー、グループ）\r\n */\r\nexport class EntryVO extends Sys0BaseVO {\r\n  /**\r\n   * エントリ（ユーザ、グループ）のタイプ\r\n   */\r\n  entryType: string;\r\n\r\n  /**\r\n   * ユーザ管理の種類。 実際の値は実装依存である\r\n   */\r\n  userSpace: string;\r\n\r\n  /**\r\n   * ドメイン名\r\n   */\r\n  domainName: string;\r\n\r\n  /**\r\n   * 表示スペースが小さい一覧で使う短い名前\r\n   */\r\n  shortName: string;\r\n\r\n  /**\r\n   * 表示スペースが小さい一覧で使う長い名前\r\n   */\r\n  longName: string;\r\n\r\n  /**\r\n   * 読み\r\n   */\r\n  phoneticName: string;\r\n\r\n  /**\r\n   * エントリを直接指定するための数字\r\n   */\r\n  index: string;\r\n\r\n  /**\r\n   * trueの場合、 checkEntryPasswordでパスワードが与えられた entryのみが編集可能となる。 falseの場合、 Entryは常に編集可能とする。\r\n   */\r\n  protected: boolean;\r\n\r\n  /**\r\n   * 存在するプロパティのプレフィックス。 “：”の付いているプロパティの “：”の前の文字列。 アイコンの振り分けなどで使用。\r\n   */\r\n  propPrefixes: string[] | null;\r\n\r\n  /**\r\n   * ユーザーのメールアドレス\r\n   */\r\n  mailAddress: string | null = null;\r\n\r\n  /**\r\n   * グループに所属するメンバーのメールアドレスリスト\r\n   */\r\n  mailAddressList: string[] | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as EntryVO;\r\n  }\r\n}\r\n\r\n/**\r\n * EntryVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isEntryVO(object: any): object is EntryVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    isSys0BaseVO(object, false) &&\r\n    'entryType' in object &&\r\n    'userSpace' in object &&\r\n    'domainName' in object &&\r\n    'shortName' in object &&\r\n    'longName' in object &&\r\n    'phoneticName' in object &&\r\n    'index' in object &&\r\n    'protected' in object &&\r\n    'propPrefixes' in object &&\r\n    'mailAddress' in object &&\r\n    'mailAddressList' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new EntryVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\nimport { Sys0BaseVO } from './sys0-base-vo';\r\n\r\n/**\r\n * お気に入データモデル\r\n */\r\nexport class FavoriteVO extends ObjectBaseVO {\r\n  /**\r\n   * お気に入りタイプ定数\r\n   */\r\n  static readonly FAVORITE_TYPE_DOCUMENT = 1;\r\n\r\n  static readonly FAVORITE_TYPE_FOLDER = 2;\r\n\r\n  static readonly FAVORITE_TYPE_QUERY = 3;\r\n\r\n  /**\r\n   * プロファイルID\r\n   */\r\n  profileId: string | null = null;\r\n\r\n  /**\r\n   * 実データの場所(id)\r\n   */\r\n  linkId: string | null = null;\r\n\r\n  /**\r\n   * 検索条件のダイジェスト<br>\r\n   * 検索条件以外のお気に入りはnull\r\n   */\r\n  digest: string | null = null;\r\n\r\n  /**\r\n   * デフォルト表示かどうかを表す\r\n   */\r\n  isDefault = false;\r\n\r\n  /**\r\n   * 指す対象の種類を表す\r\n   *  FAVORITE_TYPE_DOCUMENT = 1,\r\n   *  FAVORITE_TYPE_FOLDER = 2,\r\n   *  FAVORITE_TYPE_QUERY = 3\r\n   */\r\n  targetType: number | null;\r\n\r\n  /**\r\n   * パスIDリスト\r\n   */\r\n  pathIds: string[] | null = null;\r\n\r\n  /**\r\n   * パス名リスト\r\n   */\r\n  pathNames: string[] | null = null;\r\n\r\n  /**\r\n   * お気に入りの実体\r\n   */\r\n  linkObject: Sys0BaseVO | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n    this.type = ObjectBaseVO.TYPE_FAVORITE;\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as FavoriteVO;\r\n  }\r\n}\r\n\r\n/**\r\n * FavoriteVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isFavoriteVO(object: any): object is FavoriteVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = !('owner' in object) && !('aceList' in object) && object.type === ObjectBaseVO.TYPE_FAVORITE;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new FavoriteVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\n\r\n/**\r\n * フォルダーデータモデル\r\n */\r\nexport class FolderVO extends ObjectBaseVO {\r\n  /**\r\n   * フォルダサイズ　(単位：KB)\r\n   */\r\n  size: number | null = null;\r\n\r\n  /**\r\n   * デフォルト文書タイプ\r\n   */\r\n  typeId: string | null = null;\r\n\r\n  /**\r\n   * パスIDリスト\r\n   */\r\n  pathIds: string[] | null = null;\r\n\r\n  /**\r\n   * パス名リスト\r\n   */\r\n  pathNames: string[] | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n    this.type = ObjectBaseVO.TYPE_FOLDER;\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as FolderVO;\r\n  }\r\n}\r\n\r\n/**\r\n * FolderVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isFolderVO(object: any): object is FolderVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = !('owner' in object) && !('aceList' in object) && object.type === ObjectBaseVO.TYPE_FOLDER;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new FolderVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import { UUID } from 'angular2-uuid';\r\nimport * as _ from 'lodash';\r\n\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\n\r\n/**\r\n * Sys0上で使用するオブジェクト（文書、ショートカット、フォルダ、お気に入り、ごみ箱、キャビネットなど）のベースモデル。\r\n */\r\nexport class ObjectBaseVO extends Sys0BaseVO {\r\n  /**\r\n   * フォルダ\r\n   */\r\n  static readonly TYPE_FOLDER = 'folder';\r\n\r\n  /**\r\n   * キャビネット\r\n   */\r\n  static readonly TYPE_CABINET = 'cabinet';\r\n\r\n  /**\r\n   * お気に入り カテゴリー\r\n   */\r\n  static readonly TYPE_FAVORITE_CATEGORY = 'favoriteCategory';\r\n\r\n  /**\r\n   * お気に入り\r\n   */\r\n  static readonly TYPE_FAVORITE = 'favorite';\r\n\r\n  /**\r\n   * ゴミ箱\r\n   */\r\n  static readonly TYPE_TRASH = 'trash';\r\n\r\n  /**\r\n   * 文書\r\n   */\r\n  static readonly TYPE_DOCUMENT = 'document';\r\n\r\n  /**\r\n   * ショートカット\r\n   */\r\n  static readonly TYPE_SHORTCUT = 'shortcut';\r\n\r\n  /**\r\n   * 裏でオブジェクトが削除された際にBL側から返ってくるid\r\n   */\r\n  private static readonly DELETED_OBJECT_ID = '00000000';\r\n\r\n  /**\r\n   * オブジェクトタイプ\r\n   * 各サブクラスのコンストラクタで初期設定される。\r\n   *\r\n   */\r\n  type: string | null = null;\r\n\r\n  /**\r\n   * アイコン識別子\r\n   * <pre>\r\n   * フォルダー: folder\r\n   * お気に入りカテゴリ:\r\n   *\r\n   * ロジックからの取得時に設定する。\r\n   * </pre>\r\n   */\r\n  icon: string | null = null;\r\n\r\n  /**\r\n   * 子フォルダ\r\n   * <pre>\r\n   * nullの場合は、ツリーに+/-が表示されない。\r\n   * 空でもListが存在する場合は、ツリーに+/-が表示される。\r\n   * </pre>\r\n   */\r\n  children: any[] | null = [];\r\n\r\n  /**\r\n   * 親フォルダのid\r\n   */\r\n  parentId: string | null = null;\r\n  private _uid: string | null = null;\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  get fill(): boolean {\r\n    return name != null;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  get uid(): string {\r\n    if (this._uid == null || this._uid === '') {\r\n      if (this.id === ObjectBaseVO.DELETED_OBJECT_ID || this.id == null || this.id === '') {\r\n        this._uid = UUID.UUID();\r\n      } else {\r\n        this._uid = this.id;\r\n      }\r\n\r\n      return this._uid;\r\n    } else {\r\n      return this._uid;\r\n    }\r\n  }\r\n\r\n  set uid(value: string) {\r\n    if (value != null && value !== '') {\r\n      this._uid = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as ObjectBaseVO;\r\n  }\r\n}\r\n\r\n/**\r\n * ObjectBaseVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isObjectBaseVO(object: any): object is ObjectBaseVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = isSys0BaseVO(object, false) && 'type' in object && 'icon' in object && 'children' in object && 'parentId' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new ObjectBaseVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * 属性詳細データモデル\r\n */\r\nexport class PropertyDetailVO {\r\n  /**\r\n   * 属性のデータタイプ\r\n   */\r\n  /**\r\n   * 文字列\r\n   */\r\n  static readonly PROPERTY_TYPE_STRING = 0x40;\r\n\r\n  /**\r\n   * 数字\r\n   */\r\n  static readonly PROPERTY_TYPE_INTEGER = 0x20;\r\n\r\n  /**\r\n   * 日付\r\n   */\r\n  static readonly PROPERTY_TYPE_DATE = 0x4;\r\n\r\n  /**\r\n   * BOOLEAN\r\n   */\r\n  static readonly PROPERTY_TYPE_BOOLEAN = 0x2;\r\n\r\n  /**\r\n   * BINARY\r\n   */\r\n  static readonly PROPERTY_TYPE_BINARY = 0x1;\r\n\r\n  /**\r\n   * 採番プロパティ\r\n   */\r\n  static readonly PROPERTY_TYPE_USERNUMBER = 0x8000;\r\n\r\n  /**\r\n   * 不明\r\n   */\r\n  static readonly PROPERTY_TYPE_NA = 0x0;\r\n\r\n  /**\r\n   * システム属性名\r\n   */\r\n  name: string | null = null;\r\n\r\n  /**\r\n   * 属性の表示名\r\n   */\r\n  displayName: string | null = null;\r\n\r\n  /**\r\n   * 属性のデータタイプ\r\n   *     PROPERTY_TYPE_STRING\r\n   *     PROPERTY_TYPE_INTEGER\r\n   *     PROPERTY_TYPE_DATE\r\n   */\r\n  type: number | null = null;\r\n\r\n  /**\r\n   * 初期値\r\n   */\r\n  initialValue: string | null = null;\r\n\r\n  /**\r\n   * 値必須(true)\r\n   */\r\n  notNull: boolean | null = null;\r\n\r\n  /**\r\n   * 制約\r\n   */\r\n  maxSize: number | null = null;\r\n\r\n  /**\r\n   * 新規登録時に編集可能(true)\r\n   */\r\n  editableEntry: boolean | null = null;\r\n\r\n  /**\r\n   * ﾌﾟﾛﾊﾟﾃｨ表示時に編集可能(true)\r\n   */\r\n  editableUpdate: boolean | null = null;\r\n\r\n  /**\r\n   * 対応単語帳名。対応なしの場合は、nullである。\r\n   */\r\n  wordBookName: string | null = null;\r\n\r\n  /**\r\n   * 単語帳+手入力可能(true)\r\n   */\r\n  overWordBook: boolean | null = null;\r\n\r\n  /**\r\n   * 検索画面表示位置\r\n   */\r\n  searchDispIdx: number | null = null;\r\n\r\n  /**\r\n   * 結果画面表示位置\r\n   */\r\n  resultDispIdx: number | null = null;\r\n\r\n  /**\r\n   * 入力画面表示位置\r\n   */\r\n  propDispIdx: number | null = null;\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as PropertyDetailVO;\r\n  }\r\n}\r\n\r\n/**\r\n * PropertyDetailVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isPropertyDetailVO(object: any): object is PropertyDetailVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    'name' in object &&\r\n    'displayName' in object &&\r\n    'type' in object &&\r\n    'initialValue' in object &&\r\n    'notNull' in object &&\r\n    'maxSize' in object &&\r\n    'editableEntry' in object &&\r\n    'editableUpdate' in object &&\r\n    'wordBookName' in object &&\r\n    'overWordBook' in object &&\r\n    'searchDispIdx' in object &&\r\n    'resultDispIdx' in object &&\r\n    'propDispIdx' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new PropertyDetailVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\n\r\n/**\r\n * 詳細検索の検索項目データモデル\r\n */\r\nexport class SearchConditionItemVO extends Sys0BaseVO {\r\n  /**\r\n   * 検索項目名\r\n   * DocumentVOの該当プロパティを指定\r\n   * 例：文書名は検索項目の場合は、\"name\"を設定\r\n   */\r\n  // \t\tname: string | null = null;\r\n\r\n  /**\r\n   * 文字列型の検索値\r\n   * 検索キーワードの区切りは呼び出す側が行うとする\r\n   */\r\n  values: string[] | null = null;\r\n\r\n  /**\r\n   * 検索キーワード\r\n   * 画面上の項目と連動する。\r\n   */\r\n  keyword: string | null = null;\r\n\r\n  /**\r\n   * 数値型の検索値(From)\r\n   * FromとToは揃える必要がなし、片方を指定可能\r\n   */\r\n  intValueFrom: number | null = null;\r\n\r\n  /**\r\n   * 数値型の検索値(To)\r\n   * FromとToは揃える必要がなし、片方を指定可能\r\n   */\r\n  intValueTo: number | null = null;\r\n\r\n  /**\r\n   * 日付型の検索値(From)\r\n   * FromとToは揃える必要がなし、片方を指定可能\r\n   */\r\n  dateValueFrom: Date | null = null;\r\n\r\n  /**\r\n   * 日付型の検索値(To)\r\n   * FromとToは揃える必要がなし、片方を指定可能\r\n   */\r\n  dateValueTo: Date | null = null;\r\n\r\n  /**\r\n   * 文書状態/ワークフロー状態 検索タイプ\r\n   */\r\n  matchConditionType: number | null = null;\r\n\r\n  /**\r\n   * 付箋色の選択時の値\r\n   */\r\n  tagColorConditionPattern: number | null = null;\r\n\r\n  /**\r\n   * 文字列型か数値型か日付型か採番プロパティの指定(値が属性のデータタイプを参照)\r\n   */\r\n  type: number | null = null;\r\n\r\n  /**\r\n   * 検索項目に対するマッチパターン\r\n   * 設定可能の定数は、SearchConditionVO.MATCHPATTERN_XXXXを参照\r\n   */\r\n  matchPattern: number | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as SearchConditionItemVO;\r\n  }\r\n}\r\n\r\n/**\r\n * SearchConditionItemVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isSearchConditionItemVO(object: any): object is SearchConditionItemVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    isSys0BaseVO(object, false) &&\r\n    'values' in object &&\r\n    'keyword' in object &&\r\n    'intValueFrom' in object &&\r\n    'intValueTo' in object &&\r\n    'dateValueFrom' in object &&\r\n    'dateValueTo' in object &&\r\n    'matchConditionType' in object &&\r\n    'type' in object &&\r\n    'matchPattern' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new SearchConditionItemVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\nimport { SearchConditionItemVO } from './search-condition-item-vo';\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\nimport { WorkflowVO } from './workflow-vo';\r\n\r\n/**\r\n * 検索条件データモデル\r\n */\r\nexport class SearchConditionVO extends Sys0BaseVO {\r\n  /**\r\n   * 検索タイプ定数\r\n   */\r\n  /**\r\n   * 簡易検索\r\n   */\r\n  static readonly SIMPLE_SEARCH = 0;\r\n\r\n  /**\r\n   * 詳細検索\r\n   */\r\n  static readonly CONDITIONAL_SEARCH = 1;\r\n\r\n  /**\r\n   * 詳細検索項目の処理パターン指定\r\n   */\r\n  /**\r\n   * 項目間条件のすべて一致(AND検索)\r\n   * またはすべてを含む\r\n   */\r\n  static readonly MATCHPATTERN_AND = 0;\r\n\r\n  /**\r\n   * すべての条件(キーワード)がORで検索\r\n   * またはいずれかを含む\r\n   */\r\n  static readonly MATCHPATTERN_OR = 1;\r\n\r\n  /**\r\n   * いずれも含まないまたは範囲外(Not)\r\n   */\r\n  static readonly MATCHPATTERN_NOT = 2;\r\n\r\n  /**\r\n   * すべて\r\n   */\r\n  static readonly MATCHPATTERN_ALL = 3;\r\n\r\n  /**\r\n   * である\r\n   */\r\n  static readonly MATCHPATTERN_EQUAL = 4;\r\n\r\n  /**\r\n   * 値なし\r\n   */\r\n  static readonly MATCHPATTERN_NOTSETVALUE = 5;\r\n\r\n  /**\r\n   * いずれかで始まる(前方一致)\r\n   */\r\n  static readonly MATCHPATTERN_PREFIX = 11;\r\n\r\n  /**\r\n   * いずれかで終わる(後方一致)\r\n   */\r\n  static readonly MATCHPATTERN_SUFFIX = 12;\r\n\r\n  /**\r\n   * どれかである(完全一致 or)\r\n   */\r\n  static readonly MATCHPATTERN_EQUAL_OR = 13;\r\n\r\n  /**\r\n   * どれでもない(完全一致 not)\r\n   */\r\n  static readonly MATCHPATTERN_EQUAL_NOT = 14;\r\n\r\n  /**\r\n   * 範囲内(Between...And)\r\n   */\r\n  static readonly MATCHPATTERN_SCOPE = 21;\r\n\r\n  /**\r\n   * 三日以内\r\n   */\r\n  static readonly MATCHPATTERN_3DAYS = 22;\r\n\r\n  /**\r\n   * １週間以内\r\n   */\r\n  static readonly MATCHPATTERN_1WEEK = 23;\r\n\r\n  /**\r\n   * １ヶ月以内\r\n   */\r\n  static readonly MATCHPATTERN_1MONTH = 24;\r\n\r\n  /**\r\n   * １時間以内\r\n   */\r\n  static readonly MATCHPATTERN_1HOUR = 25;\r\n\r\n  /**\r\n   * 6時間以内\r\n   */\r\n  static readonly MATCHPATTERN_6HOUR = 26;\r\n\r\n  /**\r\n   * 12時間以内\r\n   */\r\n  static readonly MATCHPATTERN_12HOUR = 27;\r\n\r\n  /**\r\n   * 一日以内\r\n   */\r\n  static readonly MATCHPATTERN_1DAY = 28;\r\n\r\n  /**\r\n   * 小（100KBより小さい）\r\n   */\r\n  static readonly MATCHPATTERN_SIZESMALL = 31;\r\n\r\n  /**\r\n   * 中（1MBより小さい）\r\n   */\r\n  static readonly MATCHPATTERN_SIZEMIDDLE = 32;\r\n\r\n  /**\r\n   * 大（1MBより大きい）\r\n   */\r\n  static readonly MATCHPATTERN_SIZELARGE = 33;\r\n\r\n  /**\r\n   * ワークフロー状態(状態なし)\r\n   */\r\n  static readonly MATCHPATTERN_EMPTY = WorkflowVO.WFSTATUS_EMPTY;\r\n\r\n  /**\r\n   * ワークフロー状態(回覧中)\r\n   */\r\n  static readonly MATCHPATTERN_REVIEWING = WorkflowVO.WFSTATUS_REVIEWING;\r\n\r\n  /**\r\n   * ワークフロー状態(承認済み)\r\n   */\r\n  static readonly MATCHPATTERN_APPROVED = WorkflowVO.WFSTATUS_APPROVED;\r\n\r\n  /**\r\n   * ワークフロー状態(承後修正)\r\n   */\r\n  static readonly MATCHPATTERN_EDITED = 4;\r\n\r\n  /**\r\n   * ワークフロー状態(取り下げ)\r\n   */\r\n  static readonly MATCHPATTERN_WITHDRAWN = 5;\r\n\r\n  /**\r\n   * ワークフロー状態(差し戻し)\r\n   */\r\n  static readonly MATCHPATTERN_REVERTING = 6;\r\n\r\n  /**\r\n   * 検索条件のダイジェスト\r\n   */\r\n  digest: string | null = null;\r\n\r\n  /**\r\n   * 検索条件タイプ\r\n   */\r\n  type: number | null = SearchConditionVO.SIMPLE_SEARCH;\r\n\r\n  /**\r\n   * 検索範囲。\r\n   */\r\n  range: ObjectBaseVO | null = null;\r\n\r\n  /**\r\n   * ソート条件\r\n   */\r\n  sort: { key: string; value: boolean }[] | null = null;\r\n\r\n  /**\r\n   * 取得するドキュメントのプロパティリスト。\r\n   * nullの場合はすべて取得とする。\r\n   */\r\n  docProps: string[] | null = null;\r\n\r\n  /**\r\n   * 簡易検索条件のキーワードリスト\r\n   * 詳細検索のすべてのキーワードを含むキーワードリスト\r\n   */\r\n  keywords: string[] | null = null;\r\n\r\n  /**\r\n   * 詳細検索のいずれかのキーワードを含むキーワードリスト\r\n   */\r\n  orKeywords: string[] | null = null;\r\n\r\n  /**\r\n   * 詳細検索のいずれかのキーワードを含まないキーワードリスト\r\n   */\r\n  notKeywords: string[] | null = null;\r\n\r\n  /**\r\n   * 詳細検索の文書検索対象にするかとの指定\r\n   */\r\n  searchDocument = true;\r\n\r\n  /**\r\n   * 詳細検索のフォルダ検索対象にするかとの指定\r\n   */\r\n  searchFolder = false;\r\n\r\n  /**\r\n   * 詳細検索の全文検索指定\r\n   */\r\n  fts = true;\r\n\r\n  /**\r\n   * 詳細検索のサブフォルダも検索対象指定\r\n   */\r\n  searchSubFolder = true;\r\n\r\n  /**\r\n   * 文書タイプの指定。nullの場合は、すべての文書タイプとする\r\n   */\r\n  documentTypeId: string | null = null;\r\n\r\n  /**\r\n   * 文書タイプ名nullの場合は、すべての文書タイプとする。\r\n   * BLでの検索には使用しないが、お気に入り保存後に文書タイプIDが付け変わっている可能性があるため、\r\n   * 文書タイプ名を保存し、再度検索する際は名前をキーにIDを特定し、documentTypeIdにセットして検索する。\r\n   */\r\n  documentTypeName: string | null = null;\r\n\r\n  /**\r\n   * 詳細検索の詳細項目のブール演算子\r\n   * ただし、詳細検索条件の項目リストitemsはnullの場合は、無視する\r\n   */\r\n  boolOperator: number | null = SearchConditionVO.MATCHPATTERN_AND;\r\n\r\n  /**\r\n   * 詳細検索条件の項目リスト\r\n   */\r\n  items: SearchConditionItemVO[] | null = null;\r\n\r\n  /**\r\n   * すべてのキーワード(画面設定項目)\r\n   */\r\n  keyword: string | null = null;\r\n\r\n  /**\r\n   * いずれかのキーワード(画面設定項目)\r\n   */\r\n  orKeyword: string | null = null;\r\n\r\n  /**\r\n   * いずれかのキーワードに含まないキーワードリスト(画面設定項目)\r\n   */\r\n  notKeyword: string | null = null;\r\n\r\n  /**\r\n   * ソートキー(画面設定項目)\r\n   */\r\n  sortKey: string | null = null;\r\n\r\n  /**\r\n   * ソート順(画面設定項目)\r\n   */\r\n  sortOrder = 1;\r\n\r\n  /**\r\n   * 画面上で検索条件が展開されているか\r\n   */\r\n  isExpanded: boolean | undefined = undefined;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as SearchConditionVO;\r\n  }\r\n}\r\n\r\n/**\r\n * SearchConditionVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isSearchConditionVO(object: any): object is SearchConditionVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    isSys0BaseVO(object, false) &&\r\n    'digest' in object &&\r\n    'type' in object &&\r\n    'range' in object &&\r\n    'sort' in object &&\r\n    'docProps' in object &&\r\n    'keywords' in object &&\r\n    'orKeywords' in object &&\r\n    'notKeywords' in object &&\r\n    'searchDocument' in object &&\r\n    'searchFolder' in object &&\r\n    'fts' in object &&\r\n    'searchSubFolder' in object &&\r\n    'documentTypeId' in object &&\r\n    'documentTypeName' in object &&\r\n    'boolOperator' in object &&\r\n    'items' in object &&\r\n    'keyword' in object &&\r\n    'orKeyword' in object &&\r\n    'notKeyword' in object &&\r\n    'sortKey' in object &&\r\n    'sortOrder' in object &&\r\n    'isExpanded' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new SearchConditionVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import { UUID } from 'angular2-uuid';\r\nimport * as _ from 'lodash';\r\n\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\nimport { TagVO } from './tag-vo';\r\n\r\n/**\r\n * セクションデータモデル\r\n */\r\nexport class SectionVO extends Sys0BaseVO {\r\n  /**\r\n   * 注意：idにはドキュメントIDを入れる。\r\n   */\r\n  /**\r\n   * RENDITION_TYPE\r\n   */\r\n  /**\r\n   * 全レンディションデータ\r\n   */\r\n  static readonly RENDITION_TYPE_ALL = 0xf;\r\n\r\n  /**\r\n   * 実データ\r\n   */\r\n  static readonly RENDITION_TYPE_PRIMARY = 0x1;\r\n\r\n  /**\r\n   * サムネイルデータ\r\n   */\r\n  static readonly RENDITION_TYPE_THUMBNAIL = 0x2;\r\n\r\n  /**\r\n   * PDFデータ\r\n   */\r\n  static readonly RENDITION_TYPE_PDF = 0x4;\r\n\r\n  /**\r\n   * 全文データ\r\n   */\r\n  static readonly RENDITION_TYPE_FTS = 0x8;\r\n\r\n  /**\r\n   * アプリケーションを開いていない\r\n   */\r\n  static readonly APP_CLOSE = 0;\r\n\r\n  /**\r\n   * 読み取り専用でアプリケーションを開いている\r\n   */\r\n  static readonly APP_OPEN_READONLY = 1;\r\n\r\n  /**\r\n   * 更新可能でアプリケーションを開いている\r\n   */\r\n  static readonly APP_OPEN = 2;\r\n\r\n  /**\r\n   * サムネイル情報有無\r\n   */\r\n  enableThumbnail = false;\r\n\r\n  /**\r\n   * PDFデータ情報有無\r\n   */\r\n  enablePDF = false;\r\n\r\n  /**\r\n   * 全文データ情報有無\r\n   */\r\n  enableFullText = false;\r\n\r\n  /**\r\n   * 実データファイルパス\r\n   */\r\n  dataFilePath: string | null = null;\r\n\r\n  /**\r\n   * サムネイルファイルパス\r\n   */\r\n  thumbnailFilePath: string | null = null;\r\n\r\n  // ★Stitch V1.3対応 BASE64の文字列として扱う\r\n  /**\r\n   * サムネイルデータ\r\n   */\r\n  thumbnailData: string | null = null;\r\n\r\n  /**\r\n   * PDFファイルパス\r\n   */\r\n  pdfFilePath: string | null = null;\r\n\r\n  /**\r\n   * 全文検索ファイルパス\r\n   */\r\n  fullTextFilePath: string | null = null;\r\n\r\n  /**\r\n   * セクションNo(順番)\r\n   */\r\n  sectionNo: number | null = null;\r\n\r\n  /**\r\n   * 実データのアイコン種別\r\n   */\r\n  icon: string | null = null;\r\n\r\n  /**\r\n   * セクション実データサイズ\r\n   */\r\n  dataSize: number | null = null;\r\n\r\n  /**\r\n   * 付箋データ\r\n   */\r\n  tag: TagVO | null = null;\r\n\r\n  /**\r\n   * アプリケーションが起動中かどうかを表します。\r\n   */\r\n  runningApp = 0;\r\n\r\n  private _tagList: TagVO[] | null = null;\r\n\r\n  private _uid: string | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  get tagList(): TagVO[] | null {\r\n    if (this.tag) {\r\n      if (this._tagList == null) {\r\n        this._tagList = [];\r\n      }\r\n      if (this._tagList.length === 1) {\r\n        // 先頭のタグデータを置き換える\r\n        this._tagList.splice(0, 1, this.tag);\r\n      } else {\r\n        this._tagList.push(this.tag);\r\n      }\r\n    } else {\r\n      if (this._tagList) {\r\n        // 配列の全要素を削除\r\n        this._tagList.length = 0;\r\n\r\n        this._tagList = null;\r\n      }\r\n    }\r\n    return this._tagList;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  get fill(): boolean {\r\n    return this.thumbnailData != null && this.thumbnailData.length > 0;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  get uid(): string {\r\n    if (this.sectionNo == null) {\r\n      if (this._uid == null) {\r\n        this._uid = UUID.UUID();\r\n      }\r\n      return this._uid;\r\n    } else {\r\n      return this.sectionNo.toString();\r\n    }\r\n  }\r\n\r\n  set uid(value: string) {}\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as SectionVO;\r\n  }\r\n}\r\n\r\n/**\r\n * SectionVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isSectionVO(object: any): object is SectionVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    isSys0BaseVO(object, false) &&\r\n    'enableThumbnail' in object &&\r\n    'enablePDF' in object &&\r\n    'enableFullText' in object &&\r\n    'dataFilePath' in object &&\r\n    'thumbnailFilePath' in object &&\r\n    'thumbnailData' in object &&\r\n    'pdfFilePath' in object &&\r\n    'fullTextFilePath' in object &&\r\n    'sectionNo' in object &&\r\n    'icon' in object &&\r\n    'dataSize' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new SectionVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\n\r\n/**\r\n * ショートカットデータモデル\r\n */\r\nexport class ShortcutVO extends ObjectBaseVO {\r\n  /**\r\n   * 実データの場所(id)\r\n   */\r\n  linkId: string;\r\n\r\n  /**\r\n   * ショートカット自身のパスIDリスト\r\n   */\r\n  pathIds: string[] | null = null;\r\n\r\n  /**\r\n   * ショートカット自身のパス名リスト\r\n   */\r\n  pathNames: string[] | null = null;\r\n\r\n  /**\r\n   * 実データの名前(作成時や更新時にセットしても無視される。)\r\n   */\r\n  linkName: string;\r\n\r\n  /**\r\n   * 実データのパス文字列(作成時や更新時にセットしても無視される。)\r\n   */\r\n  linkPathNames: string;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as ShortcutVO;\r\n  }\r\n}\r\n\r\n/**\r\n * FolderVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isShortcutVO(object: any): object is ShortcutVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = !('owner' in object) && !('aceList' in object) && object.type === ObjectBaseVO.TYPE_SHORTCUT;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new ShortcutVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\n/**\r\n * ベースデータモデル\r\n */\r\nexport class Sys0BaseVO {\r\n  /**\r\n   * 一意のid\r\n   */\r\n  id: string | null = null;\r\n\r\n  /**\r\n   * 表示名\r\n   */\r\n  name: string | null = null;\r\n\r\n  /**\r\n   * 所属するキャビネットID\r\n   */\r\n  cabId: string | null = null;\r\n\r\n  /**\r\n   * 登録日\r\n   *\r\n   * ※サーバー側のバグにより以下の通りになっています。\r\n   * 登録日=createDate\r\n   * 作成日=entryDate\r\n   */\r\n  createDate: Date | null = null;\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as Sys0BaseVO;\r\n  }\r\n}\r\n\r\n/**\r\n * Sys0BaseVOであることを確認するType Guard\r\n * @param object チェック対象\r\n * @param isConvertObject オブジェクトをSys0BaseVOに変換するかの判定\r\n */\r\nexport function isSys0BaseVO(object: any, isConvertObject: boolean = true): object is Sys0BaseVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = 'id' in object && 'name' in object && 'cabId' in object && 'createDate' in object;\r\n  // オブジェクトをSys0BaseVOに変換するか\r\n  if (ok && isConvertObject) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new Sys0BaseVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import { UUID } from 'angular2-uuid';\r\nimport * as _ from 'lodash';\r\n\r\n/**\r\n * 付箋データモデル\r\n */\r\nexport class TagVO {\r\n  // 赤\r\n  static readonly TAG_COLOR_RED = 'Tag01';\r\n\r\n  // 緑\r\n  static readonly TAG_COLOR_GREEN = 'Tag02';\r\n\r\n  // 青\r\n  static readonly TAG_COLOR_BLUE = 'Tag03';\r\n\r\n  // 黄\r\n  static readonly TAG_COLOR_YELLOW = 'Tag04';\r\n\r\n  // 水色\r\n  static readonly TAG_COLOR_SYAN = 'Tag05';\r\n\r\n  // ピンク\r\n  static readonly TAG_COLOR_PINK = 'Tag06';\r\n\r\n  // 紫\r\n  static readonly TAG_COLOR_PURPLE = 'Tag07';\r\n\r\n  // オレンジ\r\n  static readonly TAG_COLOR_ORANGE = 'Tag08';\r\n\r\n  // 茶色\r\n  static readonly TAG_COLOR_BROWN = 'Tag09';\r\n\r\n  /**\r\n   * セクションNo(順番)\r\n   */\r\n  sectionNo: number | null = null;\r\n\r\n  /**\r\n   * コメント\r\n   */\r\n  tagText: string | null = null;\r\n\r\n  /**\r\n   * 色\r\n   */\r\n  tagColor: string | null = null;\r\n\r\n  /**\r\n   * 選択されている。\r\n   */\r\n  selected = false;\r\n\r\n  private _uid: string | null = null;\r\n  /**\r\n   *\r\n   */\r\n  get uid(): string {\r\n    if (this.sectionNo == null) {\r\n      if (this._uid == null) {\r\n        this._uid = UUID.UUID();\r\n      }\r\n      return this._uid;\r\n    } else {\r\n      return this.sectionNo.toString();\r\n    }\r\n  }\r\n\r\n  set uid(value: string) {}\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as TagVO;\r\n  }\r\n}\r\n\r\n/**\r\n * TagVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isTagVO(object: any): object is TagVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = 'sectionNo' in object && 'tagText' in object && 'tagColor' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new TagVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { ObjectBaseVO } from './object-base-vo';\r\n\r\n/**\r\n * ゴミ箱データモデル\r\n */\r\nexport class TrashVO extends ObjectBaseVO {\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as TrashVO;\r\n  }\r\n\r\n  // TrashVO型をObjectBaseVO型から峻別するためのダミープロパティ（メソッド）\r\n  private _thisIsTrashVO() {}\r\n}\r\n\r\n/**\r\n * TrashVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isTrashVO(object: any): object is TrashVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok = !('owner' in object) && !('aceList' in object) && object.type === ObjectBaseVO.TYPE_TRASH;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new TrashVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\n\r\n/**\r\n * 版のデータモデル\r\n */\r\nexport class VersionVO extends Sys0BaseVO {\r\n  /**\r\n   * id <- 版Id\r\n   */\r\n  /**\r\n   * name <- 版番号\r\n   */\r\n  /**\r\n   * cabId <- キャビネットId\r\n   */\r\n  /**\r\n   * ドキュメントID\r\n   */\r\n  docId: string | null = null;\r\n\r\n  /**\r\n   * 更新日\r\n   */\r\n  checkinDate: Date | null = null;\r\n\r\n  /**\r\n   * 更新者\r\n   */\r\n  checkinUser: string | null = null;\r\n\r\n  /**\r\n   * コメント\r\n   */\r\n  comment: string | null = null;\r\n\r\n  /**\r\n   * 版のセクション数\r\n   */\r\n  sections: number | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as VersionVO;\r\n  }\r\n}\r\n\r\n/**\r\n * VersionVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isVersionVO(object: any): object is VersionVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    isSys0BaseVO(object, false) &&\r\n    'docId' in object &&\r\n    'checkinDate' in object &&\r\n    'checkinUser' in object &&\r\n    'comment' in object &&\r\n    'sections' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new VersionVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nimport { EntryVO } from './entry-vo';\r\nimport { isSys0BaseVO, Sys0BaseVO } from './sys0-base-vo';\r\nimport { WorkflowLog } from './workflow-log';\r\n\r\n/**\r\n * ワークフローのデータモデルです。\r\n */\r\nexport class WorkflowVO extends Sys0BaseVO {\r\n  /**\r\n   * idには文書ＩＤを格納する\r\n   * cabIdにはキャビネットＩＤを格納する\r\n   */\r\n  /**\r\n   * ワークフロー状態\r\n   */\r\n\r\n  /**\r\n   * 状態なし\r\n   */\r\n  static WFSTATUS_EMPTY = 1;\r\n\r\n  /**\r\n   * 回覧中\r\n   */\r\n  static WFSTATUS_REVIEWING = 2;\r\n\r\n  /**\r\n   * 承認済み\r\n   */\r\n  static WFSTATUS_APPROVED = 3;\r\n\r\n  /**\r\n   * 承認後修正\r\n   */\r\n  static WFSTATUS_EDITED = 4;\r\n\r\n  /**\r\n   * 取り下げ\r\n   */\r\n  static WFSTATUS_WITHDRAWN = 5;\r\n\r\n  /**\r\n   * 差し戻し\r\n   */\r\n  static WFSTATUS_REVERTING = 6;\r\n\r\n  /**\r\n   * ログリスト種類（全て）\r\n   */\r\n  static LOG_TYPE_TOTAL = 'totalLog';\r\n\r\n  /**\r\n   * ログリスト種類（現在のフローに関するログ）\r\n   */\r\n  static LOG_TYPE_CURRENT = 'currentLog';\r\n\r\n  /**\r\n   * ワークフロー状態。可能値はワークフロー状態を参照\r\n   */\r\n  workFlowStatus = WorkflowVO.WFSTATUS_EMPTY;\r\n\r\n  /**\r\n   * 申請者\r\n   */\r\n  applicant: EntryVO | null = null;\r\n\r\n  /**\r\n   * 承認者\r\n   */\r\n  approver: EntryVO | null = null;\r\n\r\n  /**\r\n   * 次の審査/承認者\r\n   */\r\n  waitingApprover: EntryVO | null = null;\r\n\r\n  /**\r\n   * 回覧ルート\r\n   */\r\n  circularList: EntryVO[] | null = null;\r\n\r\n  /**\r\n   * 配布先\r\n   */\r\n  distributionList: EntryVO[] | null = null;\r\n\r\n  /**\r\n   * ログ\r\n   * Map key=totalLog,currentLog\r\n   * LOG_TYPE_TOTAL\t\t…全てのログ\r\n   * 　　　　　　　　　　　　　　　　差し戻し時もクリアせず、その後のログを追加していく。\r\n   * LOG_TYPE_CURRENT\t\t…現在のフローのログ\r\n   * 　　　　　　　　　　　　　　　　現在回覧中のルートに関するログのみ。再申請時はクリアする。\r\n   */\r\n  log: { key: string; value: WorkflowLog[] }[] | null = null;\r\n\r\n  /**\r\n   * メール送信可能かを表す。\r\n   * 初期値はfalse、ワークフロー操作実行後のこのオブジェクトはtrueをセットしないとメール送信できない。\r\n   */\r\n  enableSendMail = false;\r\n\r\n  /**\r\n   * メール送信時用のコメント\r\n   */\r\n  mailComment: string | null = null;\r\n\r\n  /**\r\n   * コンストラクタです。\r\n   **/\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * clone()\r\n   */\r\n  clone() {\r\n    return _.cloneDeep(this) as WorkflowVO;\r\n  }\r\n}\r\n\r\n/**\r\n * WorkflowVOであることを確認するType Guard\r\n * @param object チェック対象\r\n */\r\nexport function isWorkflowVO(object: any): object is WorkflowVO {\r\n  if (object == null || typeof object !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  const ok =\r\n    isSys0BaseVO(object, false) &&\r\n    'workFlowStatus' in object &&\r\n    'applicant' in object &&\r\n    'approver' in object &&\r\n    'waitingApprover' in object &&\r\n    'circularList' in object &&\r\n    'distributionList' in object &&\r\n    'log' in object &&\r\n    'enableSendMail' in object &&\r\n    'mailComment' in object;\r\n  if (ok) {\r\n    // メソッドをチェック対象オブジェクトに生やす\r\n    // サーバー返却値にはメソッドが存在しないため\r\n    const proto = Object.getPrototypeOf(new WorkflowVO());\r\n    Object.setPrototypeOf(object, proto);\r\n  }\r\n\r\n  return ok;\r\n}\r\n","module.exports = \"<p-dialog\\r\\n  [header]=\\\"dialogTitle\\\"\\r\\n  [(visible)]=\\\"visible\\\"\\r\\n  [width]=\\\"width\\\"\\r\\n  [modal]=\\\"true\\\"\\r\\n  [responsive]=\\\"false\\\"\\r\\n  [closable]=\\\"false\\\"\\r\\n  [resizable]=\\\"false\\\"\\r\\n  [minHeight]=\\\"minHeight\\\"\\r\\n  class=\\\"hide-dialog\\\"\\r\\n  [class.hide-dialog]=\\\"!blur\\\"\\r\\n>\\r\\n  <div class=\\\"message progress-message-label\\\" *ngIf=\\\"showProgressMessageLabel\\\">{{ progressMessageLabel }}</div>\\r\\n  <div class=\\\"message object-name-label\\\" *ngIf=\\\"showObjectNameLabel\\\">{{ objectNameLabel }}{{ objectName }}</div>\\r\\n  <div class=\\\"message progress-count-label\\\" *ngIf=\\\"showProgressCountLabel\\\">{{ progressCountShow }}</div>\\r\\n  <div class=\\\"p-progressBar\\\">\\r\\n    <p-progressBar class=\\\"determinated-progressbar\\\" *ngIf=\\\"!indeterminate\\\" [value]=\\\"this.progressValue\\\" [showValue]=\\\"false\\\"></p-progressBar>\\r\\n    <p-progressBar class=\\\"indeterminated-progressbar\\\" *ngIf=\\\"indeterminate\\\" mode=\\\"indeterminate\\\"></p-progressBar>\\r\\n  </div>\\r\\n  <div class=\\\"stop-button\\\">\\r\\n    <button #elemStopButton pButton type=\\\"button\\\" *ngIf=\\\"cancelable\\\" (click)=\\\"onStop()\\\" label=\\\"{{ stopButton }}\\\"></button>\\r\\n  </div>\\r\\n</p-dialog>\\r\\n\"","module.exports = \".hide-dialog {\\n  display: none;\\n  height: 10px; }\\n\\n.progress-message-label {\\n  font-weight: bold;\\n  text-align: center;\\n  padding: 10px; }\\n\\n.object-name-label,\\n.progress-count-label {\\n  padding: 5px; }\\n\\n.p-progressBar {\\n  padding-left: 10px;\\n  padding-right: 10px; }\\n\\n.stop-button {\\n  padding: 5px;\\n  width: 100%;\\n  text-align: right;\\n  padding-right: 10px;\\n  padding-top: 10px;\\n  padding-bottom: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcHJvZ3Jlc3MtZGlhbG9nL0U6XFxhbmd1bGFyLXdvcmtzcGFjZVxcc21hLW5hdmlcXGFuZ3VsYXJcXHJzbi9zcmNcXGFwcFxcc2hhcmVkXFxjb21wb25lbnRzXFxwcm9ncmVzcy1kaWFsb2dcXHByb2dyZXNzLWRpYWxvZy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvcHJvZ3Jlc3MtZGlhbG9nL0U6XFxhbmd1bGFyLXdvcmtzcGFjZVxcc21hLW5hdmlcXGFuZ3VsYXJcXHJzbi9zcmNcXHByaW1lbmcucnNudGhlbWVzXFxnbG9iYWwtcGFyYW1ldGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDRSxhQUFhO0VBQ2IsWUFBWSxFQUFBOztBQUdkO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixhQUFhLEVBQUE7O0FBR2Y7O0VBRUUsWUFBWSxFQUFBOztBQUdkO0VBQ0Usa0JDbEJ3QjtFRG1CeEIsbUJDbEJ5QixFQUFBOztBRHFCM0I7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGlCQUFpQjtFQUNqQixtQkN6QnlCO0VEMEJ6QixpQkN6QnVCO0VEMEJ2QixvQkN6QjBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29tcG9uZW50cy9wcm9ncmVzcy1kaWFsb2cvcHJvZ3Jlc3MtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi8uLi8uLi8uLi8uLi9wcmltZW5nLnJzbnRoZW1lcy9nbG9iYWwtcGFyYW1ldGVyLnNjc3MnO1xyXG4uaGlkZS1kaWFsb2cge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgaGVpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4ucHJvZ3Jlc3MtbWVzc2FnZS1sYWJlbCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5vYmplY3QtbmFtZS1sYWJlbCxcclxuLnByb2dyZXNzLWNvdW50LWxhYmVsIHtcclxuICBwYWRkaW5nOiA1cHg7XHJcbn1cclxuXHJcbi5wLXByb2dyZXNzQmFyIHtcclxuICBwYWRkaW5nLWxlZnQ6ICRkaWFsb2ctcGFkZGluZy1sZWZ0O1xyXG4gIHBhZGRpbmctcmlnaHQ6ICRkaWFsb2ctcGFkZGluZy1yaWdodDtcclxufVxyXG5cclxuLnN0b3AtYnV0dG9uIHtcclxuICBwYWRkaW5nOiA1cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgcGFkZGluZy1yaWdodDogJGRpYWxvZy1wYWRkaW5nLXJpZ2h0O1xyXG4gIHBhZGRpbmctdG9wOiAkZGlhbG9nLXBhZGRpbmctdG9wO1xyXG4gIHBhZGRpbmctYm90dG9tOiAkZGlhbG9nLXBhZGRpbmctYm90dG9tO1xyXG59XHJcbiIsIiRkaWFsb2ctcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4kZGlhbG9nLXBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbiRkaWFsb2ctcGFkZGluZy10b3A6IDEwcHg7XHJcbiRkaWFsb2ctcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiRkaWFsb2ctbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiRkaWFsb2ctbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4kZGlhbG9nLW1hcmdpbi10b3A6IDEwcHg7XHJcbiRkaWFsb2ctbWFyZ2luLWJvdHRvbTogMTBweDtcclxuJGJvdHRvbi13aWR0aDogODZweDtcclxuIl19 */\"","import { AfterViewChecked, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\n\r\nimport { DialogInterface } from '../../../core/models/dialog-interface';\r\nimport { WordingService } from '../../../core/services/wording.service';\r\n\r\n@Component({\r\n  selector: 'app-progress-dialog',\r\n  templateUrl: './progress-dialog.component.html',\r\n  styleUrls: ['./progress-dialog.component.scss']\r\n})\r\nexport class ProgressDialogComponent implements OnInit, DialogInterface, AfterViewChecked {\r\n  @ViewChild('elemStopButton') elemStopButton: ElementRef;\r\n\r\n  /**\r\n   * ダイアログサイズ\r\n   */\r\n  width = 400;\r\n  minHeight = 50;\r\n\r\n  owner: any = null;\r\n\r\n  /**\r\n   * プログレスバーの進捗状態\r\n   */\r\n  progressValue = 0;\r\n\r\n  /**\r\n   * 実行合計数\r\n   */\r\n  allCount: number;\r\n\r\n  /**\r\n   * 処理完了数\r\n   */\r\n  addCount: number;\r\n\r\n  /**\r\n   * 表示フラグ\r\n   */\r\n  showProgressMessageLabel = false;\r\n\r\n  /**\r\n   * 複数オブジェクト操作時に表示するメッセージを指定します。例）コピー中です...\r\n   */\r\n  @Input()\r\n  progressMessageLabel: string | null = null;\r\n\r\n  /**\r\n   * 表示フラグ\r\n   */\r\n  showProgressCountLabel = false;\r\n\r\n  /**\r\n   * 複数オブジェクト操作時にプログレスの進捗具合を示すラベルを指定します。例）X件中Y件完了しました。\r\n   */\r\n  progressCountLabel: string | null = null;\r\n\r\n  progressCountShow: string | null = null;\r\n\r\n  /**\r\n   * ラベル：ダイアログタイトル\r\n   */\r\n  dialogTitle: string;\r\n\r\n  /**\r\n   * ラベル：中止ボタン\r\n   */\r\n  stopButton: string;\r\n\r\n  /**\r\n   * 表示フラグ\r\n   */\r\n  showObjectNameLabel = false;\r\n\r\n  /**\r\n   * プログレスバーのラベルを指定します。例）項目名：\r\n   */\r\n  objectNameLabel: string | null = null;\r\n\r\n  /**\r\n   * 実行しているアイテムの名前を指定します。\r\n   */\r\n  objectName: string | null = null;\r\n\r\n  /**\r\n   * キャンセルボタン表示\r\n   */\r\n  @Input()\r\n  cancelable = false;\r\n\r\n  /**\r\n   * ダイアログを表示する\r\n   */\r\n  @Input()\r\n  visible = false;\r\n\r\n  /**\r\n   * プログレスバーのアニメーション表示をするか\r\n   */\r\n  @Input()\r\n  indeterminate = false;\r\n\r\n  /**\r\n   * 実行合計数\r\n   */\r\n  @Input('allCount')\r\n  set _allCount(allCount: number) {\r\n    this.allCount = allCount;\r\n    this._calcProgressbarValue();\r\n  }\r\n\r\n  /**\r\n   * 処理完了数\r\n   */\r\n  @Input('addCount')\r\n  set _addCount(addCount: number) {\r\n    this.addCount = addCount;\r\n    this._calcProgressbarValue();\r\n  }\r\n\r\n  /**\r\n   * プログレスダイアログのタイトルラベルを設定します。\r\n   * true: 表示します。false: 非表示にします。\r\n   * デフォルトは非表示です。\r\n   */\r\n  @Input('progressMessageLabel')\r\n  set _progressMessageLabel(value: string) {\r\n    this.progressMessageLabel = value;\r\n    this.showProgressMessageLabel = value != null;\r\n  }\r\n\r\n  /**\r\n   * プログレスダイアログの進捗具合のメッセージ表示を行ないます。\r\n   * valueが指定されている場合は、件数表示を行ないます。\r\n   * valueが指定されていない場合は、件数表示をしません。\r\n   * デフォルトは非表示です。\r\n   */\r\n  @Input('progressCountLabel')\r\n  set _progressCountLabel(value: string) {\r\n    this.progressCountLabel = value;\r\n    this.showProgressCountLabel = value != null;\r\n  }\r\n\r\n  @Input() blur = true;\r\n\r\n  /**\r\n   * キャンセルボタン実行関数\r\n   */\r\n  @Output()\r\n  progressStopped = new EventEmitter();\r\n\r\n  /**\r\n   * キャンセルボタン押下時に実行する関数です\r\n   */\r\n  cancelFunction: Function;\r\n\r\n  /**\r\n   * 背景色を透明にセット済みか\r\n   */\r\n  private isSetTransparent = false;\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * ChangeDetectorRefをDI。\r\n   * 親画面(p-dialog)の状態を書き換えるため、detectChangeを走らせる必要がある。\r\n   */\r\n  constructor(public wording: WordingService, private cd: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * 初期処理\r\n   */\r\n  ngOnInit() {\r\n    // ラベル取得\r\n    this.dialogTitle = this.wording.get('lbl.progress.title');\r\n    this.stopButton = this.wording.get('lbl.alert.stop');\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (!this.blur && !this.isSetTransparent) {\r\n      // ★Stitch V1.3対応 ダイアログのマスク領域を取得、p-dialogの外側にいるためこの方法でしかマスクにアクセスできない\r\n      const el: HTMLElement | null = document.querySelector('.ui-dialog-mask');\r\n      if (el) {\r\n        // マスクの背景を透明にする\r\n        el.style.backgroundColor = 'transparent';\r\n        this.isSetTransparent = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 不確定プログレスバーの初期値を設定します。\r\n   *\r\n   * @param {number} allCount 実行合計数\r\n   * @param {number} addCount 処理完了数\r\n   */\r\n  setProgressCount(allCount: number, addCount: number): void {\r\n    this.addCount = addCount;\r\n    this.allCount = allCount;\r\n  }\r\n\r\n  /**\r\n   * 複数登録時のタイトルの表示を行います。\r\n   * labelが指定されている場合は、項目名を表示します。\r\n   * labelが指定されていない場合は、項目名を非表示にします。\r\n   *\r\n   * @param {string} objectNameLabel プログレスバーのラベルを指定します。例）項目名：\r\n   * @param {string} objectName 実行しているアイテムの名前を指定します。\r\n   */\r\n  setObjectNameLabel(objectNameLabel: string, objectName: string): void {\r\n    this.objectNameLabel = objectNameLabel;\r\n    this.objectName = objectName;\r\n  }\r\n\r\n  /**\r\n   * プログレスダイアログの更新を行ないます。\r\n   * 既に表示中の場合に、項目表示を切り替えます。\r\n   *\r\n   * @param {string} objectName 実行しているアイテムの名前を指定します。\r\n   * @param {number} addCount 処理完了数\r\n   */\r\n  updateProgress(objectName: string, addCount: number): void {\r\n    this.objectName = objectName;\r\n    this.addCount = addCount;\r\n\r\n    this.progressCountShow = this.wording.formatEx(this.progressCountLabel, this.allCount, this.addCount);\r\n    this._calcProgressbarValue();\r\n  }\r\n\r\n  /**\r\n   * ダイアログを表示\r\n   */\r\n  showDialog(): void {\r\n    this.visible = true;\r\n    this.isSetTransparent = false;\r\n\r\n    if (this.cancelable) {\r\n      this.focusStopButton();\r\n    }\r\n\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * ダイアログを非表示\r\n   */\r\n  closeDialog(): void {\r\n    this.visible = false;\r\n    if (!this.cd['destroyed']) {\r\n      this.cd.detectChanges();\r\n    }\r\n  }\r\n\r\n  onStop(): void {\r\n    this.progressStopped.emit();\r\n    if (this.cancelFunction) {\r\n      this.cancelFunction();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * プログレスバーの進捗状態を計算する\r\n   */\r\n  private _calcProgressbarValue(): void {\r\n    if (this.allCount === 0) {\r\n      this.progressValue = 0;\r\n    } else {\r\n      this.progressValue = (this.addCount / this.allCount) * 100;\r\n    }\r\n  }\r\n\r\n  private focusStopButton() {\r\n    setTimeout(() => {\r\n      if (this.elemStopButton) {\r\n        this.elemStopButton.nativeElement.focus();\r\n      } else {\r\n        this.focusStopButton();\r\n      }\r\n    }, 500);\r\n  }\r\n}\r\n","module.exports = \"<p-dialog\\r\\n  [modal]=\\\"true\\\"\\r\\n  [header]=\\\"title\\\"\\r\\n  [(visible)]=\\\"display\\\"\\r\\n  [focusOnShow]=\\\"true\\\"\\r\\n  [closable]=\\\"false\\\"\\r\\n  (keydown)=\\\"keyDownHandler($event)\\\"\\r\\n  cdkTrapFocus\\r\\n>\\r\\n  <div>\\r\\n    <div class=\\\"ui-message\\\">\\r\\n      <i class=\\\"{{ iconClass }}\\\"></i>\\r\\n      <span class=\\\"message\\\">{{ message }}</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-dialog-footer\\\">\\r\\n      <p-footer class=\\\"button-area\\\">\\r\\n        <ng-container *ngFor=\\\"let btn of buttons\\\">\\r\\n          <button type=\\\"button\\\" pButton [label]=\\\"btn.label\\\" (click)=\\\"clickHandler(btn.name)\\\"></button>\\r\\n        </ng-container>\\r\\n      </p-footer>\\r\\n    </div>\\r\\n  </div>\\r\\n</p-dialog>\\r\\n\"","module.exports = \":host ::ng-deep .ui-dialog .ui-dialog-content {\\n  display: flex;\\n  align-items: center; }\\n\\n:host ::ng-deep .ui-message {\\n  display: flex;\\n  padding: 0 0 2 0;\\n  border-style: none;\\n  display: inline-flex; }\\n\\n:host ::ng-deep .message {\\n  margin: 0.5em;\\n  white-space: pre; }\\n\\n:host ::ng-deep .ui-dialog .ui-dialog-footer {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 0 0 0 0;\\n  margin-left: 5px;\\n  border-style: none; }\\n\\n:host ::ng-deep button {\\n  vertical-align: middle;\\n  text-align: center; }\\n\\n:host ::ng-deep .button-area {\\n  padding-bottom: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2NvbnRhaW5lcnMvZGlhbG9ncy9hbGVydC1kaWFsb2cvRTpcXGFuZ3VsYXItd29ya3NwYWNlXFxzbWEtbmF2aVxcYW5ndWxhclxccnNuL3NyY1xcYXBwXFxzaGFyZWRcXGNvbnRhaW5lcnNcXGRpYWxvZ3NcXGFsZXJ0LWRpYWxvZ1xcYWxlcnQtZGlhbG9nLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvY29udGFpbmVycy9kaWFsb2dzL2FsZXJ0LWRpYWxvZy9FOlxcYW5ndWxhci13b3Jrc3BhY2VcXHNtYS1uYXZpXFxhbmd1bGFyXFxyc24vc3JjXFxwcmltZW5nLnJzbnRoZW1lc1xcZ2xvYmFsLXBhcmFtZXRlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBR0ksYUFBYTtFQUNiLG1CQUFtQixFQUFBOztBQUp2QjtFQU9JLGFBQWE7RUFDYixnQkFBZ0I7RUFFaEIsa0JBQWtCO0VBQ2xCLG9CQUFvQixFQUFBOztBQVh4QjtFQWVJLGFBQWE7RUFDYixnQkFBZ0IsRUFBQTs7QUFoQnBCO0VBcUJJLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFFaEIsa0JBQWtCLEVBQUE7O0FBM0J0QjtFQStCSSxzQkFBc0I7RUFDdEIsa0JBQWtCLEVBQUE7O0FBaEN0QjtFQW1DSSxvQkNsQ3dCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY29udGFpbmVycy9kaWFsb2dzL2FsZXJ0LWRpYWxvZy9hbGVydC1kaWFsb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0ICcuLy4uLy4uLy4uLy4uLy4uL3ByaW1lbmcucnNudGhlbWVzL2dsb2JhbC1wYXJhbWV0ZXIuc2Nzcyc7XHJcblxyXG46aG9zdCA6Om5nLWRlZXAge1xyXG4gIC8vIOOCs+ODs+ODhuODs+ODhOOCqOODquOColxyXG4gIC51aS1kaWFsb2cgLnVpLWRpYWxvZy1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuICAudWktbWVzc2FnZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgcGFkZGluZzogMCAwIDIgMDtcclxuICAgIC8vIOaeoOe3muOBr+eEoeOBl1xyXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgfVxyXG5cclxuICAubWVzc2FnZSB7XHJcbiAgICBtYXJnaW46IDAuNWVtO1xyXG4gICAgd2hpdGUtc3BhY2U6IHByZTtcclxuICB9XHJcblxyXG4gIC8vIOODleODg+OCv+OCqOODquOColxyXG4gIC51aS1kaWFsb2cgLnVpLWRpYWxvZy1mb290ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDAgMCAwIDA7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgLy8g5p6g57ea44Gv54Sh44GXXHJcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBidXR0b24ge1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgLmJ1dHRvbi1hcmVhIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAkZGlhbG9nLXBhZGRpbmctYm90dG9tO1xyXG4gIH1cclxufVxyXG4iLCIkZGlhbG9nLXBhZGRpbmctbGVmdDogMTBweDtcclxuJGRpYWxvZy1wYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4kZGlhbG9nLXBhZGRpbmctdG9wOiAxMHB4O1xyXG4kZGlhbG9nLXBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4kZGlhbG9nLW1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4kZGlhbG9nLW1hcmdpbi1yaWdodDogMTBweDtcclxuJGRpYWxvZy1tYXJnaW4tdG9wOiAxMHB4O1xyXG4kZGlhbG9nLW1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiRib3R0b24td2lkdGg6IDg2cHg7XHJcbiJdfQ== */\"","import { Component, NgZone } from '@angular/core';\r\n\r\nimport { ImageManager } from '../../../../core/controls/image-manager';\r\nimport { Alert } from '../../../../core/models/alert';\r\nimport { CloseEvent } from '../../../../core/models/close-event';\r\nimport { DialogInterface } from '../../../../core/models/dialog-interface';\r\nimport { Sys0AlertType } from '../../../../core/models/sys0-alert-type';\r\nimport { PopupService } from '../../../../core/services/popup.service';\r\nimport { WordingService } from '../../../../core/services/wording.service';\r\nimport { InjectorProvider } from '../../../../core/utils/injector-provider';\r\nimport { RsnEventManager } from '../../../../core/utils/rsn-event-manager';\r\n\r\n/**\r\n * ボタンモデル定義\r\n */\r\nexport class ButtonModel {\r\n  /**\r\n   * コンストラクタ\r\n   */\r\n  constructor(public label: string, public name: string) {}\r\n}\r\n\r\n/**\r\n * Alert Dialogコンポーネント\r\n *\r\n * ★Stitch V1.3\r\n * Flex Alertの代用コンポーネントとして新規作成\r\n * また、Flex AlertFormの責務も集約する\r\n * 用語解決の責務も集約する\r\n *\r\n * PrimeNGに依存するため、Sharedに配置\r\n *\r\n * デフォルトボタンの制御は、最初のボタンにフォーカスを当てるPrimeNG Dialog focusOnShow trueに代替する\r\n * Flexにおいてははい・いいえモードの場合[はい]、\r\n * その他の場合[OK]もしくは最初の配置ボタンに設定していたが、\r\n * これは上記のプロパティを有効化するだけで条件を満たすため\r\n */\r\n@Component({\r\n  selector: 'app-alert-dialog',\r\n  templateUrl: './alert-dialog.component.html',\r\n  styleUrls: ['./alert-dialog.component.scss']\r\n})\r\nexport class AlertDialogComponent implements DialogInterface {\r\n  private static readonly KEYBOARD_ESCAPE: number = 27;\r\n\r\n  /**\r\n   * ボタン名定義\r\n   */\r\n  private static readonly NAME_YES = 'YES';\r\n  private static readonly NAME_NO = 'NO';\r\n  private static readonly NAME_OK = 'OK';\r\n  private static readonly NAME_CANCEL = 'CANCEL';\r\n  private static readonly NAME_SKIP = 'Skip';\r\n  private static readonly NAME_RENAME = 'Rename';\r\n  private static readonly NAME_STOP = 'Stop';\r\n\r\n  /**\r\n   * ボタンラベル定義\r\n   *\r\n   * ★Stitch V1.3対応\r\n   * yes、no、ok、cancelはresourceManager利用でFlex定義値を取得していたが、\r\n   * AngularのWordingServiceでは取れないので、固定値にする\r\n   */\r\n  private readonly LABEL_YES = 'はい';\r\n  private readonly LABEL_NO = 'いいえ';\r\n  private readonly LABEL_OK = 'OK';\r\n  private readonly LABEL_CANCEL = 'キャンセル';\r\n  private readonly LABEL_SKIP = this.wording.get('lbl.alert.skip');\r\n  private readonly LABEL_RENAME = this.wording.get('lbl.alert.rename');\r\n  private readonly LABEL_STOP = this.wording.get('lbl.alert.stop');\r\n\r\n  /**\r\n   * 表示フラグ\r\n   */\r\n  private _display = false;\r\n\r\n  set display(flag: boolean) {\r\n    this._display = flag;\r\n  }\r\n\r\n  get display() {\r\n    return this._display;\r\n  }\r\n\r\n  /**\r\n   * 使用できるボタンを示すビットマスク\r\n   */\r\n  private _buttonFlags: number;\r\n\r\n  /**\r\n   * ボタンモデル\r\n   */\r\n  private _buttons: Array<ButtonModel>;\r\n\r\n  /**\r\n   * 使用できるボタンを示すビットマスクを受け取り、該当のボタンモデルを生成する\r\n   */\r\n  set buttonFlags(flags: number) {\r\n    this.createButtons(flags);\r\n\r\n    this._buttonFlags = flags;\r\n  }\r\n\r\n  get buttonFlags() {\r\n    return this._buttonFlags;\r\n  }\r\n\r\n  set buttons(buttons: Array<ButtonModel>) {\r\n    this._buttons = buttons;\r\n  }\r\n\r\n  get buttons() {\r\n    return this._buttons;\r\n  }\r\n\r\n  /**\r\n   * 表示メッセージ\r\n   */\r\n  private _message = '';\r\n\r\n  /**\r\n   * 表示メッセージキーを受け取り、用語解決する\r\n   */\r\n  set messageKey(key: string) {\r\n    this._message = this.wording.get(key);\r\n  }\r\n\r\n  get message() {\r\n    return this._message;\r\n  }\r\n\r\n  /**\r\n   * ダイアログタイトル\r\n   */\r\n  private _title = '';\r\n\r\n  /**\r\n   * ダイアログタイトルキーを受け取り、用語解決する\r\n   */\r\n  set titleKey(key: string) {\r\n    this._title = this.wording.get(key);\r\n  }\r\n\r\n  get title() {\r\n    return this._title;\r\n  }\r\n\r\n  /**\r\n   * アイコンクラス\r\n   */\r\n  private _iconClass: string | null = null;\r\n\r\n  set iconClass(iconClass: string | null) {\r\n    this._iconClass = iconClass;\r\n  }\r\n\r\n  get iconClass() {\r\n    return this._iconClass;\r\n  }\r\n\r\n  /**\r\n   * Alertタイプ\r\n   */\r\n  private _type: number;\r\n\r\n  /**\r\n   * Alertタイプを受け取り、ダイアログタイトル・アイコンを定める\r\n   */\r\n  set type(type: number) {\r\n    this.setTitle(type);\r\n    this.setIconClass(type);\r\n\r\n    this._type = type;\r\n  }\r\n\r\n  /**\r\n   * EscキーによるClose有効化フラグ\r\n   *\r\n   * ★Stitch V1.3対応\r\n   * Flexにおいて変数名が示す意味合いと真偽が逆に設定されているバグが有ったので、\r\n   * 関連の判定処理も含めて正しく統一した\r\n   */\r\n  private _enableAlartCloseOnEscKeyDownFlag = true;\r\n\r\n  set enableAlartCloseOnEscKeyDownFlag(flag: boolean) {\r\n    this._enableAlartCloseOnEscKeyDownFlag = flag;\r\n  }\r\n\r\n  get enableAlartCloseOnEscKeyDownFlag() {\r\n    return this._enableAlartCloseOnEscKeyDownFlag;\r\n  }\r\n\r\n  /**\r\n   * ★Stitch V1.3対応\r\n   * 埋め込み画像管理クラス\r\n   */\r\n  private imageManager: ImageManager = new ImageManager();\r\n\r\n  /**\r\n   * ★Stitch V1.3対応\r\n   * Event管理クラス\r\n   */\r\n  private rsnEventManager = new RsnEventManager();\r\n\r\n  /**\r\n   * コンストラクタ\r\n   * @param wording 用語解決サービス\r\n   */\r\n  constructor(private wording: WordingService, private ngZone: NgZone) {}\r\n\r\n  /**\r\n   * 画面を表示する\r\n   */\r\n  showDialog() {\r\n    this.ngZone.run(() => {\r\n      this.display = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * ★Stitch V1.3対応\r\n   * addEventListerner\r\n   */\r\n  addEventListener(key: string, func: Function) {\r\n    this.rsnEventManager.addEventListener(key, func);\r\n  }\r\n\r\n  /**\r\n   * イベントハンドラー:ボタンクリック\r\n   *\r\n   * @param buttonName 押下されたボタン名\r\n   *\r\n   * ★Stitch V1.3対応\r\n   * ボタン名を直接受け取る仕様に変更\r\n   */\r\n  clickHandler(buttonName: string): void {\r\n    this.removeAlert(buttonName);\r\n  }\r\n\r\n  /**\r\n   * イベントハンドラー:キー押下\r\n   *\r\n   * @param event イベント情報\r\n   */\r\n  keyDownHandler(event: KeyboardEvent): void {\r\n    if (this.enableAlartCloseOnEscKeyDownFlag === false) {\r\n      return;\r\n    }\r\n\r\n    const buttonFlags = this.buttonFlags;\r\n\r\n    if (event.keyCode === AlertDialogComponent.KEYBOARD_ESCAPE) {\r\n      if (buttonFlags & Alert.CANCEL || !(buttonFlags & Alert.NO)) {\r\n        this.removeAlert(AlertDialogComponent.NAME_CANCEL);\r\n      } else if (buttonFlags & Alert.NO) {\r\n        this.removeAlert(AlertDialogComponent.NAME_NO);\r\n      }\r\n    }\r\n\r\n    // ★Stitch V1.3対応\r\n    // Sys0AlertFormにて、AlertのkeyDownHandler（removeAlert）を呼んだあとに\r\n    // 再度クローズ処理を実行しているが、重複処理と思われるので削除\r\n  }\r\n\r\n  /**\r\n   * ボタンを生成する\r\n   * @param flags 使用できるボタンを示すビットマスク\r\n   */\r\n  private createButtons(flags: number) {\r\n    this.buttons = new Array<ButtonModel>();\r\n\r\n    if (flags & Alert.OK) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_OK, AlertDialogComponent.NAME_OK));\r\n    }\r\n\r\n    if (flags & Alert.YES) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_YES, AlertDialogComponent.NAME_YES));\r\n    }\r\n\r\n    if (flags & Alert.NO) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_NO, AlertDialogComponent.NAME_NO));\r\n    }\r\n\r\n    if (flags & Alert.CANCEL) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_CANCEL, AlertDialogComponent.NAME_CANCEL));\r\n    }\r\n\r\n    if (flags & Alert.SKIP) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_SKIP, AlertDialogComponent.NAME_SKIP));\r\n    }\r\n\r\n    if (flags & Alert.RENAME) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_RENAME, AlertDialogComponent.NAME_RENAME));\r\n    }\r\n\r\n    if (flags & Alert.STOP) {\r\n      this.buttons.push(new ButtonModel(this.LABEL_STOP, AlertDialogComponent.NAME_STOP));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * AlertTypeに応じてタイトルを設定する\r\n   * @param type AlertType\r\n   */\r\n  private setTitle(type: number) {\r\n    switch (type) {\r\n      case Sys0AlertType.TYPE_QUESTION: {\r\n        this.titleKey = 'lbl.alert.confirm';\r\n        break;\r\n      }\r\n      case Sys0AlertType.TYPE_INFO: {\r\n        this.titleKey = 'lbl.alert.info';\r\n        break;\r\n      }\r\n      default: {\r\n        this.titleKey = 'lbl.common.error';\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * AlertTypeに応じてIconClassを設定する\r\n   * @param type AlertType\r\n   */\r\n  private setIconClass(type: number) {\r\n    // ★Stitch V1.3対応\r\n    // iconClassは、css定義 → staticプロパティの順で確認していたが、実際にはcss定義は存在しなかった。\r\n    // imageManagerに設定したstaticプロパティ相当のリソースを直接設定する\r\n    switch (type) {\r\n      case Sys0AlertType.TYPE_SYSTEM_ERROR: {\r\n        this.iconClass = this.imageManager.iconSystemError;\r\n        break;\r\n      }\r\n      case Sys0AlertType.TYPE_ERROR: {\r\n        this.iconClass = this.imageManager.iconError;\r\n        break;\r\n      }\r\n      case Sys0AlertType.TYPE_WARNING: {\r\n        this.iconClass = this.imageManager.iconWarning;\r\n        break;\r\n      }\r\n      case Sys0AlertType.TYPE_QUESTION: {\r\n        this.iconClass = this.imageManager.iconQuestion;\r\n        break;\r\n      }\r\n      case Sys0AlertType.TYPE_INFO: {\r\n        this.iconClass = this.imageManager.iconInfo;\r\n        break;\r\n      }\r\n      case Sys0AlertType.TYPE_NONE:\r\n      default:\r\n        this.iconClass = null;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * アラートのクローズ処理\r\n   *\r\n   * @param buttonPressed 押下されたボタン名\r\n   */\r\n  private removeAlert(buttonPressed: string) {\r\n    this.display = false;\r\n\r\n    const closeEvent: CloseEvent = new CloseEvent(CloseEvent.CLOSE);\r\n\r\n    if (buttonPressed === AlertDialogComponent.NAME_YES) {\r\n      closeEvent.detail = Alert.YES;\r\n    } else if (buttonPressed === AlertDialogComponent.NAME_NO) {\r\n      closeEvent.detail = Alert.NO;\r\n    } else if (buttonPressed === AlertDialogComponent.NAME_OK) {\r\n      closeEvent.detail = Alert.OK;\r\n    } else if (buttonPressed === AlertDialogComponent.NAME_CANCEL) {\r\n      closeEvent.detail = Alert.CANCEL;\r\n    } else if (buttonPressed === AlertDialogComponent.NAME_SKIP) {\r\n      closeEvent.detail = Alert.SKIP;\r\n    } else if (buttonPressed === AlertDialogComponent.NAME_RENAME) {\r\n      closeEvent.detail = Alert.RENAME;\r\n    } else if (buttonPressed === AlertDialogComponent.NAME_STOP) {\r\n      closeEvent.detail = Alert.STOP;\r\n    }\r\n\r\n    if (closeEvent.detail > 0) {\r\n      const injector = InjectorProvider.get();\r\n      const popup = injector.get(PopupService);\r\n\r\n      // 変更検知を走らせる\r\n      this.ngZone.run(() => {\r\n        popup.removePopUp(this);\r\n      });\r\n      this.rsnEventManager.execute(CloseEvent.CLOSE, closeEvent);\r\n    }\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  apiOrigin: null\r\n};\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // REST APIのorigin(protocol + host + port)\r\n  apiOrigin: 'http://sma-203.src.ricoh.co.jp:8080'\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}