{"version":3,"sources":["webpack:///./src/app/core/models/authentication-error.ts","webpack:///./src/app/login/components/login/login.component.html","webpack:///./src/app/login/components/login/login.component.scss","webpack:///./src/app/login/components/login/login.component.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { RsnRestApi } from '../rsn-rest-api';\r\n\r\nimport { ServerLogicError } from './server-logic-error';\r\n\r\n/**\r\n * 認証APIのエラー\r\n */\r\nexport class AuthenticationError {\r\n  constructor(private error: any) {}\r\n\r\n  /**\r\n   * エラーがRSN REST APIのエラーならサーバーから得られるメッセージを得る\r\n   */\r\n  getMessage(): string {\r\n    if (!(this.error instanceof HttpErrorResponse)) {\r\n      return this.error.toString();\r\n    }\r\n\r\n    const errorResponse = <HttpErrorResponse>this.error;\r\n    const httpStatus = errorResponse.status;\r\n    if (httpStatus === RsnRestApi.errorStatus) {\r\n      const rsnError = <ServerLogicError>errorResponse.error;\r\n      return rsnError.messageDetail || '';\r\n    } else {\r\n      return errorResponse.statusText;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"messageArea center\\\">\\r\\n  <h3>This is a development mode login page</h3>\\r\\n  <p>\\r\\n    then redirected to <strong class=\\\"emphasis\\\"> /{{ redirectUrl$ | async }} </strong>\\r\\n  </p>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"TitleArea center\\\"></div>\\r\\n\\r\\n<div class=\\\"container center-form\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" class=\\\"form-container\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"InputLogin\\\">ログイン名：</label>\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        class=\\\"form-control\\\"\\r\\n        id=\\\"InputLogin\\\"\\r\\n        name=\\\"loginName\\\"\\r\\n        [maxlength]=\\\"maxAccountName\\\"\\r\\n        [(ngModel)]=\\\"accountName\\\"\\r\\n        autofocus\\r\\n      />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"InputPassword\\\">パスワード：</label>\\r\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"InputPassword\\\" name=\\\"password\\\" maxlength=\\\"maxPassword\\\" [(ngModel)]=\\\"password\\\" />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"InputDomain\\\">ドメイン：</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"InputDomain\\\" name=\\\"domainName\\\" maxlength=\\\"maxDomain\\\" [(ngModel)]=\\\"domain\\\" />\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"submit right-align\\\" (click)=\\\"login()\\\">ログイン</button>\\r\\n    <br />\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"InputDomain\\\">文書ID：</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DocumentId\\\" name=\\\"documentId\\\" [(ngModel)]=\\\"documentId\\\" />\\r\\n    </div>\\r\\n    <button type=\\\"submit\\\" class=\\\"submit right-align\\\" (click)=\\\"login(true)\\\">Viewerログイン</button>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label></label>\\r\\n      <div class=\\\"form-control\\\">{{ accountName }}</div>\\r\\n    </div>\\r\\n  </form>\\r\\n  <iframe #cookieIframe [src]=\\\"cookieIframeSrc\\\" height=\\\"0px\\\" width=\\\"0px\\\"></iframe>\\r\\n</div>\\r\\n\"","module.exports = \"@charset \\\"UTF-8\\\";\\n* {\\n  font-family: 'メイリオ', 'MS PGothic', 'sans-serif';\\n  font-size: 16px; }\\n.center {\\n  width: 40em;\\n  margin: 0 auto; }\\n.center-form {\\n  width: 30em;\\n  margin: 0 auto; }\\n.right-align {\\n  margin-left: auto;\\n  margin-right: 0; }\\n.emphasis {\\n  color: salmon; }\\n.form-container {\\n  display: flex;\\n  flex-flow: column nowrap;\\n  align-content: center; }\\n.form-container .form-group {\\n    margin: 0.2em;\\n    align-items: center;\\n    display: flex; }\\n.form-container .form-group label {\\n      text-align: right;\\n      width: 6em;\\n      font-weight: bold;\\n      font-size: 1em; }\\n.form-container .form-group .form-control {\\n      flex: 1 1 auto; }\\n.form-container .form-group input {\\n      border-radius: 2px; }\\n.form-container .submit {\\n    margin-top: 0.2em;\\n    width: 10em;\\n    border-radius: 4px; }\\n.messageArea {\\n  text-align: center;\\n  width: 640px; }\\n/* Title Area\\r\\n---------- ---------- */\\n.TitleArea {\\n  width: 640px;\\n  margin-top: 20px;\\n  margin-bottom: 10px;\\n  height: 204px;\\n  color: #004790;\\n  background: #b0ffff url('bg_titlearea.png') 0 0 no-repeat; }\\n.TitleArea h1 {\\n    margin: 0;\\n    padding: 80px 0 0;\\n    font-weight: bold; }\\n.TitleArea p.Version {\\n    margin: 0;\\n    padding: 117px 0 0; }\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbG9naW4vY29tcG9uZW50cy9sb2dpbi9FOlxcYW5ndWxhci13b3Jrc3BhY2VcXHNtYS1uYXZpXFxhbmd1bGFyXFxyc24vc3JjXFxhcHBcXGxvZ2luXFxjb21wb25lbnRzXFxsb2dpblxcbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FDQWhCO0VBQ0UsK0NBQWE7RUFDYixlQUFlLEVBQUE7QUFRakI7RUFKRSxXQUtvQjtFQUpwQixjQUFjLEVBQUE7QUFPaEI7RUFSRSxXQVNvQjtFQVJwQixjQUFjLEVBQUE7QUFXaEI7RUFDRSxpQkFBaUI7RUFDakIsZUFBZSxFQUFBO0FBR2pCO0VBQ0UsYUFBYSxFQUFBO0FBR2Y7RUFDRSxhQUFhO0VBQ2Isd0JBQXdCO0VBQ3hCLHFCQUFxQixFQUFBO0FBSHZCO0lBTUksYUFBYTtJQUNiLG1CQUFtQjtJQUVuQixhQUFhLEVBQUE7QUFUakI7TUFZTSxpQkFBaUI7TUFDakIsVUFBVTtNQUNWLGlCQUFpQjtNQUNqQixjQUFjLEVBQUE7QUFmcEI7TUFtQk0sY0FBYyxFQUFBO0FBbkJwQjtNQXVCTSxrQkFBa0IsRUFBQTtBQXZCeEI7SUE0QkksaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0IsRUFBQTtBQUl0QjtFQUNFLGtCQUFrQjtFQUNsQixZQUFZLEVBQUE7QUFHZDt1QkRuQnVCO0FDcUJ2QjtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBRW5CLGFBQWE7RUFDYixjQUFjO0VBQ2QseURBQWtGLEVBQUE7QUFQcEY7SUFVSSxTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLGlCQUFpQixFQUFBO0FBWnJCO0lBZ0JJLFNBQVM7SUFDVCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG4qIHtcbiAgZm9udC1mYW1pbHk6ICfjg6HjgqTjg6rjgqonLCAnTVMgUEdvdGhpYycsICdzYW5zLXNlcmlmJztcbiAgZm9udC1zaXplOiAxNnB4OyB9XG5cbi5jZW50ZXIge1xuICB3aWR0aDogNDBlbTtcbiAgbWFyZ2luOiAwIGF1dG87IH1cblxuLmNlbnRlci1mb3JtIHtcbiAgd2lkdGg6IDMwZW07XG4gIG1hcmdpbjogMCBhdXRvOyB9XG5cbi5yaWdodC1hbGlnbiB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IDA7IH1cblxuLmVtcGhhc2lzIHtcbiAgY29sb3I6IHNhbG1vbjsgfVxuXG4uZm9ybS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAuZm9ybS1jb250YWluZXIgLmZvcm0tZ3JvdXAge1xuICAgIG1hcmdpbjogMC4yZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgLmZvcm0tY29udGFpbmVyIC5mb3JtLWdyb3VwIGxhYmVsIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgd2lkdGg6IDZlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAxZW07IH1cbiAgICAuZm9ybS1jb250YWluZXIgLmZvcm0tZ3JvdXAgLmZvcm0tY29udHJvbCB7XG4gICAgICBmbGV4OiAxIDEgYXV0bzsgfVxuICAgIC5mb3JtLWNvbnRhaW5lciAuZm9ybS1ncm91cCBpbnB1dCB7XG4gICAgICBib3JkZXItcmFkaXVzOiAycHg7IH1cbiAgLmZvcm0tY29udGFpbmVyIC5zdWJtaXQge1xuICAgIG1hcmdpbi10b3A6IDAuMmVtO1xuICAgIHdpZHRoOiAxMGVtO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDsgfVxuXG4ubWVzc2FnZUFyZWEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiA2NDBweDsgfVxuXG4vKiBUaXRsZSBBcmVhXHJcbi0tLS0tLS0tLS0gLS0tLS0tLS0tLSAqL1xuLlRpdGxlQXJlYSB7XG4gIHdpZHRoOiA2NDBweDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgaGVpZ2h0OiAyMDRweDtcbiAgY29sb3I6ICMwMDQ3OTA7XG4gIGJhY2tncm91bmQ6ICNiMGZmZmYgdXJsKFwiLi8uLi8uLi8uLi8uLi9hc3NldHMvZGV2L2JnX3RpdGxlYXJlYS5wbmdcIikgMCAwIG5vLXJlcGVhdDsgfVxuICAuVGl0bGVBcmVhIGgxIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogODBweCAwIDA7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgLlRpdGxlQXJlYSBwLlZlcnNpb24ge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAxMTdweCAwIDA7IH1cbiIsIioge1xyXG4gIGZvbnQtZmFtaWx5OiAn44Oh44Kk44Oq44KqJywgJ01TIFBHb3RoaWMnLCAnc2Fucy1zZXJpZic7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG5AbWl4aW4gY2VudGVyKCR3aWR0aCkge1xyXG4gIHdpZHRoOiAkd2lkdGg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi5jZW50ZXIge1xyXG4gIEBpbmNsdWRlIGNlbnRlcig0MGVtKTtcclxufVxyXG5cclxuLmNlbnRlci1mb3JtIHtcclxuICBAaW5jbHVkZSBjZW50ZXIoMzBlbSk7XHJcbn1cclxuXHJcbi5yaWdodC1hbGlnbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiAwO1xyXG59XHJcblxyXG4uZW1waGFzaXMge1xyXG4gIGNvbG9yOiBzYWxtb247XHJcbn1cclxuXHJcbi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xyXG5cclxuICAuZm9ybS1ncm91cCB7XHJcbiAgICBtYXJnaW46IDAuMmVtO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAgIGxhYmVsIHtcclxuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgIHdpZHRoOiA2ZW07XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICBmb250LXNpemU6IDFlbTtcclxuICAgIH1cclxuXHJcbiAgICAuZm9ybS1jb250cm9sIHtcclxuICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgaW5wdXQge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuc3VibWl0IHtcclxuICAgIG1hcmdpbi10b3A6IDAuMmVtO1xyXG4gICAgd2lkdGg6IDEwZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgfVxyXG59XHJcblxyXG4ubWVzc2FnZUFyZWEge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB3aWR0aDogNjQwcHg7XHJcbn1cclxuXHJcbi8qIFRpdGxlIEFyZWFcclxuLS0tLS0tLS0tLSAtLS0tLS0tLS0tICovXHJcbi5UaXRsZUFyZWEge1xyXG4gIHdpZHRoOiA2NDBweDtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgLy8gIHBhZGRpbmc6IDAgMjBweDtcclxuICBoZWlnaHQ6IDIwNHB4O1xyXG4gIGNvbG9yOiAjMDA0NzkwO1xyXG4gIGJhY2tncm91bmQ6ICNiMGZmZmYgdXJsKCcuLy4uLy4uLy4uLy4uL2Fzc2V0cy9kZXYvYmdfdGl0bGVhcmVhLnBuZycpIDAgMCBuby1yZXBlYXQ7XHJcblxyXG4gIGgxIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDgwcHggMCAwO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG5cclxuICBwLlZlcnNpb24ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMTE3cHggMCAwO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { environment } from '../../../../environments/environment';\r\nimport { Logger } from '../../../core/services/logger.service';\r\nimport { LoginService } from '../../../core/services/login.service';\r\nimport { RoutingManageService } from '../../../core/services/routing-manage.service';\r\nimport { urlConfig } from '../../../core/services/url.config';\r\nimport { StorageKey } from '../../../core/storage-key';\r\nimport { SubscriptionManager } from '../../../core/utils/subscription-manager';\r\n\r\nimport { AuthenticationError } from './../../../core/models/authentication-error';\r\n\r\n/**\r\n * 開発用ログインページです\r\n *\r\n * 認証を依頼し、ガードされたページにナビゲートします\r\n */\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  readonly maxAccountName = 32;\r\n  readonly maxPassword = 128;\r\n  readonly maxDomain = 255;\r\n\r\n  accountName: string;\r\n  password: string;\r\n  domain: string;\r\n  documentId: string;\r\n  cookieIframeSrc: SafeResourceUrl;\r\n\r\n  @ViewChild('cookieIframe', { read: ElementRef }) cookieIframe: ElementRef<HTMLIFrameElement>;\r\n\r\n  redirectUrl$: Observable<string>;\r\n\r\n  private subscription: SubscriptionManager = new SubscriptionManager();\r\n\r\n  constructor(\r\n    private logger: Logger,\r\n    private loginService: LoginService,\r\n    private sanitizer: DomSanitizer,\r\n    private routingManager: RoutingManageService\r\n  ) {\r\n    // http://サーバー/rsn/dist/assets/cookieWriter.htmlにファイルが存在する前提です\r\n    this.cookieIframeSrc = sanitizer.bypassSecurityTrustResourceUrl(\r\n      environment.apiOrigin + urlConfig.baseHref + '/dist/assets/cookieWriter.html'\r\n    );\r\n    console.log('iframe src=' + this.cookieIframeSrc);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // 何か文字列をセットしておがないとundefinedのまま\r\n    this.accountName = '';\r\n    this.password = '';\r\n    this.domain = '';\r\n    this.documentId = '';\r\n\r\n    this.redirectUrl$ = of(this.loginService.getRedirectUrl());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribeAll();\r\n  }\r\n\r\n  /**\r\n   * ログインに成功したらナビゲートします\r\n   */\r\n  login(isViewer?: boolean) {\r\n    document.body.style.cursor = 'wait';\r\n\r\n    this.subscription.set(\r\n      'login',\r\n      this.loginService.login(this.accountName.trim(), this.password.trim(), this.domain.trim()).subscribe(\r\n        // onSucceeded\r\n        (succeeded: boolean) => {\r\n          this.logger.info('Login result ', succeeded);\r\n          document.body.style.cursor = 'auto';\r\n          if (isViewer) {\r\n            // Viewerに遷移させる\r\n            this.loginService.setRedirectUrl('');\r\n            this.loginService.queryParams = { queryParams: { appId: 'Viewer', DocID: this.documentId } };\r\n            // Viewer用のルーティング設定で上書きする\r\n            this.routingManager.setConfigForViewer();\r\n          } else if (!this.loginService.getRedirectUrl()) {\r\n            // リダイレクト先が存在しない場合はMainに遷移させる\r\n            this.loginService.setRedirectUrl('');\r\n            // Main用のルーティング設定で上書きする\r\n            this.routingManager.setConfigForMain();\r\n          }\r\n\r\n          // cookie ifrmeにセッションIDを通知する\r\n          const accessToken = localStorage.getItem(StorageKey.token);\r\n          const iframeWindow = this.cookieIframe && this.cookieIframe.nativeElement && this.cookieIframe.nativeElement.contentWindow;\r\n          if (iframeWindow) {\r\n            console.log('do postMessage: ' + accessToken);\r\n            iframeWindow.postMessage(accessToken, '*');\r\n          }\r\n          // 遷移するとiframeが消えるのでcookieが書き終わる前に遷移しないよう待ち時間を入れている\r\n          setTimeout(() => this.loginService.navigate(), 500);\r\n        },\r\n        // onError\r\n        (error: any) => {\r\n          document.body.style.cursor = 'auto';\r\n          const authError = new AuthenticationError(error);\r\n          window.alert(authError.getMessage());\r\n        },\r\n        // completed\r\n        () => {\r\n          this.logger.info('login completed.');\r\n        }\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\n/**\r\n * LoginModuleのルーティング設定\r\n */\r\nconst loginRoutes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n/**\r\n * LoginModuleのルーティングモジュール\r\n */\r\n@NgModule({\r\n  imports: [RouterModule.forChild(loginRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoginRoutingModule } from './login-routing.module';\r\n\r\n/**\r\n * 開発用ログインページを提供するモジュール\r\n *\r\n * 製品版ではjspのログインページが表示される\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, LoginRoutingModule],\r\n  declarations: [LoginComponent]\r\n})\r\nexport class LoginModule {}\r\n"],"sourceRoot":""}